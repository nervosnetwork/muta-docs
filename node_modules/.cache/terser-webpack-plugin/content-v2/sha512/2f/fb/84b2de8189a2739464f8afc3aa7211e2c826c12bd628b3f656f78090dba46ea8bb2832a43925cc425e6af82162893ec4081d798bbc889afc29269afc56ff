{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{179:function(e,t,a){\"use strict\";a.r(t),a.d(t,\"frontMatter\",(function(){return u})),a.d(t,\"metadata\",(function(){return m})),a.d(t,\"rightToc\",(function(){return b})),a.d(t,\"default\",(function(){return p}));var n=a(1),l=a(6),r=(a(0),a(307)),i=a(309),s=a(310),c=a(312),o=a(311),u={last_modified_on:\"2020-07-13\",delivery_guarantee:\"at_least_once\",component_title:\"Datadog Metrics\",description:\"The Vector `datadog_metrics` sink batches `metric` events to Datadog's metrics service using HTTP API.\",event_types:[\"metric\"],function_category:\"transmit\",issues_url:\"https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22sink%3A+datadog_metrics%22\",operating_systems:[\"Linux\",\"MacOS\",\"Windows\"],sidebar_label:'datadog_metrics|[\"metric\"]',source_url:\"https://github.com/timberio/vector/tree/master/src/sinks/datadog/metrics.rs\",status:\"beta\",title:\"Datadog Metrics Sink\",unsupported_operating_systems:[]},m={id:\"reference/sinks/datadog_metrics\",title:\"Datadog Metrics Sink\",description:\"The Vector `datadog_metrics` sink batches `metric` events to Datadog's metrics service using HTTP API.\",source:\"@site/docs/reference/sinks/datadog_metrics.md\",permalink:\"/docs/reference/sinks/datadog_metrics\",editUrl:\"https://github.com/nervosnetwork/muta/edit/master/website/docs/reference/sinks/datadog_metrics.md\",sidebar_label:'datadog_metrics|[\"metric\"]'},b=[{value:\"Configuration\",id:\"configuration\",children:[{value:\"api_key\",id:\"api_key\",children:[]},{value:\"batch\",id:\"batch\",children:[]},{value:\"healthcheck\",id:\"healthcheck\",children:[]},{value:\"host\",id:\"host\",children:[]},{value:\"namespace\",id:\"namespace\",children:[]},{value:\"request\",id:\"request\",children:[]}]},{value:\"How It Works\",id:\"how-it-works\",children:[{value:\"Environment Variables\",id:\"environment-variables\",children:[]},{value:\"Health Checks\",id:\"health-checks\",children:[]},{value:\"Metric Types\",id:\"metric-types\",children:[]},{value:\"Rate Limits\",id:\"rate-limits\",children:[]},{value:\"Retry Policy\",id:\"retry-policy\",children:[]}]}],d={rightToc:b};function p(e){var t=e.components,a=Object(l.a)(e,[\"components\"]);return Object(r.b)(\"wrapper\",Object(n.a)({},d,a,{components:t,mdxType:\"MDXLayout\"}),Object(r.b)(\"p\",null,\"The Vector \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"datadog_metrics\"),\" sink\\n\",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"#buffers--batches\"}),\"batches\"),\" \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/docs/about/data-model/metric/\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"metric\")),\" events to\\n\",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"https://www.datadoghq.com\"}),\"Datadog's\"),\" metrics service using \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"https://docs.datadoghq.com/api/?lang=bash#metrics\"}),\"HTTP\\nAPI\"),\".\"),Object(r.b)(\"h2\",{id:\"configuration\"},\"Configuration\"),Object(r.b)(c.a,{block:!0,defaultValue:\"common\",values:[{label:\"Common\",value:\"common\"},{label:\"Advanced\",value:\"advanced\"}],mdxType:\"Tabs\"},Object(r.b)(o.a,{value:\"common\",mdxType:\"TabItem\"},Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-toml\",metastring:'title=\"vector.toml\"',title:'\"vector.toml\"'}),'[sinks.my_sink_id]\\n  type = \"datadog_metrics\" # required\\n  inputs = [\"my-source-or-transform-id\"] # required\\n  api_key = \"${DATADOG_API_KEY}\" # required\\n  healthcheck = true # optional, default\\n  namespace = \"service\" # required\\n'))),Object(r.b)(o.a,{value:\"advanced\",mdxType:\"TabItem\"},Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-toml\",metastring:'title=\"vector.toml\"',title:'\"vector.toml\"'}),'[sinks.my_sink_id]\\n  # General\\n  type = \"datadog_metrics\" # required\\n  inputs = [\"my-source-or-transform-id\"] # required\\n  api_key = \"${DATADOG_API_KEY}\" # required\\n  healthcheck = true # optional, default\\n  host = \"https://api.datadoghq.com\" # optional, default\\n  namespace = \"service\" # required\\n\\n  # Batch\\n  batch.max_events = 20 # optional, default, events\\n  batch.timeout_secs = 1 # optional, default, seconds\\n\\n  # Request\\n  request.in_flight_limit = 5 # optional, default, requests\\n  request.rate_limit_duration_secs = 1 # optional, default, seconds\\n  request.rate_limit_num = 5 # optional, default\\n  request.retry_attempts = 18446744073709551615 # optional, default\\n  request.retry_initial_backoff_secs = 1 # optional, default, seconds\\n  request.retry_max_duration_secs = 10 # optional, default, seconds\\n  request.timeout_secs = 60 # optional, default, seconds\\n')))),Object(r.b)(i.a,{filters:!0,mdxType:\"Fields\"},Object(r.b)(s.a,{common:!0,defaultValue:null,enumValues:null,examples:[\"${DATADOG_API_KEY}\",\"ef8d5de700e7989468166c40fc8a0ccd\"],groups:[],name:\"api_key\",path:null,relevantWhen:null,required:!0,templateable:!1,type:\"string\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h3\",{id:\"api_key\"},\"api_key\"),Object(r.b)(\"p\",null,\"Datadog \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"https://docs.datadoghq.com/api/?lang=bash#authentication\"}),\"API key\"))),Object(r.b)(s.a,{common:!1,defaultValue:null,enumValues:null,examples:[],groups:[],name:\"batch\",path:null,relevantWhen:null,required:!1,templateable:!1,type:\"table\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h3\",{id:\"batch\"},\"batch\"),Object(r.b)(\"p\",null,\"Configures the sink batching behavior.\"),Object(r.b)(i.a,{filters:!1,mdxType:\"Fields\"},Object(r.b)(s.a,{common:!0,defaultValue:20,enumValues:null,examples:[20],groups:[],name:\"max_events\",path:\"batch\",relevantWhen:null,required:!1,templateable:!1,type:\"uint\",unit:\"events\",warnings:[],mdxType:\"Field\"},Object(r.b)(\"h4\",{id:\"max_events\"},\"max_events\"),Object(r.b)(\"p\",null,\"The maximum size of a batch, in events, before it is flushed.\")),Object(r.b)(s.a,{common:!0,defaultValue:1,enumValues:null,examples:[1],groups:[],name:\"timeout_secs\",path:\"batch\",relevantWhen:null,required:!1,templateable:!1,type:\"uint\",unit:\"seconds\",warnings:[],mdxType:\"Field\"},Object(r.b)(\"h4\",{id:\"timeout_secs\"},\"timeout_secs\"),Object(r.b)(\"p\",null,\"The maximum age of a batch before it is flushed.\")))),Object(r.b)(s.a,{common:!0,defaultValue:!0,enumValues:null,examples:[!0,!1],groups:[],name:\"healthcheck\",path:null,relevantWhen:null,required:!1,templateable:!1,type:\"bool\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h3\",{id:\"healthcheck\"},\"healthcheck\"),Object(r.b)(\"p\",null,\"Enables/disables the sink healthcheck upon start.\\nSee \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"#health-checks\"}),\"Health Checks\"),\" for more info.\")),Object(r.b)(s.a,{common:!1,defaultValue:\"https://api.datadoghq.com\",enumValues:null,examples:[\"https://api.datadoghq.com\",\"https://api.datadoghq.eu\"],groups:[],name:\"host\",path:null,relevantWhen:null,required:!1,templateable:!1,type:\"string\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h3\",{id:\"host\"},\"host\"),Object(r.b)(\"p\",null,\"Datadog endpoint to send metrics to.\")),Object(r.b)(s.a,{common:!0,defaultValue:null,enumValues:null,examples:[\"service\"],groups:[],name:\"namespace\",path:null,relevantWhen:null,required:!0,templateable:!1,type:\"string\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h3\",{id:\"namespace\"},\"namespace\"),Object(r.b)(\"p\",null,\"A prefix that will be added to all metric names.\")),Object(r.b)(s.a,{common:!1,defaultValue:null,enumValues:null,examples:[],groups:[],name:\"request\",path:null,relevantWhen:null,required:!1,templateable:!1,type:\"table\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h3\",{id:\"request\"},\"request\"),Object(r.b)(\"p\",null,\"Configures the sink request behavior.\"),Object(r.b)(i.a,{filters:!1,mdxType:\"Fields\"},Object(r.b)(s.a,{common:!0,defaultValue:5,enumValues:null,examples:[5],groups:[],name:\"in_flight_limit\",path:\"request\",relevantWhen:null,required:!1,templateable:!1,type:\"uint\",unit:\"requests\",warnings:[],mdxType:\"Field\"},Object(r.b)(\"h4\",{id:\"in_flight_limit\"},\"in_flight_limit\"),Object(r.b)(\"p\",null,\"The maximum number of in-flight requests allowed at any given time.\\nSee \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"#rate-limits\"}),\"Rate Limits\"),\" for more info.\")),Object(r.b)(s.a,{common:!0,defaultValue:1,enumValues:null,examples:[1],groups:[],name:\"rate_limit_duration_secs\",path:\"request\",relevantWhen:null,required:!1,templateable:!1,type:\"uint\",unit:\"seconds\",warnings:[],mdxType:\"Field\"},Object(r.b)(\"h4\",{id:\"rate_limit_duration_secs\"},\"rate_limit_duration_secs\"),Object(r.b)(\"p\",null,\"The time window, in seconds, used for the \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"#rate_limit_num\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"rate_limit_num\")),\" option.\\nSee \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"#rate-limits\"}),\"Rate Limits\"),\" for more info.\")),Object(r.b)(s.a,{common:!0,defaultValue:5,enumValues:null,examples:[5],groups:[],name:\"rate_limit_num\",path:\"request\",relevantWhen:null,required:!1,templateable:!1,type:\"uint\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h4\",{id:\"rate_limit_num\"},\"rate_limit_num\"),Object(r.b)(\"p\",null,\"The maximum number of requests allowed within the \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"#rate_limit_duration_secs\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"rate_limit_duration_secs\")),\"\\ntime window.\\nSee \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"#rate-limits\"}),\"Rate Limits\"),\" for more info.\")),Object(r.b)(s.a,{common:!1,defaultValue:0x10000000000000000,enumValues:null,examples:[0x10000000000000000],groups:[],name:\"retry_attempts\",path:\"request\",relevantWhen:null,required:!1,templateable:!1,type:\"uint\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h4\",{id:\"retry_attempts\"},\"retry_attempts\"),Object(r.b)(\"p\",null,\"The maximum number of retries to make for failed requests. The default, for all\\nintents and purposes, represents an infinite number of retries.\\nSee \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"#retry-policy\"}),\"Retry Policy\"),\" for more info.\")),Object(r.b)(s.a,{common:!1,defaultValue:1,enumValues:null,examples:[1],groups:[],name:\"retry_initial_backoff_secs\",path:\"request\",relevantWhen:null,required:!1,templateable:!1,type:\"uint\",unit:\"seconds\",warnings:[],mdxType:\"Field\"},Object(r.b)(\"h4\",{id:\"retry_initial_backoff_secs\"},\"retry_initial_backoff_secs\"),Object(r.b)(\"p\",null,\"The amount of time to wait before attempting the first retry for a failed\\nrequest. Once, the first retry has failed the fibonacci sequence will be used\\nto select future backoffs.\")),Object(r.b)(s.a,{common:!1,defaultValue:10,enumValues:null,examples:[10],groups:[],name:\"retry_max_duration_secs\",path:\"request\",relevantWhen:null,required:!1,templateable:!1,type:\"uint\",unit:\"seconds\",warnings:[],mdxType:\"Field\"},Object(r.b)(\"h4\",{id:\"retry_max_duration_secs\"},\"retry_max_duration_secs\"),Object(r.b)(\"p\",null,\"The maximum amount of time, in seconds, to wait between retries.\")),Object(r.b)(s.a,{common:!0,defaultValue:60,enumValues:null,examples:[60],groups:[],name:\"timeout_secs\",path:\"request\",relevantWhen:null,required:!1,templateable:!1,type:\"uint\",unit:\"seconds\",warnings:[],mdxType:\"Field\"},Object(r.b)(\"h4\",{id:\"timeout_secs-1\"},\"timeout_secs\"),Object(r.b)(\"p\",null,\"The maximum time a request can take before being aborted. It is highly\\nrecommended that you do not lower value below the service's internal timeout,\\nas this could create orphaned requests, pile on retries, and result in\\nduplicate data downstream.\"))))),Object(r.b)(\"h2\",{id:\"how-it-works\"},\"How It Works\"),Object(r.b)(\"h3\",{id:\"environment-variables\"},\"Environment Variables\"),Object(r.b)(\"p\",null,\"Environment variables are supported through all of Vector's configuration.\\nSimply add \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"${MY_ENV_VAR}\"),\" in your Vector configuration file and the variable\\nwill be replaced before being evaluated.\"),Object(r.b)(\"p\",null,\"You can learn more in the\\n\",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/docs/setup/configuration/#environment-variables\"}),\"Environment Variables\"),\" section.\"),Object(r.b)(\"h3\",{id:\"health-checks\"},\"Health Checks\"),Object(r.b)(\"p\",null,\"Health checks ensure that the downstream service is accessible and ready to\\naccept data. This check is performed upon sink initialization.\\nIf the health check fails an error will be logged and Vector will proceed to\\nstart.\"),Object(r.b)(\"h4\",{id:\"require-health-checks\"},\"Require Health Checks\"),Object(r.b)(\"p\",null,\"If you'd like to exit immediately upon a health check failure, you can\\npass the \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"--require-healthy\"),\" flag:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-bash\"}),\"vector --config /etc/vector/vector.toml --require-healthy\\n\")),Object(r.b)(\"h4\",{id:\"disable-health-checks\"},\"Disable Health Checks\"),Object(r.b)(\"p\",null,\"If you'd like to disable health checks for this sink you can set the\\n\",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"healthcheck\"),\" option to \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"false\"),\".\"),Object(r.b)(\"h3\",{id:\"metric-types\"},\"Metric Types\"),Object(r.b)(\"p\",null,\"Datadog accepts the following types for \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"https://docs.datadoghq.com/developers/metrics/#submission-types-and-datadog-in-app-types\"}),\"submission via API\"),\":\"),Object(r.b)(\"ul\",null,Object(r.b)(\"li\",{parentName:\"ul\"},\"Count\"),Object(r.b)(\"li\",{parentName:\"ul\"},\"Gauge\"),Object(r.b)(\"li\",{parentName:\"ul\"},\"Rate\")),Object(r.b)(\"p\",null,\"The following matrix outlines how Vector metric types are mapped into Datadog metrics types.\"),Object(r.b)(\"table\",null,Object(r.b)(\"thead\",{parentName:\"table\"},Object(r.b)(\"tr\",{parentName:\"thead\"},Object(r.b)(\"th\",Object(n.a)({parentName:\"tr\"},{align:null}),\"Vector Metrics\"),Object(r.b)(\"th\",Object(n.a)({parentName:\"tr\"},{align:null}),\"Datadog Metrics\"))),Object(r.b)(\"tbody\",{parentName:\"table\"},Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),\"Counter\"),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),\"Count\")),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),\"Gauge\"),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),\"Gauge\")),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),\"Gauge Delta\"),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),\"N/A\")),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),\"Histogram\"),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),\"Count \",\"[1]\")),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),\"Set\"),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),\"N/A\")))),Object(r.b)(\"ol\",null,Object(r.b)(\"li\",{parentName:\"ol\"},\"Aggregation of Histogram values is not supported at the moment. Histogram values will be sent as is, as raw Count values.\")),Object(r.b)(\"h3\",{id:\"rate-limits\"},\"Rate Limits\"),Object(r.b)(\"p\",null,\"Vector offers a few levers to control the rate and volume of requests to the\\ndownstream service. Start with the \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"#rate_limit_duration_secs\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"rate_limit_duration_secs\")),\" and\\n\",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"rate_limit_num\"),\" options to ensure Vector does not exceed the specified\\nnumber of requests in the specified window. You can further control the pace at\\nwhich this window is saturated with the \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"#in_flight_limit\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"in_flight_limit\")),\" option, which\\nwill guarantee no more than the specified number of requests are in-flight at\\nany given time.\"),Object(r.b)(\"p\",null,\"Please note, Vector's defaults are carefully chosen and it should be rare that\\nyou need to adjust these. If you found a good reason to do so please share it\\nwith the Vector team by \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"https://github.com/timberio/vector/issues/new?labels=sink%3A+datadog_metrics\"}),\"opening an issue\"),\".\"),Object(r.b)(\"h3\",{id:\"retry-policy\"},\"Retry Policy\"),Object(r.b)(\"p\",null,\"Vector will retry failed requests (status == \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"429\"),\", >= \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"500\"),\", and != \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"501\"),\").\\nOther responses will \",Object(r.b)(\"em\",{parentName:\"p\"},\"not\"),\" be retried. You can control the number of retry\\nattempts and backoff rate with the \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"#retry_attempts\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"retry_attempts\")),\" and\\n\",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"retry_backoff_secs\"),\" options.\"))}p.isMDXComponent=!0},309:function(e,t,a){\"use strict\";a(12);var n=a(0),l=a.n(n),r=a(318),i=a(317),s=a(316),c=a.n(s);t.a=function({children:e,filters:t}){const[a,s]=Object(n.useState)(!1),[o,u]=Object(n.useState)(new Set),[m,b]=Object(n.useState)(!1),[d,p]=Object(n.useState)(null);let h=[];e&&(h=Array.isArray(e)?e:[e]);let f=h.some(e=>e.props.common),O=c()(h).flatMap(e=>e.props.groups).uniq().value(),g=h.some(e=>e.props.required),j=h;return a&&(j=j.filter(e=>e.props.common)),o.size>0&&(j=j.filter(e=>Array.from(o).every(t=>e.props.groups.includes(t)))),m&&(j=j.filter(e=>e.props.required)),d&&(j=j.filter(e=>e.props.name.toLowerCase().includes(d.toLowerCase()))),l.a.createElement(l.a.Fragment,null,h.length>1&&!1!==t?l.a.createElement(\"div\",{className:\"filters\"},l.a.createElement(\"div\",{className:\"search\"},l.a.createElement(\"span\",{className:\"search--result-count\"},j.length,\" items\"),l.a.createElement(\"input\",{className:\"input--text input--lg\",type:\"text\",onChange:e=>p(e.currentTarget.value),placeholder:\"\\ud83d\\udd0d Search...\"})),l.a.createElement(\"div\",{className:\"filter\"},l.a.createElement(\"div\",{className:\"filter--choices\"},l.a.createElement(r.a,{values:O,currentState:o,setState:u}),f&&l.a.createElement(\"label\",{title:\"Only show popular/common results\"},l.a.createElement(\"input\",{type:\"checkbox\",onChange:e=>s(e.currentTarget.checked),checked:a}),\"common\"),g&&l.a.createElement(\"label\",{title:\"Only show required results\"},l.a.createElement(\"input\",{type:\"checkbox\",onChange:e=>b(e.currentTarget.checked),checked:m}),\"required\")))):null,!Array.isArray(j)||j.length>0?l.a.createElement(\"ul\",{className:\"connected-list\"},j):l.a.createElement(i.a,{text:\"no components found\"}))}},310:function(e,t,a){\"use strict\";a(12);var n=a(0),l=a.n(n),r=a(306),i=a.n(r),s=(a(307),a(315));function c(e){return e.includes(\".\")?'\"'+e+'\"':e}function o(e){return\"string\"==typeof e&&e.includes(\"\\n\")?`\"\"\"\\n${e}\\n\"\"\"`:JSON.stringify(e)}function u(e,t){return(a=t)&&a.constructor===Object?\"name\"in t&&\"value\"in t?`${c(t.name)} = ${o(t.value)}`:`${c(Object.keys(t)[0])} = ${o(Object.values(t)[0])}`:e?`${c(e)} = ${o(t)}`:o(t);var a}function m({values:e}){let t=[];if(Array.isArray(e))for(var a in e){let n=e[a];t.push(l.a.createElement(\"code\",{key:n},o(n))),t.push(\" \")}else for(var n in e)t.push(l.a.createElement(\"code\",{key:n,className:\"with-info-icon\",title:e[n]},o(n))),t.push(\" \");return t}function b({name:e,path:t,values:a}){let n=\"\";return a.forEach((function(a){t&&(n+=t+\".\"),n+=u(e,a)+\"\\n\"})),l.a.createElement(\"div\",null,l.a.createElement(s.a,{className:\"language-toml\"},n))}function d({unit:e,value:t}){let a=\"\";return e&&(a=l.a.createElement(l.a.Fragment,null,\" (\",e,\")\")),l.a.createElement(l.a.Fragment,null,l.a.createElement(\"code\",null,o(t)),a)}function p({value:e}){let t=Object.keys(e)[0],a=Object.values(e)[0];return\"\"==a&&(a=null),l.a.createElement(\"span\",null,l.a.createElement(\"code\",null,l.a.createElement(\"a\",{href:\"#\"+t},t)),\" \",\"= \",l.a.createElement(\"code\",null,o(a)))}function h({defaultValue:e,enumValues:t,examples:a,groups:r,name:i,path:s,relevantWhen:c,required:o,unit:u,warnings:h}){const[f,O]=Object(n.useState)(!1);return l.a.createElement(\"ul\",{className:\"info\"},h&&h.length>0&&h.map((e,t)=>l.a.createElement(\"li\",{key:t,className:\"warning\"},l.a.createElement(\"i\",{className:\"feather icon-alert-triangle\"}),\" WARNING:\",\" \",e.text)),c&&l.a.createElement(\"li\",null,\"Only \",o?\"required\":\"relevant\",\" when:\",\" \",l.a.createElement(p,{value:c})),void 0!==e?null!==e?l.a.createElement(\"li\",null,\"Default: \",l.a.createElement(d,{unit:u,value:e})):l.a.createElement(\"li\",null,\"No default\"):null,t&&l.a.createElement(\"li\",null,\"Enum, must be one of: \",l.a.createElement(m,{values:t})),(a.length>1||a[0]!=e)&&l.a.createElement(\"li\",null,l.a.createElement(\"div\",{className:\"show-more\",onClick:()=>O(!f)},f?\"Hide examples\":\"View examples\"),f&&l.a.createElement(b,{name:i,path:s,values:a})))}t.a=function({children:e,common:t,defaultValue:a,enumValues:r,examples:s,groups:c,name:o,path:u,relevantWhen:m,required:b,templateable:d,type:p,unit:f,warnings:O}){const[g,j]=Object(n.useState)(!1);let y=e;return g&&(y=y.filter(e=>\"p\"!=e.props.originalType)),l.a.createElement(\"li\",{className:i()({\"field-required\":b,\"field-collapsed\":g}),required:b},l.a.createElement(\"div\",{className:\"badges\"},d&&l.a.createElement(\"span\",{className:\"badge badge--primary with-info-icon\",title:\"This option is dynamic and accepts the Vector template syntax\"},\"templateable\"),p&&l.a.createElement(\"span\",{className:\"badge badge--secondary\"},p,f&&l.a.createElement(l.a.Fragment,null,\" (\",f,\")\")),r&&Object.keys(r).length>0&&l.a.createElement(\"span\",{className:\"badge badge--secondary with-info-icon\",title:\"This option is an enumation and only allows specific values\"},\"enum\"),t&&l.a.createElement(\"span\",{className:\"badge badge--primary with-info-icon\",title:\"This is a popular that we recommend for getting started\"},\"common\"),b?l.a.createElement(\"span\",{className:\"badge badge--danger\"},\"required\",m&&\"*\"):l.a.createElement(\"span\",{className:\"badge badge--secondary\"},\"optional\")),y,!g&&\"table\"!=p&&l.a.createElement(h,{defaultValue:a,enumValues:r,examples:s,groups:c,name:o,path:u,relevantWhen:m,required:b,unit:f,warnings:O}))}}}]);","extractedComments":[]}