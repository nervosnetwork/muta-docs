{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{174:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"frontMatter\",(function(){return m})),n.d(t,\"metadata\",(function(){return d})),n.d(t,\"rightToc\",(function(){return b})),n.d(t,\"default\",(function(){return p}));var a=n(1),l=n(6),r=(n(0),n(307)),i=n(309),o=n(310),s=n(312),c=n(311),m={last_modified_on:\"2020-07-13\",component_title:\"Lua\",description:\"The Vector `lua` transform accepts and outputs `log` and `metric` events, allowing you to transform events with a full embedded Lua engine.\",event_types:[\"log\",\"metric\"],function_category:\"program\",issues_url:\"https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22transform%3A+lua%22\",operating_systems:[\"Linux\",\"MacOS\",\"Windows\"],sidebar_label:'lua|[\"log\",\"metric\"]',source_url:\"https://github.com/timberio/vector/tree/master/src/transforms/lua\",status:\"beta\",title:\"Lua Transform\",unsupported_operating_systems:[]},d={id:\"reference/transforms/lua\",title:\"Lua Transform\",description:\"The Vector `lua` transform accepts and outputs `log` and `metric` events, allowing you to transform events with a full embedded Lua engine.\",source:\"@site/docs/reference/transforms/lua.md\",permalink:\"/docs/reference/transforms/lua\",editUrl:\"https://github.com/nervosnetwork/muta/edit/master/website/docs/reference/transforms/lua.md\",sidebar_label:'lua|[\"log\",\"metric\"]'},b=[{value:\"Configuration\",id:\"configuration\",children:[{value:\"hooks\",id:\"hooks\",children:[]},{value:\"search_dirs\",id:\"search_dirs\",children:[]},{value:\"source\",id:\"source\",children:[]},{value:\"timers\",id:\"timers\",children:[]},{value:\"version\",id:\"version\",children:[]}]},{value:\"Examples\",id:\"examples\",children:[]},{value:\"How It Works\",id:\"how-it-works\",children:[{value:\"Add Fields &amp; Tags\",id:\"add-fields--tags\",children:[]},{value:\"Defining Timestamps\",id:\"defining-timestamps\",children:[]},{value:\"Drop Events\",id:\"drop-events\",children:[]},{value:\"Environment Variables\",id:\"environment-variables\",children:[]},{value:\"Iterate Over Fields &amp; Tags\",id:\"iterate-over-fields--tags\",children:[]},{value:\"Learning Lua\",id:\"learning-lua\",children:[]},{value:\"Lua Version\",id:\"lua-version\",children:[]},{value:\"Remove Fields &amp; Tags\",id:\"remove-fields--tags\",children:[]},{value:\"Representation of Events\",id:\"representation-of-events\",children:[]},{value:\"Search Directories\",id:\"search-directories\",children:[]}]}],u={rightToc:b};function p(e){var t=e.components,n=Object(l.a)(e,[\"components\"]);return Object(r.b)(\"wrapper\",Object(a.a)({},u,n,{components:t,mdxType:\"MDXLayout\"}),Object(r.b)(\"p\",null,\"The Vector \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"lua\"),\" transform\\naccepts and outputs \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/docs/about/data-model/log/\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"log\")),\" and\\n\",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/docs/about/data-model/metric/\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"metric\")),\" events, allowing you to transform events\\nwith a full embedded \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"https://www.lua.org/\"}),\"Lua\"),\" engine.\"),Object(r.b)(\"h2\",{id:\"configuration\"},\"Configuration\"),Object(r.b)(s.a,{block:!0,defaultValue:\"simple\",values:[{label:\"simple\",value:\"simple\"},{label:\"inline\",value:\"inline\"},{label:\"module\",value:\"module\"}],mdxType:\"Tabs\"},Object(r.b)(c.a,{value:\"simple\",mdxType:\"TabItem\"},Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-toml\",metastring:'title=\"vector.toml\"',title:'\"vector.toml\"'}),'[transforms.my_transform_id]\\n  # General\\n  type = \"lua\" # required\\n  inputs = [\"my-source-or-transform-id\"] # required\\n  version = \"2\" # required\\n\\n  # Hooks\\n  hooks.process = \"\"\"\\n  function (event, emit)\\n    event.log.field = \"value\" -- set value of a field\\n    event.log.another_field = nil -- remove field\\n    event.log.first, event.log.second = nil, event.log.first -- rename field\\n\\n    -- Very important! Emit the processed event.\\n    emit(event)\\n  end\\n  \"\"\"\\n'))),Object(r.b)(c.a,{value:\"inline\",mdxType:\"TabItem\"},Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-toml\",metastring:'title=\"vector.toml\"',title:'\"vector.toml\"'}),'[transforms.my_transform_id]\\n  # General\\n  type = \"lua\" # required\\n  inputs = [\"my-source-or-transform-id\"] # required\\n  version = \"2\" # required\\n\\n  # Hooks\\n  hooks.init = \"init\" # optional, no default\\n  hooks.process = \"process\" # required\\n  hooks.shutdown = \"shutdown\" # optional, no default\\n\\n  # Timers\\n  timers = [\\n  {interval_seconds = 5, handler = \"timer_handler\"}\\n  ]\\n\\n  # Source Code\\n  source = \"\"\"\\n  function init()\\n    count = 0\\n  end\\n\\n  function process()\\n    count = count + 1\\n  end\\n\\n  function timer_handler(emit)\\n    emit(make_counter(counter))\\n    counter = 0\\n  end\\n\\n  function shutdown(emit)\\n    emit(make_counter(counter))\\n  end\\n\\n  function make_counter(value)\\n    return metric = {\\n      name = \"event_counter\",\\n      kind = \"incremental\",\\n      timestamp = os.date(\"!*t\"),\\n      counter = {\\n        value = value\\n      }\\n    }\\n  end\\n  \"\"\"\\n'))),Object(r.b)(c.a,{value:\"module\",mdxType:\"TabItem\"},Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-toml\",metastring:'title=\"vector.toml\"',title:'\"vector.toml\"'}),'[transforms.my_transform_id]\\n  # General\\n  type = \"lua\" # required\\n  inputs = [\"my-source-or-transform-id\"] # required\\n  version = \"2\" # required\\n  search_dirs = [\"/etc/vector/lua\"] # optional, no default\\n\\n  # Hooks\\n  hooks.init = \"init\" # optional, no default\\n  hooks.process = \"process\" # required\\n  hooks.shutdown = \"shutdown\" # optional, no default\\n\\n  # Timers\\n  timers = [\\n  {interval_seconds = 5, handler = \"timer_handler\"}\\n  ]\\n\\n  # Source Code\\n  source = \"\"\"\\n  -- external file with hooks and timers defined\\n  require(\\'custom_module\\')\\n  \"\"\"\\n')))),Object(r.b)(i.a,{filters:!0,mdxType:\"Fields\"},Object(r.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:[],groups:[\"simple\",\"inline\",\"module\"],name:\"hooks\",path:null,relevantWhen:null,required:!0,templateable:!1,type:\"table\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h3\",{id:\"hooks\"},\"hooks\"),Object(r.b)(\"p\",null,\"Configures hooks handlers.\"),Object(r.b)(i.a,{filters:!1,mdxType:\"Fields\"},Object(r.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:[\"init\",\"init\"],groups:[\"inline\",\"module\"],name:\"init\",path:\"hooks\",relevantWhen:null,required:!1,templateable:!1,type:\"string\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h4\",{id:\"init\"},\"init\"),Object(r.b)(\"p\",null,\"A function which is called when the first event comes, before calling\\n\",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"hooks.process\"))),Object(r.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:['function (event, emit)\\n  event.log.field = \"value\" -- set value of a field\\n  event.log.another_field = nil -- remove field\\n  event.log.first, event.log.second = nil, event.log.first -- rename field\\n\\n  -- Very important! Emit the processed event.\\n  emit(event)\\nend',\"process\",\"process\"],groups:[\"simple\",\"inline\",\"module\"],name:\"process\",path:\"hooks\",relevantWhen:null,required:!0,templateable:!1,type:\"string\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h4\",{id:\"process\"},\"process\"),Object(r.b)(\"p\",null,\"A function which is called for each incoming event. It can produce new events\\nusing \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"emit\"),\" function.\")),Object(r.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:[\"shutdown\",\"shutdown\"],groups:[\"inline\",\"module\"],name:\"shutdown\",path:\"hooks\",relevantWhen:null,required:!1,templateable:!1,type:\"string\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h4\",{id:\"shutdown\"},\"shutdown\"),Object(r.b)(\"p\",null,\"A function which is called when Vector is stopped. It can produce new events\\nusing \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"emit\"),\" function.\")))),Object(r.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:[[\"/etc/vector/lua\"]],groups:[\"module\"],name:\"search_dirs\",path:null,relevantWhen:null,required:!1,templateable:!1,type:\"[string]\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h3\",{id:\"search_dirs\"},\"search_dirs\"),Object(r.b)(\"p\",null,\"A list of directories to search when loading a Lua file via the \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"require\"),\"\\nfunction. If not specified, the modules are looked up in the directories of\\nVector's configs.\\nSee \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"#search-directories\"}),\"Search Directories\"),\" for more info.\")),Object(r.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:['function init()\\n  count = 0\\nend\\n\\nfunction process()\\n  count = count + 1\\nend\\n\\nfunction timer_handler(emit)\\n  emit(make_counter(counter))\\n  counter = 0\\nend\\n\\nfunction shutdown(emit)\\n  emit(make_counter(counter))\\nend\\n\\nfunction make_counter(value)\\n  return metric = {\\n    name = \"event_counter\",\\n    kind = \"incremental\",\\n    timestamp = os.date(\"!*t\"),\\n    counter = {\\n      value = value\\n    }\\n  }\\nend',\"-- external file with hooks and timers defined\\nrequire('custom_module')\"],groups:[\"inline\",\"module\"],name:\"source\",path:null,relevantWhen:null,required:!1,templateable:!1,type:\"string\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h3\",{id:\"source\"},\"source\"),Object(r.b)(\"p\",null,\"The source which is evaluated when the transform is created.\")),Object(r.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:[[{interval_seconds:5,handler:\"timer_handler\"}],[{interval_seconds:5,handler:\"timer_handler\"}]],groups:[\"inline\",\"module\"],name:\"timers\",path:null,relevantWhen:null,required:!1,templateable:!1,type:\"[table]\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h3\",{id:\"timers\"},\"timers\"),Object(r.b)(\"p\",null,\"Configures timers which are executed periodically at given interval.\"),Object(r.b)(i.a,{filters:!1,mdxType:\"Fields\"},Object(r.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:[\"timer_handler\"],groups:[\"inline\",\"module\"],name:\"handler\",path:\"timers\",relevantWhen:null,required:!0,templateable:!1,type:\"string\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h4\",{id:\"handler\"},\"handler\"),Object(r.b)(\"p\",null,\"Defines a handler function which is executed periodially at \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"#interval_seconds\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"interval_seconds\")),\".\\nIt can produce new events using \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"emit\"),\" function.\")),Object(r.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:[1,10,30],groups:[\"inline\",\"module\"],name:\"interval_seconds\",path:\"timers\",relevantWhen:null,required:!0,templateable:!1,type:\"uint\",unit:\"seconds\",warnings:[],mdxType:\"Field\"},Object(r.b)(\"h4\",{id:\"interval_seconds\"},\"interval_seconds\"),Object(r.b)(\"p\",null,\"Defines the interval at which the timer handler would be executed.\")))),Object(r.b)(o.a,{common:!0,defaultValue:null,enumValues:{2:\"Lua transform API version 2\"},examples:[\"2\"],groups:[\"simple\",\"inline\",\"module\"],name:\"version\",path:null,relevantWhen:null,required:!0,templateable:!1,type:\"string\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h3\",{id:\"version\"},\"version\"),Object(r.b)(\"p\",null,\"Transform API version. Specifying this version ensures that Vector does not\\nbreak backward compatibility.\"))),Object(r.b)(\"h2\",{id:\"examples\"},\"Examples\"),Object(r.b)(s.a,{block:!1,defaultValue:\"add-rename--remove-log-fields\",select:!0,values:[{label:\"Add, rename, & remove log fields\",value:\"add-rename--remove-log-fields\"},{label:\"Add, rename, & remove metric tags\",value:\"add-rename--remove-metric-tags\"},{label:\"Drop event\",value:\"drop-event\"}],mdxType:\"Tabs\"},Object(r.b)(c.a,{value:\"add-rename--remove-log-fields\",mdxType:\"TabItem\"},Object(r.b)(\"p\",null,\"The following examples demonstrates how to add, rename, and remove a \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/docs/about/data-model/log/\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"log\")),\" event's fields:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-toml\",metastring:'title=\"vector.toml\"',title:'\"vector.toml\"'}),'# ...\\nhooks.process = \"\"\"\\nfunction (event, emit)\\n  -- Add root level field\\n  event.log.field = \"new value\"\\n\\n  -- Add nested field\\n  event.log.nested.field = \"nested value\"\\n\\n  -- Rename field\\n  event.log.new_field = event.log.old_field\\n  event.log.old_field = nil\\n\\n  -- Remove fields\\n  event.log.field = nil\\n\\n  emit(event)\\nend\\n\"\"\"\\n'))),Object(r.b)(c.a,{value:\"add-rename--remove-metric-tags\",mdxType:\"TabItem\"},Object(r.b)(\"p\",null,\"The following examples demonstrates how to add, rename, and remove a\\n\",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/docs/about/data-model/log/\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"metric\")),\" events's tags:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-toml\",metastring:'title=\"vector.toml\"',title:'\"vector.toml\"'}),'# ...\\nhooks.process = \"\"\"\\nfunction (event, emit)\\n  -- Add tag\\n  event.metric.tags.tag = \"new value\"\\n\\n  -- Rename tag\\n  event.metric.tags.new_tag = event.log.old_tag\\n  event.metric.tags.old_tag = nil\\n\\n  -- Remove tag\\n  event.metric.tags.tag = nil\\n\\n  emit(event)\\nend\\n\"\"\"\\n'))),Object(r.b)(c.a,{value:\"drop-event\",mdxType:\"TabItem\"},Object(r.b)(\"p\",null,\"Drop an event entirely. Supply this as the \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"hooks.process\"),\" value:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-toml\",metastring:'title=\"vector.toml\"',title:'\"vector.toml\"'}),'# ...\\nhooks.process = \"\"\"\\nfunction (event, emit)\\n  -- Drop event entirely by not calling the `emit` function\\nend\\n\"\"\"\\n')))),Object(r.b)(\"h2\",{id:\"how-it-works\"},\"How It Works\"),Object(r.b)(\"h3\",{id:\"add-fields--tags\"},\"Add Fields & Tags\"),Object(r.b)(\"p\",null,\"To add \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"log\"),\" fields and \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"metric\"),\" tags just set the desired key to the\\nappropriate value:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-lua\"}),'-- Add root level field\\nevent.log.field = \"new value\"\\n\\n-- Add nested field\\nevent.log.nested.field = \"nested value\"\\n\\n-- Add tag\\nevent.metric.tags.tag = \"new value\"\\n')),Object(r.b)(\"h3\",{id:\"defining-timestamps\"},\"Defining Timestamps\"),Object(r.b)(\"p\",null,\"To parse a timestamp with an optional milliseconds field, like \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"2020-04-07 06:26:02.643\"),\" or \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"2020-04-07 06:26:02\"),\":\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-lua\"}),\"timestamp_pattern = \\\"(%d%d%d%d)[-](%d%d)[-](%d%d) (%d%d):(%d%d):(%d%d).?(%d*)\\\"\\n\\nfunction parse_timestamp(str)\\n  local year, month, day, hour, min, sec, millis = string.match(str, timestamp_pattern)\\n  local ms = 0\\n  if millis and millis ~= \\\"\\\" then\\n    ms = tonumber(millis)\\n  end\\n  return {\\n    year    = tonumber(year),\\n    month   = tonumber(month),\\n    day     = tonumber(day),\\n    hour    = tonumber(hour),\\n    min     = tonumber(min),\\n    sec     = tonumber(sec),\\n    nanosec = ms * 1000000\\n  }\\nend\\n\\nparse_timestamp('2020-04-07 06:26:02.643')\\nparse_timestamp('2020-04-07 06:26:02')\\n\")),Object(r.b)(\"h3\",{id:\"drop-events\"},\"Drop Events\"),Object(r.b)(\"p\",null,\"To drop events, simply do not call the emitting function with it. For example:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-lua\"}),'function (event, emit)\\n  if not event[\"message\"].match(str, \"debug\") then\\n    emit(event)\\n  end\\nend\\n')),Object(r.b)(\"h3\",{id:\"environment-variables\"},\"Environment Variables\"),Object(r.b)(\"p\",null,\"Environment variables are supported through all of Vector's configuration.\\nSimply add \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"${MY_ENV_VAR}\"),\" in your Vector configuration file and the variable\\nwill be replaced before being evaluated.\"),Object(r.b)(\"p\",null,\"You can learn more in the\\n\",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/docs/setup/configuration/#environment-variables\"}),\"Environment Variables\"),\" section.\"),Object(r.b)(\"h3\",{id:\"iterate-over-fields--tags\"},\"Iterate Over Fields & Tags\"),Object(r.b)(\"p\",null,\"To iterate over all fields of an \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"event\"),\" use the \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"https://www.lua.org/manual/5.3/manual.html#pdf-pairs\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"pairs\")),\"\\nmethod.  For example:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-lua\"}),'function (event, emit)\\n  -- Remove all fields where the value is \"-\"\\n  for f, v in pairs(event) do\\n    if v == \"-\" then\\n      event[f] = nil\\n    end\\n  end\\n\\n  emit(event)\\nend\\n')),Object(r.b)(\"h3\",{id:\"learning-lua\"},\"Learning Lua\"),Object(r.b)(\"p\",null,\"In order to write non-trivial transforms in Lua, one has to have basic\\nunderstanding of Lua. Because Lua is an easy to learn language, reading a few\\nfirst chapters of \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"https://www.lua.org/pil/\"}),\"the official book\"),\" or consulting\\n\",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"https://www.lua.org/manual/5.3/manual.html\"}),\"the manual\"),\" would suffice.\"),Object(r.b)(\"h3\",{id:\"lua-version\"},\"Lua Version\"),Object(r.b)(\"p\",null,\"Vector uses the \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"https://github.com/kyren/rlua\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"rlua\"),\" Rust crate\"),\" which currently embeds Lua 5.3.\"),Object(r.b)(\"h3\",{id:\"remove-fields--tags\"},\"Remove Fields & Tags\"),Object(r.b)(\"p\",null,\"You can remove \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"log\"),\" fields and \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"metric\"),\" tags by setting them to \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"nil\"),\":\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-lua\"}),\"-- remove a log field\\nevent.log.field = nil\\n\\n-- remove a metric tag\\nevent.metric.tags.tag = nil\\n\")),Object(r.b)(\"h3\",{id:\"representation-of-events\"},\"Representation of Events\"),Object(r.b)(\"p\",null,\"Events are represented as \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"https://www.lua.org/pil/2.5.html\"}),\"tables\"),\" in Lua. Vector uses\\n\",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"https://serde.rs/enum-representations.html#externally-tagged\"}),\"externally tagged representation\"),\" to\\nencode both log and metric events in a consistent fashion:\"),Object(r.b)(\"ul\",null,Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"/docs/about/data-model/log/\"}),\"Log events\"),\" are represented as values of a key\\nnamed \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"log\"),\".\"),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"/docs/about/data-model/metric/\"}),\"Metric events\"),\" are represented as values of a\\nkey named \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"metric\"),\".\")),Object(r.b)(s.a,{block:!0,defaultValue:\"log\",urlKey:\"event_type\",values:[{label:\"Log\",value:\"log\"},{label:\"Metric\",value:\"metric\"}],mdxType:\"Tabs\"},Object(r.b)(c.a,{value:\"log\",mdxType:\"TabItem\"},Object(r.b)(\"p\",null,\"For instance, a typical \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/docs/about/data-model/log/\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"log\")),\" event produced by the\\n\",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/docs/reference/sources/stdin/\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"stdin\")),\" source could have been created programmatically\\nusing the following code:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-lua\"}),'event = {\\n  log = {\\n    host = \"localhost\",\\n    message = \"the message\",\\n    timestamp = os.date(\"!*t\")\\n  }\\n}\\n'))),Object(r.b)(c.a,{value:\"metric\",mdxType:\"TabItem\"},Object(r.b)(\"p\",null,\"For instance, a typical \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/docs/about/data-model/metric/\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"metric\")),\" event could have\\nbeen created programmatically in a similar way:\"),Object(r.b)(s.a,{defaultValue:\"counter\",select:!0,urlKey:\"metric_kind\",values:[{label:\"Counter\",value:\"counter\"},{label:\"Gauge\",value:\"gauge\"},{label:\"Set\",value:\"set\"},{label:\"Distribution\",value:\"distribution\"},{label:\"Aggregated Histogram\",value:\"aggregated_histogram\"},{label:\"Aggregated Summary\",value:\"aggregated_summary\"}],mdxType:\"Tabs\"},Object(r.b)(c.a,{value:\"counter\",mdxType:\"TabItem\"},Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-lua\"}),'event = {\\n  metric = {\\n    name = \"login.count\",\\n    timestamp = os.date(\"!*t\"),\\n    kind = \"absolute\",\\n    tags = {\\n      host = \"my.host.example\"\\n    },\\n    counter = {\\n      value = 24.2\\n    }\\n  }\\n}\\n'))),Object(r.b)(c.a,{value:\"gauge\",mdxType:\"TabItem\"},Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-lua\"}),'event = {\\n  metric = {\\n    name = \"memory_rss\",\\n    timestamp = os.date(\"!*t\"),\\n    kind = \"absolute\",\\n    tags = {\\n      host = \"my.host.example\"\\n    },\\n    gauge = {\\n      value = 512.0\\n    }\\n  }\\n}\\n'))),Object(r.b)(c.a,{value:\"set\",mdxType:\"TabItem\"},Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-lua\"}),'event = {\\n  metric = {\\n    name = \"user_names\",\\n    timestamp = os.date(\"!*t\"),\\n    kind = \"absolute\",\\n    tags = {\\n      host = \"my.host.example\"\\n    },\\n    set = {\\n      values = {\"value1\", \"value2\"}\\n    }\\n  }\\n}\\n'))),Object(r.b)(c.a,{value:\"distribution\",mdxType:\"TabItem\"},Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-lua\"}),'event = {\\n  metric = {\\n    name = \"response_time_ms\",\\n    timestamp = os.date(\"!*t\"),\\n    kind = \"absolute\",\\n    tags = {\\n      host = \"my.host.example\"\\n    },\\n    distribution = {\\n      values = {2.21, 5.46, 10.22},\\n      sample_rates = {5, 2, 5}\\n    }\\n  }\\n}\\n'))),Object(r.b)(c.a,{value:\"aggregated_histogram\",mdxType:\"TabItem\"},Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-lua\"}),'event = {\\n  metric = {\\n    name = \"response_time_ms\",\\n    timestamp = os.date(\"!*t\"),\\n    kind = \"absolute\",\\n    tags = {\\n      host = \"my.host.example\"\\n    },\\n    aggregated_histogram = {\\n      buckets = {1.0, 2.0, 4.0, 8.0, 16.0, 32.0},\\n      counts = {20, 10, 45, 12, 18, 92},\\n      count = 197,\\n      sum = 975.2\\n    }\\n  }\\n}\\n'))),Object(r.b)(c.a,{value:\"aggregated_summary\",mdxType:\"TabItem\"},Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-lua\"}),'event = {\\n  metric = {\\n    name = \"response_time_ms\",\\n    timestamp = os.date(\"!*t\"),\\n    kind = \"absolute\",\\n    tags = {\\n      host = \"my.host.example\"\\n    },\\n    aggregated_sumary = {\\n      quantiles = {0.1, 0.25, 0.5, 0.9, 0.99, 1.0},\\n      values = {2.0, 3.0, 5.0, 8.0, 9.0, 10.0},\\n      count = 197,\\n      sum = 975.2\\n    }\\n  }\\n}\\n')))))),Object(r.b)(\"h4\",{id:\"data-types\"},\"Data Types\"),Object(r.b)(\"p\",null,\"The correspondence between Vector's \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/docs/about/data-model/log/#types\"}),\"data types\"),\" and Lua data type is summarized\\nby the following table:\"),Object(r.b)(\"table\",null,Object(r.b)(\"thead\",{parentName:\"table\"},Object(r.b)(\"tr\",{parentName:\"thead\"},Object(r.b)(\"th\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),\"Vector Type\"),Object(r.b)(\"th\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),\"Lua Type\"),Object(r.b)(\"th\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),\"Comment\"))),Object(r.b)(\"tbody\",{parentName:\"table\"},Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"a\",Object(a.a)({parentName:\"td\"},{href:\"/docs/about/data-model/log/#strings\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"String\"))),Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"a\",Object(a.a)({parentName:\"td\"},{href:\"https://www.lua.org/pil/2.4.html\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"string\"))),Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}))),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"a\",Object(a.a)({parentName:\"td\"},{href:\"/docs/about/data-model/log/#ints\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"Integer\"))),Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"a\",Object(a.a)({parentName:\"td\"},{href:\"https://docs.rs/rlua/0.17.0/rlua/type.Integer.html\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"integer\"))),Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}))),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"a\",Object(a.a)({parentName:\"td\"},{href:\"/docs/about/data-model/log/#floats\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"Float\"))),Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"a\",Object(a.a)({parentName:\"td\"},{href:\"https://docs.rs/rlua/0.17.0/rlua/type.Number.html\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"number\"))),Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}))),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"a\",Object(a.a)({parentName:\"td\"},{href:\"/docs/about/data-model/log/#booleans\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"Boolean\"))),Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"a\",Object(a.a)({parentName:\"td\"},{href:\"https://www.lua.org/pil/2.2.html\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"boolean\"))),Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}))),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"a\",Object(a.a)({parentName:\"td\"},{href:\"/docs/about/data-model/log/#timestamps\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"Timestamp\"))),Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"a\",Object(a.a)({parentName:\"td\"},{href:\"https://www.lua.org/pil/2.5.html\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"table\"))),Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),\"There is no dedicated timestamp type in Lua. Timestamps are represented as tables using the convention defined by \",Object(r.b)(\"a\",Object(a.a)({parentName:\"td\"},{href:\"https://www.lua.org/manual/5.3/manual.html#pdf-os.date\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"os.date\")),\" and \",Object(r.b)(\"a\",Object(a.a)({parentName:\"td\"},{href:\"https://www.lua.org/manual/5.3/manual.html#pdf-os.time\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"os.time\")),\". The table representation of a timestamp contains the fields \",Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"year\"),\", \",Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"month\"),\", \",Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"day\"),\", \",Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"hour\"),\", \",Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"min\"),\", \",Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"sec\"),\", \",Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"nanosec\"),\", \",Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"yday\"),\", \",Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"wday\"),\", and \",Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"isdst\"),\". If such a table is passed from Lua to Vector, the fields  \",Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"yday\"),\", \",Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"wday\"),\", and \",Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"isdst\"),\" can be omitted. In addition to the \",Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"os.time\"),\" representation, Vector supports sub-second resolution with a \",Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"nanosec\"),\" field in the table.\")),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"a\",Object(a.a)({parentName:\"td\"},{href:\"/docs/about/data-model/log/#null-values\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"Null\"))),Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),\"empty string\"),Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),\"In Lua setting the value of a table field to \",Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"nil\"),\" means deletion of this field. In addition, the length operator \",Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"#\"),\" does not work in the expected way with sequences containing nulls. Because of that \",Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"Null\"),\" values are encoded as empty strings.\")),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"a\",Object(a.a)({parentName:\"td\"},{href:\"/docs/about/data-model/log/#maps\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"Map\"))),Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"a\",Object(a.a)({parentName:\"td\"},{href:\"https://www.lua.org/pil/2.5.html\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"table\"))),Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}))),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"a\",Object(a.a)({parentName:\"td\"},{href:\"/docs/about/data-model/log/#arrays\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"Array\"))),Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"a\",Object(a.a)({parentName:\"td\"},{href:\"https://www.lua.org/pil/11.1.html\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"sequence\"))),Object(r.b)(\"td\",Object(a.a)({parentName:\"tr\"},{align:\"left\"}),\"Sequences are a special case of tables. Indexes start from 1, following the Lua convention.\")))),Object(r.b)(\"h3\",{id:\"search-directories\"},\"Search Directories\"),Object(r.b)(\"p\",null,\"Vector provides a \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"#search_dirs\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"search_dirs\")),\" option that allows you to specify absolute\\npaths that will be searched when using the \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"https://www.lua.org/manual/5.3/manual.html#pdf-require\"}),\"Lua \",Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"require\"),\"\\nfunction\"),\". If this option is not set, the directories of\\nthe \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/docs/setup/configuration/\"}),\"configuration files\"),\" will be used instead.\"))}p.isMDXComponent=!0},309:function(e,t,n){\"use strict\";n(12);var a=n(0),l=n.n(a),r=n(318),i=n(317),o=n(316),s=n.n(o);t.a=function({children:e,filters:t}){const[n,o]=Object(a.useState)(!1),[c,m]=Object(a.useState)(new Set),[d,b]=Object(a.useState)(!1),[u,p]=Object(a.useState)(null);let h=[];e&&(h=Array.isArray(e)?e:[e]);let g=h.some(e=>e.props.common),O=s()(h).flatMap(e=>e.props.groups).uniq().value(),j=h.some(e=>e.props.required),f=h;return n&&(f=f.filter(e=>e.props.common)),c.size>0&&(f=f.filter(e=>Array.from(c).every(t=>e.props.groups.includes(t)))),d&&(f=f.filter(e=>e.props.required)),u&&(f=f.filter(e=>e.props.name.toLowerCase().includes(u.toLowerCase()))),l.a.createElement(l.a.Fragment,null,h.length>1&&!1!==t?l.a.createElement(\"div\",{className:\"filters\"},l.a.createElement(\"div\",{className:\"search\"},l.a.createElement(\"span\",{className:\"search--result-count\"},f.length,\" items\"),l.a.createElement(\"input\",{className:\"input--text input--lg\",type:\"text\",onChange:e=>p(e.currentTarget.value),placeholder:\"\\ud83d\\udd0d Search...\"})),l.a.createElement(\"div\",{className:\"filter\"},l.a.createElement(\"div\",{className:\"filter--choices\"},l.a.createElement(r.a,{values:O,currentState:c,setState:m}),g&&l.a.createElement(\"label\",{title:\"Only show popular/common results\"},l.a.createElement(\"input\",{type:\"checkbox\",onChange:e=>o(e.currentTarget.checked),checked:n}),\"common\"),j&&l.a.createElement(\"label\",{title:\"Only show required results\"},l.a.createElement(\"input\",{type:\"checkbox\",onChange:e=>b(e.currentTarget.checked),checked:d}),\"required\")))):null,!Array.isArray(f)||f.length>0?l.a.createElement(\"ul\",{className:\"connected-list\"},f):l.a.createElement(i.a,{text:\"no components found\"}))}},310:function(e,t,n){\"use strict\";n(12);var a=n(0),l=n.n(a),r=n(306),i=n.n(r),o=(n(307),n(315));function s(e){return e.includes(\".\")?'\"'+e+'\"':e}function c(e){return\"string\"==typeof e&&e.includes(\"\\n\")?`\"\"\"\\n${e}\\n\"\"\"`:JSON.stringify(e)}function m(e,t){return(n=t)&&n.constructor===Object?\"name\"in t&&\"value\"in t?`${s(t.name)} = ${c(t.value)}`:`${s(Object.keys(t)[0])} = ${c(Object.values(t)[0])}`:e?`${s(e)} = ${c(t)}`:c(t);var n}function d({values:e}){let t=[];if(Array.isArray(e))for(var n in e){let a=e[n];t.push(l.a.createElement(\"code\",{key:a},c(a))),t.push(\" \")}else for(var a in e)t.push(l.a.createElement(\"code\",{key:a,className:\"with-info-icon\",title:e[a]},c(a))),t.push(\" \");return t}function b({name:e,path:t,values:n}){let a=\"\";return n.forEach((function(n){t&&(a+=t+\".\"),a+=m(e,n)+\"\\n\"})),l.a.createElement(\"div\",null,l.a.createElement(o.a,{className:\"language-toml\"},a))}function u({unit:e,value:t}){let n=\"\";return e&&(n=l.a.createElement(l.a.Fragment,null,\" (\",e,\")\")),l.a.createElement(l.a.Fragment,null,l.a.createElement(\"code\",null,c(t)),n)}function p({value:e}){let t=Object.keys(e)[0],n=Object.values(e)[0];return\"\"==n&&(n=null),l.a.createElement(\"span\",null,l.a.createElement(\"code\",null,l.a.createElement(\"a\",{href:\"#\"+t},t)),\" \",\"= \",l.a.createElement(\"code\",null,c(n)))}function h({defaultValue:e,enumValues:t,examples:n,groups:r,name:i,path:o,relevantWhen:s,required:c,unit:m,warnings:h}){const[g,O]=Object(a.useState)(!1);return l.a.createElement(\"ul\",{className:\"info\"},h&&h.length>0&&h.map((e,t)=>l.a.createElement(\"li\",{key:t,className:\"warning\"},l.a.createElement(\"i\",{className:\"feather icon-alert-triangle\"}),\" WARNING:\",\" \",e.text)),s&&l.a.createElement(\"li\",null,\"Only \",c?\"required\":\"relevant\",\" when:\",\" \",l.a.createElement(p,{value:s})),void 0!==e?null!==e?l.a.createElement(\"li\",null,\"Default: \",l.a.createElement(u,{unit:m,value:e})):l.a.createElement(\"li\",null,\"No default\"):null,t&&l.a.createElement(\"li\",null,\"Enum, must be one of: \",l.a.createElement(d,{values:t})),(n.length>1||n[0]!=e)&&l.a.createElement(\"li\",null,l.a.createElement(\"div\",{className:\"show-more\",onClick:()=>O(!g)},g?\"Hide examples\":\"View examples\"),g&&l.a.createElement(b,{name:i,path:o,values:n})))}t.a=function({children:e,common:t,defaultValue:n,enumValues:r,examples:o,groups:s,name:c,path:m,relevantWhen:d,required:b,templateable:u,type:p,unit:g,warnings:O}){const[j,f]=Object(a.useState)(!1);let v=e;return j&&(v=v.filter(e=>\"p\"!=e.props.originalType)),l.a.createElement(\"li\",{className:i()({\"field-required\":b,\"field-collapsed\":j}),required:b},l.a.createElement(\"div\",{className:\"badges\"},u&&l.a.createElement(\"span\",{className:\"badge badge--primary with-info-icon\",title:\"This option is dynamic and accepts the Vector template syntax\"},\"templateable\"),p&&l.a.createElement(\"span\",{className:\"badge badge--secondary\"},p,g&&l.a.createElement(l.a.Fragment,null,\" (\",g,\")\")),r&&Object.keys(r).length>0&&l.a.createElement(\"span\",{className:\"badge badge--secondary with-info-icon\",title:\"This option is an enumation and only allows specific values\"},\"enum\"),t&&l.a.createElement(\"span\",{className:\"badge badge--primary with-info-icon\",title:\"This is a popular that we recommend for getting started\"},\"common\"),b?l.a.createElement(\"span\",{className:\"badge badge--danger\"},\"required\",d&&\"*\"):l.a.createElement(\"span\",{className:\"badge badge--secondary\"},\"optional\")),v,!j&&\"table\"!=p&&l.a.createElement(h,{defaultValue:n,enumValues:r,examples:o,groups:s,name:c,path:m,relevantWhen:d,required:b,unit:g,warnings:O}))}}}]);","extractedComments":[]}