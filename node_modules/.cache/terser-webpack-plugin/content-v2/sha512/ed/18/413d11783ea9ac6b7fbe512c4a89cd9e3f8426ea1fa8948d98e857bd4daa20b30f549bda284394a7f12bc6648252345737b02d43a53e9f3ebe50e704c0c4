{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{143:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"frontMatter\",(function(){return l})),n.d(t,\"metadata\",(function(){return u})),n.d(t,\"rightToc\",(function(){return d})),n.d(t,\"default\",(function(){return m}));var r=n(1),a=n(6),o=(n(0),n(195)),i=n(220),c=n(198),s=n.n(c),l={last_modified_on:\"2020-07-13\",title:\"Data Model\",sidebar_label:\"hidden\",description:\"Vector's internal data model -- event and it's subtypes.\"},u={id:\"about/data-model\",title:\"Data Model\",description:\"Vector's internal data model -- event and it's subtypes.\",source:\"@site/docs/about/data-model.md\",permalink:\"/docs/about/data-model\",editUrl:\"https://github.com/nervosnetwork/muta/edit/master/website/docs/about/data-model.md\",sidebar_label:\"hidden\",sidebar:\"docs\",previous:{title:\"Concepts\",permalink:\"/docs/about/concepts\"},next:{title:\"Log Event\",permalink:\"/docs/about/data-model/log\"}},d=[{value:\"Event Types\",id:\"event-types\",children:[]},{value:\"FAQ\",id:\"faq\",children:[{value:\"Why Not <em>Just</em> Events?\",id:\"why-not-just-events\",children:[]}]}],p={rightToc:d};function m(e){var t=e.components,n=Object(a.a)(e,[\"components\"]);return Object(o.b)(\"wrapper\",Object(r.a)({},p,n,{components:t,mdxType:\"MDXLayout\"}),Object(o.b)(s.a,{src:\"/img/data-model-event.svg\",mdxType:\"SVG\"}),Object(o.b)(\"p\",null,\"The individual pieces of data flowing through Vector are known as \",Object(o.b)(\"strong\",{parentName:\"p\"},\"events\"),\".\\nEvents are arbitrarily wide, and deep, structured pieces of data. They have no\\nrequirements or limitations. Ideally, events contain enough rich information\\nto derive any type of monitoring data from it.\"),Object(o.b)(\"h2\",{id:\"event-types\"},\"Event Types\"),Object(o.b)(\"p\",null,\"Vector defines subtypes for events. This is necessary to establish domain\\nspecific requriements enabling interoperability with existing monitoring and\\nobservability systems.\"),Object(o.b)(i.a,{to:\"/docs/about/data-model/log/\",mdxType:\"Jump\"},\"Log\"),Object(o.b)(i.a,{to:\"/docs/about/data-model/metric/\",mdxType:\"Jump\"},\"Metric\"),Object(o.b)(\"h2\",{id:\"faq\"},\"FAQ\"),Object(o.b)(\"h3\",{id:\"why-not-just-events\"},\"Why Not \",Object(o.b)(\"em\",{parentName:\"h3\"},\"Just\"),\" Events?\"),Object(o.b)(\"p\",null,\"We, \",Object(o.b)(\"em\",{parentName:\"p\"},\"very much\"),', like the idea of an event only world, one where every service\\nis perfectly instrumented with events that contain rich data and context.\\nUnfortunately, that is not the case; exisiting services usually emit metrics,\\ntraces, and logs of varying quality. By designing Vector to meet services where\\nthey are (current state), we serve as a bridge to newer standards. This is why\\nwe place \"events\" at the top of our data model, where logs and metrics are\\nderived.'),Object(o.b)(\"p\",null,\"Finally, a sophisticated data model that accounts for the various data types\\nallows for \",Object(o.b)(\"em\",{parentName:\"p\"},\"correct\"),\" interoperability between observability systems. For\\nexample, a pipeline with a \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"statsd\"),\" source and a \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"prometheus\"),\" sink would not\\nbe possible without the correct internal metrics data types.\"))}m.isMDXComponent=!0},194:function(e,t,n){\"use strict\";var r=n(0),a=n.n(r),o=n(19),i=n(222),c=n(13),s=n.n(c),l=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n};t.a=function(e){var{isNavLink:t}=e,n=l(e,[\"isNavLink\"]);const{to:c,href:u}=n,d=c||u,p=Object(i.a)(d),m=Object(r.useRef)(!1),b=t?o.c:o.b,f=s.a.canUseIntersectionObserver;let y;return Object(r.useEffect)(()=>(!f&&p&&window.docusaurus.prefetch(d),()=>{f&&y&&y.disconnect()}),[d,f,p]),d&&p&&!d.startsWith(\"#\")?a.a.createElement(b,Object.assign({},n,{onMouseEnter:()=>{m.current||(window.docusaurus.preload(d),m.current=!0)},innerRef:e=>{var t,n;f&&e&&p&&(t=e,n=()=>{window.docusaurus.prefetch(d)},y=new window.IntersectionObserver(e=>{e.forEach(e=>{t===e.target&&(e.isIntersecting||e.intersectionRatio>0)&&(y.unobserve(t),y.disconnect(),n())})}),y.observe(t))},to:d})):a.a.createElement(\"a\",Object.assign({},n,{href:d}))}},195:function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return d})),n.d(t,\"b\",(function(){return b}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),n=t;return e&&(n=\"function\"==typeof e?e(t):c({},t,{},e)),n},d=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:\"code\",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),d=u(n),m=r,b=d[\"\".concat(i,\".\").concat(m)]||d[m]||p[m]||o;return n?a.a.createElement(b,c({ref:t},l,{components:n})):a.a.createElement(b,c({ref:t},l))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if(\"string\"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType=\"string\"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}m.displayName=\"MDXCreateElement\"},220:function(e,t,n){\"use strict\";var r=n(0),a=n.n(r),o=n(194),i=n(192),c=n.n(i);n(102);t.a=function({children:e,className:t,badge:n,leftIcon:r,rightIcon:i,size:s,target:l,to:u}){let d=c()(\"jump-to\",\"jump-to--\"+s,t),p=a.a.createElement(\"div\",{className:\"jump-to--inner\"},a.a.createElement(\"div\",{className:\"jump-to--inner-2\"},r&&a.a.createElement(\"div\",{className:\"jump-to--left\"},a.a.createElement(\"i\",{className:\"feather icon-\"+r})),a.a.createElement(\"div\",{className:\"jump-to--main\"},n?a.a.createElement(\"span\",{className:\"badge badge--primary badge--right\"},n):\"\",e),a.a.createElement(\"div\",{className:\"jump-to--right\"},a.a.createElement(\"i\",{className:`feather icon-${i||\"chevron-right\"} arrow`}))));return l?a.a.createElement(\"a\",{href:u,target:l,className:d},p):a.a.createElement(o.a,{to:u,className:d},p)}},222:function(e,t,n){\"use strict\";function r(e){return/^\\/(?!\\/)/.test(e)}n.d(t,\"a\",(function(){return r}))}}]);","extractedComments":[]}