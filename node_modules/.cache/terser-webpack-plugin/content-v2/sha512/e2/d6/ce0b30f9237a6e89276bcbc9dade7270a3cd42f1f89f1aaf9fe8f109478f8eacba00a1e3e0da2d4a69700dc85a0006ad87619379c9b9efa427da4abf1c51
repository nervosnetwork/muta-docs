{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{121:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"frontMatter\",(function(){return o})),t.d(n,\"metadata\",(function(){return s})),t.d(n,\"rightToc\",(function(){return l})),t.d(n,\"default\",(function(){return b}));var r=t(1),a=t(6),c=(t(0),t(234)),o={title:\"Service Dev Guide\"},s={id:\"dev/service-dev\",title:\"Service Dev Guide\",description:\"\\u533a\\u5757\\u94fe\\u4f5c\\u4e3a\\u4e00\\u79cd\\u65b0\\u7684\\u5206\\u5e03\\u5f0f\\u5e94\\u7528\\uff0c\\u53ef\\u4ee5\\u7b80\\u5355\\u7684\\u7406\\u89e3\\u6210\\u4e00\\u4e2a\\u526f\\u672c\\u72b6\\u6001\\u673a\\uff0c\\u540c\\u65f6\\u4f7f\\u7528\\u5bc6\\u7801\\u5b66\\u505a\\u5230\\u5e94\\u7528\\u6570\\u636e\\u7684\\u53ef\\u9a8c\\u8bc1\\u548c\\u9632\\u7be1\\u6539\\u3002\\u4e00\\u65b9\\u9762\\uff0c\\u591a\\u4e2a\\u526f\\u672c\\u7684\\u901a\\u4fe1\\u548c\\u4e00\\u81f4\\u6027\\uff0c\\u7531 P2P \\u7f51\\u7edc\\u3001\\u4ea4\\u6613\\u6c60\\u548c\\u5171\\u8bc6\\u7ec4\\u4ef6\\u7b49\\u5171\\u540c\\u5b8c\\u6210\\uff0c\\u8fd9\\u4e9b\\u7ec4\\u4ef6\\u4e5f\\u662f\\u533a\\u5757\\u94fe\\u67b6\\u6784\\u4e2d\\u7684\\u5e95\\u5c42\\u6a21\\u5757\\uff0c\\u4e00\\u822c\\u5f88\\u5c11\\u53d8\\u52a8\\uff0c\\u6240\\u4ee5\\u53ef\\u4ee5\\u56fa\\u5316\\u5230\\u6846\\u67b6\\u4e2d\\u76f4\\u63a5\\u63d0\\u4f9b\\u7ed9\\u5f00\\u53d1\\u8005\\u4f7f\\u7528\\u3002\\u53e6\\u4e00\\u65b9\\u9762\\uff0c\\u72b6\\u6001\\u673a\\u90e8\\u5206\\u5f80\\u5f80\\u4e0e\\u94fe\\u7684\\u5177\\u4f53\\u9700\\u6c42\\u548c\\u4e1a\\u52a1\\u76f8\\u5173\\uff0c\\u9700\\u8981\\u7531\\u5f00\\u53d1\\u8005\\u8fdb\\u884c\\u81ea\\u5b9a\\u4e49\\uff0c\\u6846\\u67b6\\u63d0\\u4f9b SDK \\u6765\\u8ba9\\u51cf\\u8f7b\\u8fd9\\u90e8\\u5206\\u5de5\\u4f5c\\u7684\\u65f6\\u95f4\\u6210\\u672c\\u548c\\u6280\\u672f\\u590d\\u6742\\u5ea6\\u3002\",source:\"@site/docs/dev/service-dev.md\",permalink:\"/new-docs/docs/dev/service-dev\",editUrl:\"https://github.com/nervosnetwork/muta/edit/master/website/docs/dev/service-dev.md\",sidebar:\"docs\",previous:{title:\"Development Overview\",permalink:\"/new-docs/docs/dev/dev-overview\"},next:{title:\"Service List\",permalink:\"/new-docs/docs/dev/service-list\"}},l=[{value:\"\\u5f00\\u53d1\\u8303\\u5f0f\",id:\"\\u5f00\\u53d1\\u8303\\u5f0f\",children:[]},{value:\"\\u72b6\\u6001\\u5b58\\u50a8\",id:\"\\u72b6\\u6001\\u5b58\\u50a8\",children:[]},{value:\"\\u63a5\\u53e3\\u65b9\\u6cd5\",id:\"\\u63a5\\u53e3\\u65b9\\u6cd5\",children:[]},{value:\"\\u8fd4\\u56de\\u503c\\u548c\\u9519\\u8bef\\u5904\\u7406\",id:\"\\u8fd4\\u56de\\u503c\\u548c\\u9519\\u8bef\\u5904\\u7406\",children:[]},{value:\"\\u521b\\u4e16\\u914d\\u7f6e\",id:\"\\u521b\\u4e16\\u914d\\u7f6e\",children:[]},{value:\"\\u8d44\\u6e90\\u6d88\\u8017\\u7edf\\u8ba1\\uff1acycle\",id:\"\\u8d44\\u6e90\\u6d88\\u8017\\u7edf\\u8ba1\\uff1acycle\",children:[]},{value:\"\\u4e8b\\u4ef6\",id:\"\\u4e8b\\u4ef6\",children:[]},{value:\"ServiceContext \\u4e2d\\u7684\\u5176\\u4ed6\\u65b9\\u6cd5\",id:\"servicecontext-\\u4e2d\\u7684\\u5176\\u4ed6\\u65b9\\u6cd5\",children:[]},{value:\"Service \\u8c03\\u7528\",id:\"service-\\u8c03\\u7528\",children:[]},{value:\"Hook\",id:\"hook\",children:[]},{value:\"Tx Hook\",id:\"tx-hook\",children:[]},{value:\"\\u5e8f\\u5217\\u5316\",id:\"\\u5e8f\\u5217\\u5316\",children:[{value:\"Json\",id:\"json\",children:[]},{value:\"RLP\",id:\"rlp\",children:[]}]},{value:\"\\u6784\\u9020\\u65b9\\u6cd5\",id:\"\\u6784\\u9020\\u65b9\\u6cd5\",children:[]},{value:\"\\u521d\\u59cb\\u5316&amp;\\u6ce8\\u518c Service\",id:\"\\u521d\\u59cb\\u5316\\u6ce8\\u518c-service\",children:[]},{value:\"Service \\u793a\\u4f8b\",id:\"service-\\u793a\\u4f8b\",children:[]},{value:\"\\u4e0b\\u4e00\\u7ad9\",id:\"\\u4e0b\\u4e00\\u7ad9\",children:[]}],i={rightToc:l};function b(e){var n=e.components,t=Object(a.a)(e,[\"components\"]);return Object(c.b)(\"wrapper\",Object(r.a)({},i,t,{components:n,mdxType:\"MDXLayout\"}),Object(c.b)(\"p\",null,\"\\u533a\\u5757\\u94fe\\u4f5c\\u4e3a\\u4e00\\u79cd\\u65b0\\u7684\\u5206\\u5e03\\u5f0f\\u5e94\\u7528\\uff0c\\u53ef\\u4ee5\\u7b80\\u5355\\u7684\\u7406\\u89e3\\u6210\\u4e00\\u4e2a\\u526f\\u672c\\u72b6\\u6001\\u673a\\uff0c\\u540c\\u65f6\\u4f7f\\u7528\\u5bc6\\u7801\\u5b66\\u505a\\u5230\\u5e94\\u7528\\u6570\\u636e\\u7684\\u53ef\\u9a8c\\u8bc1\\u548c\\u9632\\u7be1\\u6539\\u3002\\u4e00\\u65b9\\u9762\\uff0c\\u591a\\u4e2a\\u526f\\u672c\\u7684\\u901a\\u4fe1\\u548c\\u4e00\\u81f4\\u6027\\uff0c\\u7531 P2P \\u7f51\\u7edc\\u3001\\u4ea4\\u6613\\u6c60\\u548c\\u5171\\u8bc6\\u7ec4\\u4ef6\\u7b49\\u5171\\u540c\\u5b8c\\u6210\\uff0c\\u8fd9\\u4e9b\\u7ec4\\u4ef6\\u4e5f\\u662f\\u533a\\u5757\\u94fe\\u67b6\\u6784\\u4e2d\\u7684\\u5e95\\u5c42\\u6a21\\u5757\\uff0c\\u4e00\\u822c\\u5f88\\u5c11\\u53d8\\u52a8\\uff0c\\u6240\\u4ee5\\u53ef\\u4ee5\\u56fa\\u5316\\u5230\\u6846\\u67b6\\u4e2d\\u76f4\\u63a5\\u63d0\\u4f9b\\u7ed9\\u5f00\\u53d1\\u8005\\u4f7f\\u7528\\u3002\\u53e6\\u4e00\\u65b9\\u9762\\uff0c\\u72b6\\u6001\\u673a\\u90e8\\u5206\\u5f80\\u5f80\\u4e0e\\u94fe\\u7684\\u5177\\u4f53\\u9700\\u6c42\\u548c\\u4e1a\\u52a1\\u76f8\\u5173\\uff0c\\u9700\\u8981\\u7531\\u5f00\\u53d1\\u8005\\u8fdb\\u884c\\u81ea\\u5b9a\\u4e49\\uff0c\\u6846\\u67b6\\u63d0\\u4f9b SDK \\u6765\\u8ba9\\u51cf\\u8f7b\\u8fd9\\u90e8\\u5206\\u5de5\\u4f5c\\u7684\\u65f6\\u95f4\\u6210\\u672c\\u548c\\u6280\\u672f\\u590d\\u6742\\u5ea6\\u3002\"),Object(c.b)(\"p\",null,\"Muta \\u6846\\u67b6\\u5c06\\u7528\\u6237\\u81ea\\u5b9a\\u4e49\\u90e8\\u5206\\u62bd\\u8c61\\u6210\\u4e00\\u4e2a Service\\uff0c\\u540c\\u65f6\\u63d0\\u4f9b \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"ServiceSDK\"),\" \\u8ba9 Service \\u5f00\\u53d1\\u53d8\\u5f97\\u7b80\\u5355\\u548c\\u9ad8\\u6548\\u3002\\u6bcf\\u4e2a Service \\u5b8c\\u6210\\u4e00\\u4e2a\\u76f8\\u5bf9\\u72ec\\u7acb\\u7684\\u529f\\u80fd\\uff0c\\u5355\\u72ec\\u7ef4\\u62a4\\u81ea\\u5df1\\u7684\\u5b58\\u50a8\\u548c\\u64cd\\u4f5c\\u63a5\\u53e3\\uff0c\\u7c7b\\u4f3c\\u4e00\\u4e2a\\u8fd0\\u884c\\u5728\\u6c99\\u76d2\\u91cc\\u7684\\u5c0f\\u578b\\u72b6\\u6001\\u673a\\u3002\\u5f00\\u53d1\\u8005\\u53ef\\u4ee5\\u4f7f\\u7528 Service \\u5f00\\u53d1\\u94fe\\u7684\\u6cbb\\u7406\\u6a21\\u5757\\u3001\\u4e1a\\u52a1\\u903b\\u8f91\\uff0c\\u751a\\u81f3\\u662f\\u5c06\\u865a\\u62df\\u673a\\u63a5\\u5165\\u533a\\u5757\\u94fe\\u3002\\u9664\\u4e86\\u5f00\\u53d1\\u81ea\\u5df1\\u7684 Service\\uff0c\\u4f60\\u4e5f\\u53ef\\u4ee5\\u590d\\u7528\\u4ed6\\u4eba\\u5df2\\u7ecf\\u5f00\\u53d1\\u597d\\u7684 Service\\uff0c\\u672a\\u6765 Muta \\u6846\\u67b6\\u4f1a\\u63d0\\u4f9b\\u8bb8\\u591a\\u5e38\\u89c1\\u529f\\u80fd\\u7684 Service\\uff0c\\u5982 Asset\\u3001Risc-V \\u865a\\u62df\\u673a\\u3001DPoS\\u3001\\u591a\\u7b7e\\u6cbb\\u7406\\u7b49\\u7b49\\u3002Service \\u4e4b\\u95f4\\u53ef\\u4ee5\\u4e92\\u76f8\\u8c03\\u7528\\uff0c\\u8fd9\\u4e9b Service \\u5171\\u540c\\u7ec4\\u6210\\u4e86\\u94fe\\u7684\\u72b6\\u6001\\u673a\\u90e8\\u5206\\uff0c\\u901a\\u8fc7\\u6846\\u67b6\\u63a5\\u53e3\\u5c06\\u72b6\\u6001\\u673a\\u63a5\\u5165\\u533a\\u5757\\u94fe\\u5e95\\u5c42\\u7ec4\\u4ef6\\uff0c\\u4e00\\u6761\\u4e13\\u5c5e\\u4f60\\u7684\\u5168\\u65b0\\u94fe\\u5c31\\u5f00\\u53d1\\u5b8c\\u6210\\u5566\\u3002\"),Object(c.b)(\"p\",null,\"\\u6362\\u53e5\\u8bdd\\u8bf4\\uff0c\\u4f7f\\u7528 Muta \\u6846\\u67b6\\u5f00\\u53d1\\u4f60\\u81ea\\u5df1\\u7684\\u533a\\u5757\\u94fe\\u53ea\\u9700 3 \\u6b65\\uff1a\"),Object(c.b)(\"ol\",null,Object(c.b)(\"li\",{parentName:\"ol\"},\"\\u601d\\u8003\\u81ea\\u5df1\\u94fe\\u7684\\u4e13\\u5c5e\\u9700\\u6c42\\uff0c\\u786e\\u5b9a\\u9700\\u8981\\u54ea\\u4e9b Service\"),Object(c.b)(\"li\",{parentName:\"ol\"},\"\\u5982\\u679c\\u9700\\u8981\\u7684 Service \\u6709\\u73b0\\u6210\\u7684\\uff0c\\u53ef\\u4ee5\\u76f4\\u63a5\\u590d\\u7528\\uff1b\\u5982\\u679c\\u6ca1\\u6709\\uff0c\\u53ef\\u4ee5\\u81ea\\u5df1\\u5f00\\u53d1\"),Object(c.b)(\"li\",{parentName:\"ol\"},\"\\u5c06\\u8fd9\\u4e9b Service \\u63a5\\u5165\\u6846\\u67b6\\uff0c\\u7f16\\u8bd1\\u8fd0\\u884c\\uff01\")),Object(c.b)(\"p\",null,\"\\u8fd9\\u7bc7\\u6587\\u7ae0\\u4e3b\\u8981\\u4ecb\\u7ecd Service \\u7684\\u7ec4\\u6210\\u548c\\u5f00\\u53d1\\u6307\\u5357\\u3002\\u5728\\u719f\\u6089 Service \\u4e4b\\u540e\\uff0c\\u53ef\\u4ee5\\u9605\\u8bfb \",Object(c.b)(\"a\",Object(r.a)({parentName:\"p\"},{href:\"/new-docs/docs/dev/dex\"}),\"\\u5f00\\u53d1\\u4e00\\u6761 Dex \\u4e13\\u6709\\u94fe\"),\"\\uff0c\\u5b66\\u4e60\\u5982\\u4f55\\u4f7f\\u7528 Muta \\u6846\\u67b6\\u4ece\\u96f6\\u5f00\\u53d1\\u4e00\\u6761\\u533a\\u5757\\u94fe\\u3002\\n\\u53c2\\u8003\\u4ee3\\u7801\\u5728\\uff1a \",Object(c.b)(\"a\",Object(r.a)({parentName:\"p\"},{href:\"https://github.com/nervosnetwork/muta-tutorial-dex\"}),\"dex\"),\"\\u3002\"),Object(c.b)(\"h2\",{id:\"\\u5f00\\u53d1\\u8303\\u5f0f\"},\"\\u5f00\\u53d1\\u8303\\u5f0f\"),Object(c.b)(\"p\",null,\"\\u5728\\u8bbe\\u8ba1 Service \\u65f6\\uff0c\\u6211\\u4eec\\u5e0c\\u671b\\u964d\\u4f4e\\u5f00\\u53d1\\u8005\\u7684\\u5f00\\u53d1\\u95e8\\u69db\\uff0c\\u8ba9\\u66f4\\u591a\\u5bf9\\u533a\\u5757\\u94fe\\u4e0d\\u90a3\\u4e48\\u719f\\u6089\\u7684\\u5f00\\u53d1\\u8005\\u4e5f\\u53ef\\u4ee5\\u5feb\\u901f\\u4e0a\\u624b\\uff0c\\u5f00\\u53d1\\u81ea\\u5df1\\u7684\\u533a\\u5757\\u94fe\\u3002\\u5728\\u5f00\\u53d1\\u4f53\\u9a8c\\u4e0a\\uff0c\\u6211\\u4eec\\u5e0c\\u671b\\u5411\\u5f00\\u53d1\\u5408\\u7ea6\\u7684\\u4f53\\u9a8c\\u9760\\u62e2\\uff0c\\u5982\\u679c\\u4f60\\u5df2\\u7ecf\\u5b66\\u4f1a\\u4e86\\u5982\\u4f55\\u5f00\\u53d1\\u5408\\u7ea6\\uff0c\\u90a3\\u4e48\\u606d\\u559c\\u4f60\\uff0c\\u4f60\\u4e5f\\u5df2\\u7ecf\\u5b66\\u4f1a\\u4e86\\u5982\\u4f55\\u5f00\\u53d1 Service\\u3002\\u5728\\u5f00\\u53d1\\u8303\\u5f0f\\u4e0a\\uff0c\\u6211\\u4eec\\u628a Service \\u62bd\\u8c61\\u6210\\u4e00\\u4e2a\\u5c0f\\u578b\\u72b6\\u6001\\u673a\\uff0cService \\u5305\\u542b\\u666e\\u901a\\u72b6\\u6001\\u673a\\u6240\\u62e5\\u6709\\u7684\\u7ec4\\u4ef6\\uff1a\"),Object(c.b)(\"ul\",null,Object(c.b)(\"li\",{parentName:\"ul\"},\"\\u72b6\\u6001\\uff08\\u5b58\\u50a8\\uff09\"),Object(c.b)(\"li\",{parentName:\"ul\"},\"\\u8f93\\u5165\\uff08\\u63a5\\u53e3\\uff09\"),Object(c.b)(\"li\",{parentName:\"ul\"},\"\\u51fd\\u6570\\uff08\\u903b\\u8f91\\uff09\"),Object(c.b)(\"li\",{parentName:\"ul\"},\"\\u8f93\\u51fa\\uff08\\u8fd4\\u56de\\u503c\\uff09\"),Object(c.b)(\"li\",{parentName:\"ul\"},\"\\u5f02\\u5e38\\u548c\\u9519\\u8bef\\u5904\\u7406\")),Object(c.b)(\"p\",null,\"\\u540c\\u65f6\\u4e5f\\u5305\\u542b\\u533a\\u5757\\u94fe\\u7279\\u6709\\u7684\\u4e00\\u4e9b\\u7ec4\\u4ef6\\uff1a\"),Object(c.b)(\"ul\",null,Object(c.b)(\"li\",{parentName:\"ul\"},\"\\u521b\\u4e16\\u5757\\u914d\\u7f6e\"),Object(c.b)(\"li\",{parentName:\"ul\"},\"\\u4e8b\\u4ef6\"),Object(c.b)(\"li\",{parentName:\"ul\"},\"\\u8d44\\u6e90\\u6d88\\u8017\\u7edf\\u8ba1\\uff08Cycle\\uff09\"),Object(c.b)(\"li\",{parentName:\"ul\"},\"\\u4e0e\\u533a\\u5757\\u94fe\\u76f8\\u5173\\u7684\\u94a9\\u5b50\\u51fd\\u6570\"),Object(c.b)(\"li\",{parentName:\"ul\"},Object(c.b)(\"inlineCode\",{parentName:\"li\"},\"hook_before\"),\" \\u548c \",Object(c.b)(\"inlineCode\",{parentName:\"li\"},\"hook_after\"),\" \\u5728\\u4e00\\u4e2a\\u533a\\u5757\\u6267\\u884c\\u524d/\\u540e\\u8c03\\u7528\\u7684\\u51fd\\u6570\"),Object(c.b)(\"li\",{parentName:\"ul\"},Object(c.b)(\"inlineCode\",{parentName:\"li\"},\"tx_hook_before\"),\" \\u548c \",Object(c.b)(\"inlineCode\",{parentName:\"li\"},\"tx_hook_after\"),\" \\u5728\\u6bcf\\u4e00\\u4e2a tx \\u524d/\\u540e\\u8c03\\u7528\\u7684\\u51fd\\u6570\")),Object(c.b)(\"p\",null,\"\\u63a5\\u4e0b\\u6765\\u6211\\u4eec\\u5206\\u522b\\u4ecb\\u7ecd\\u6bcf\\u4e2a\\u7ec4\\u4ef6\\u3002\"),Object(c.b)(\"h2\",{id:\"\\u72b6\\u6001\\u5b58\\u50a8\"},\"\\u72b6\\u6001\\u5b58\\u50a8\"),Object(c.b)(\"p\",null,\"\\u533a\\u522b\\u4e8e\\u666e\\u901a\\u7a0b\\u5e8f\\u7684\\u5b58\\u50a8\\uff0c\\u533a\\u5757\\u94fe\\u7684\\u5b58\\u50a8\\u9700\\u8981\\u4f7f\\u7528\\u5bc6\\u7801\\u5b66\\u4fdd\\u8bc1\\u6570\\u636e\\u7684\\u53ef\\u9a8c\\u8bc1\\u548c\\u9632\\u7be1\\u6539\\u3002\",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"ServiceSDK\"),\" \\u63d0\\u4f9b\\u4e86\\u4e00\\u4e9b\\u6570\\u636e\\u7c7b\\u578b\\u548c\\u63a5\\u53e3\\uff0c\\u8ba9\\u5f00\\u53d1\\u8005\\u65e0\\u9700\\u5173\\u5fc3\\u5bc6\\u7801\\u5b66\\u76f8\\u5173\\u7684\\u90e8\\u5206\\uff0c\\u53ef\\u4ee5\\u50cf\\u5f00\\u53d1\\u666e\\u901a\\u7a0b\\u5e8f\\u4e00\\u6837\\u5b8c\\u6210\\u72b6\\u6001\\u7684\\u5b58\\u50a8\\u3002\"),Object(c.b)(\"p\",null,Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"ServiceSDK\"),\" \\u63d0\\u4f9b\\u4e86\\u4e24\\u7c7b\\u5b58\\u50a8\\u63a5\\u53e3\\uff0c\\u4e00\\u7c7b\\u662f\\u83b7\\u5f97\\u5e38\\u89c1\\u6570\\u636e\\u7c7b\\u578b map\\u3001array\\u3001uint64\\u3001String\\u3001Bool \\u7684\\u63a5\\u53e3\\uff0c\\u4f7f\\u7528\\u8fd9\\u4e9b\\u6570\\u636e\\u7c7b\\u578b\\u7684\\u6570\\u636e\\u4f1a\\u81ea\\u52a8\\u5b58\\u5165\\u533a\\u5757\\u94fe\\u7684\\u4e16\\u754c\\u72b6\\u6001\\u4e2d\\u3002\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),\"pub trait ServiceSDK {\\n    // Alloc or recover a `Map` by` var_name`\\n    fn alloc_or_recover_map<\\n        Key: 'static + Send + FixedCodec + Clone + PartialEq,\\n        Val: 'static + FixedCodec,\\n    >(\\n        &mut self,\\n        var_name: &str,\\n    ) -> Box<dyn StoreMap<Key, Val>>;\\n\\n    // Alloc or recover a `Array` by` var_name`\\n    fn alloc_or_recover_array<Elm: 'static + FixedCodec>(\\n        &mut self,\\n        var_name: &str,\\n    ) -> Box<dyn StoreArray<Elm>>;\\n\\n    // Alloc or recover a `Uint64` by` var_name`\\n    fn alloc_or_recover_uint64(&mut self, var_name: &str) -> Box<dyn StoreUint64>;\\n\\n    // Alloc or recover a `String` by` var_name`\\n    fn alloc_or_recover_string(&mut self, var_name: &str) -> Box<dyn StoreString>;\\n\\n    // Alloc or recover a `Bool` by` var_name`\\n    fn alloc_or_recover_bool(&mut self, var_name: &str) -> Box<dyn StoreBool>;\\n\\n    // more functions are hidden\\n}\\n\")),Object(c.b)(\"p\",null,\"\\u5982\\u679c\\u8fd9\\u4e9b\\u6570\\u636e\\u7c7b\\u578b\\u4e0d\\u80fd\\u6ee1\\u8db3\\u4f60\\u7684\\u9700\\u6c42\\uff0c\\u8fd8\\u6709\\u4e00\\u7c7b key-value \\u63a5\\u53e3\\uff1a\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),\"pub trait ServiceSDK {\\n    \\n    // Get a value from the service state by key\\n    fn get_value<Key: FixedCodec, Ret: FixedCodec>(&self, key: &Key) -> Option<Ret>;\\n\\n    // Set a value to the service state by key\\n    fn set_value<Key: FixedCodec, Val: FixedCodec>(&mut self, key: Key, val: Val);\\n\\n    // more functions are hidden\\n}\\n\")),Object(c.b)(\"p\",null,\"\\u66f4\\u6709 get/set_account_value \\u8fd9\\u6837\\u4fbf\\u6377\\u7684\\u65b9\\u6cd5\\u3002\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),\"pub trait ServiceSDK {\\n    \\n    // Get a value from the specified address by key\\n    fn get_account_value<Key: FixedCodec, Ret: FixedCodec>(\\n        &self,\\n        address: &Address,\\n        key: &Key,\\n    ) -> Option<Ret>;\\n\\n    // Insert a pair of key / value to the specified address\\n    fn set_account_value<Key: FixedCodec, Val: FixedCodec>(\\n        &mut self,\\n        address: &Address,\\n        key: Key,\\n        val: Val,\\n    );\\n\\n    // more functions are hidden\\n}\\n\")),Object(c.b)(\"p\",null,\"\\u4f7f\\u7528\\u8fd9\\u7c7b\\u63a5\\u53e3\\u7684\\u6570\\u636e\\u4e5f\\u4f1a\\u81ea\\u52a8\\u5b58\\u50a8\\u5728\\u4e16\\u754c\\u72b6\\u6001\\u4e2d\\u3002\"),Object(c.b)(\"p\",null,\"\\u4f60\\u9700\\u8981\\u4f7f\\u7528\\u7ed3\\u6784\\u4f53\\u6765\\u5c01\\u88c5 Service\\uff0c\\u4ee5 Dex Service \\u4e3a\\u4f8b\\uff1a\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),\"// A dex service\\npub struct DexService<SDK: ServiceSDK, A> {\\n    _sdk: SDK,\\n    trades: Box<dyn StoreMap<Hash, Trade>>,\\n    buy_orders: Box<dyn StoreMap<Hash, Order>>,\\n    sell_orders: Box<dyn StoreMap<Hash, Order>>,\\n    history_orders: Box<dyn StoreMap<Hash, Order>>,\\n    validity: Box<dyn StoreUint64>,\\n    // \\u8fd9\\u91cc\\u7684 asset \\u662f\\u4f9d\\u8d56\\u53e6\\u4e00\\u4e2a AssetService \\u7684\\u670d\\u52a1\\uff0cA \\u662f\\u5979\\u7684 trait type param\\n    asset: A,\\n}\\n\")),Object(c.b)(\"p\",null,\"\\u6b64\\u5916\\uff0cService \\u7684\\u7ed3\\u6784\\u4f53\\u4e2d\\u9700\\u8981\\u5305\\u542b\\u5b9e\\u73b0 \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"ServiceSDK\"),\" trait \\u7684\\u6570\\u636e\\u7c7b\\u578b\\uff0c\\u901a\\u8fc7\\u8be5\\u7c7b\\u578b\\u83b7\\u5f97 ServiceSDK \\u63d0\\u4f9b\\u7684\\u80fd\\u529b\\u3002\"),Object(c.b)(\"h2\",{id:\"\\u63a5\\u53e3\\u65b9\\u6cd5\"},\"\\u63a5\\u53e3\\u65b9\\u6cd5\"),Object(c.b)(\"p\",null,\"Service \\u901a\\u8fc7\\u8fc7\\u7a0b\\u5b8f\\u6807\\u8bb0\\u65b9\\u6cd5\\uff0c\\u6765\\u63d0\\u4f9b\\u94fe\\u5916\\u53ef\\u4ee5\\u8c03\\u7528\\u7684\\u63a5\\u53e3\\u3002\"),Object(c.b)(\"blockquote\",null,Object(c.b)(\"p\",{parentName:\"blockquote\"},\"\\u8c03\\u7528\\u5176\\u4ed6 Service \\u7684\\u63a5\\u53e3\\uff0c\\u5fc5\\u987b\\u58f0\\u660e\\u5176\\u4ed6\\u63a5\\u53e3\\u7684 trait(\\u63a8\\u8350)\\uff0c \\u7136\\u540e\\u5728\\u6ce8\\u518c Service \\u7684\\u65f6\\u5019\\uff0c\\u901a\\u8fc7\\u9002\\u5f53\\u7684\\u65b9\\u6cd5\\u5c06\\u5176\\u4ed6 Service \\u7684\\u5b9e\\u4f8b\\u4f20\\u5165\\u3002\\u4e4b\\u540e\\u4f1a\\u8bf4\\u660e\\u3002\")),Object(c.b)(\"p\",null,\"\\u4ee5 Dex Service \\u4e3a\\u4f8b\\uff1a\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),\"#[service]\\nimpl<SDK: 'static + ServiceSDK> DexService<SDK> {\\n   #[cycles(210_00)]\\n   #[write]\\n   fn add_trade(&mut self, ctx: ServiceContext, payload: AddTradePayload) -> ServiceResponse<()>;\\n\\n  #[read]\\n  fn get_trades(&self, _ctx: ServiceContext) -> ServiceResponse<GetTradesResponse>;\\n\\n}\\n\")),Object(c.b)(\"p\",null,\"\\u7ed9 Service \\u7ed3\\u6784\\u4f53\\u7ed1\\u5b9a\\u65b9\\u6cd5\\u7684 \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"impl\"),\" \\u5757\\u4e2d\\uff0c\\u9700\\u8981\\u6807\\u8bb0 \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"#[service]\"),\" \\u8fc7\\u7a0b\\u5b8f\\uff0c\\u8be5\\u8fc7\\u7a0b\\u5b8f\\u4f1a\\u7ed9 Service \\u81ea\\u52a8\\u5b9e\\u73b0 \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"Service\"),\" trait\\uff0c\\u6846\\u67b6\\u901a\\u8fc7\\u8be5 trait \\u548c Service \\u4ea4\\u4e92\\u3002\"),Object(c.b)(\"p\",null,\"Dex Service \\u4e2d\\u5b9a\\u4e49\\u4e86\\u589e\\u52a0\\u4ea4\\u6613\\u5bf9\\u548c\\u8bfb\\u53d6\\u4ea4\\u6613\\u5bf9\\u4e24\\u4e2a\\u63a5\\u53e3\\u65b9\\u6cd5\\uff0c\\u6807\\u8bb0\\u4e86 \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"#[write]\"),\" \\u7684\\u4e3a\\u5199\\u65b9\\u6cd5\\uff0c\\u8be5\\u65b9\\u6cd5\\u53ef\\u4ee5\\u6539\\u53d8 Service \\u72b6\\u6001\\uff1b\\u6807\\u8bb0\\u4e86 \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"#[read]\"),\" \\u7684\\u4e3a\\u8bfb\\u65b9\\u6cd5\\uff0c\\u8be5\\u65b9\\u6cd5\\u4e0d\\u80fd\\u6539\\u53d8 Service \\u72b6\\u6001\\uff1b\"),Object(c.b)(\"p\",null,\"\\u65b9\\u6cd5\\u7684\\u7b2c\\u4e8c\\u4e2a\\u53c2\\u6570\",Object(c.b)(\"strong\",{parentName:\"p\"},\"\\u5fc5\\u987b\"),\"\\u4e3a \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"ServiceContext\"),\" \\u7c7b\\u578b\\uff0c\\u8be5\\u7c7b\\u578b\\u8d1f\\u8d23\\u7ba1\\u7406\\u4ea4\\u6613\\u6267\\u884c\\u7684\\u4e0a\\u4e0b\\u6587\\uff1b\"),Object(c.b)(\"p\",null,\"\\u65b9\\u6cd5\\u7684\\u7b2c\\u4e09\\u4e2a\\u53c2\\u6570\\u662f\",Object(c.b)(\"strong\",{parentName:\"p\"},\"\\u53ef\\u9009\"),\"\\u7684\\uff0c\\u5b9a\\u4e49\\u63a5\\u53e3\\u7684\\u8f93\\u5165\\u53c2\\u6570\\uff0c\\u540c\\u65f6\\u9700\\u8981\\u4e3a\\u8be5\\u7c7b\\u578b\\u5b9e\\u73b0\\u5e8f\\u5217\\u5316 trait\\uff0c\\u76ee\\u524d\\u6846\\u67b6\\u4f7f\\u7528\\u7684\\u662f \",Object(c.b)(\"strong\",{parentName:\"p\"},\"json\"),\" \\u5e8f\\u5217\\u5316\\u65b9\\u6848\\uff1a\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),\"#[derive(Deserialize, Serialize, Clone, Debug, PartialEq, Eq)]\\npub struct AddTradePayload {\\n    pub base_asset: Hash,\\n    pub counter_party: Hash,\\n}\\n\")),Object(c.b)(\"p\",null,\"\\u63a5\\u53e3\\u65b9\\u6cd5\\u6700\\u591a\\u53ea\\u80fd\\u6709\\u8fd9 3 \\u4e2a\\u53c2\\u6570\\u3002\"),Object(c.b)(\"h2\",{id:\"\\u8fd4\\u56de\\u503c\\u548c\\u9519\\u8bef\\u5904\\u7406\"},\"\\u8fd4\\u56de\\u503c\\u548c\\u9519\\u8bef\\u5904\\u7406\"),Object(c.b)(\"p\",null,\"\\u63a5\\u53e3\\u65b9\\u6cd5\\u7684\\u8fd4\\u56de\\u503c\\u7edf\\u4e00\\u4e3a \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"ServiceResponse<T>\"),\" \\u7c7b\\u578b\\uff1a\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),\"#[derive(Debug, Clone, Default)]\\npub struct ServiceResponse<T: Default> {\\n    pub code:          u64,\\n    pub succeed_data:  T,\\n    pub error_message: String,\\n}\\n\")),Object(c.b)(\"p\",null,\"\\u5bf9\\u4e8e\\u6b63\\u786e\\u7684\\u6570\\u636e\\u8fd4\\u56de\\uff0c\\u53ea\\u9700\\u5c06\\u6570\\u636e\\u901a\\u8fc7 ServiceResponse.from_succeed(succeed_data: T) \\u5373\\u53ef\\u521b\\u5efa ServiceResponse\"),Object(c.b)(\"p\",null,\"\\u5bf9\\u4e8e\\u9519\\u8bef\\u8fd4\\u56de\\uff0c\\u63a8\\u8350\\u6bcf\\u4e2a Service \\u5b9a\\u4e49\\u81ea\\u5df1\\u7684\\u9519\\u8bef\\u7c7b\\u578b\\uff0c\\u7136\\u540e\\u901a\\u8fc7ServiceResponsef.from_error(code: u64, error_message: String)\\uff0c\\u521b\\u5efa ServiceResponse\\u3002\\u4ee5 Dex Service \\u4e3a\\u4f8b\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),'\\n#[derive(Debug, Display)]\\npub enum DexError {\\n    #[display(fmt = \"Parsing payload to json failed {:?}\", _0)]\\n    JsonParse(serde_json::Error),\\n\\n    IllegalTrade,\\n\\n    TradeExisted,\\n\\n    TradeNotExisted,\\n\\n    OrderOverdue,\\n\\n    OrderNotExisted,\\n}\\n\\nimpl DexError {\\n    fn code(&self) -> u64 {\\n        match self {\\n            DexError::JsonParse(_) => 201,\\n            DexError::IllegalTrade { .. } => 202,\\n            DexError::TradeExisted { .. } => 203,\\n            DexError::TradeNotExisted { .. } => 204,\\n            DexError::OrderOverdue => 205,\\n            DexError::OrderNotExisted => 206,\\n        }\\n    }\\n}\\n\\nimpl<T: Default> From<DexError> for ServiceResponse<T> {\\n    fn from(err: DexError) -> ServiceResponse<T> {\\n        ServiceResponse::from_error(err.code(), err.to_string())\\n    }\\n}\\n')),Object(c.b)(\"h2\",{id:\"\\u521b\\u4e16\\u914d\\u7f6e\"},\"\\u521b\\u4e16\\u914d\\u7f6e\"),Object(c.b)(\"p\",null,\"\\u5982\\u679c\\u521b\\u4e16\\u5757\\u7684\\u4e16\\u754c\\u72b6\\u6001\\u9700\\u8981\\u5305\\u542b Service \\u7684\\u521d\\u59cb\\u72b6\\u6001\\uff0c\\u53ef\\u4ee5\\u5728 Service \\u4e2d\\u901a\\u8fc7\\u8fc7\\u7a0b\\u5b8f\",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"#[genesis]\"),\" \\u6807\\u6ce8\\u7684 \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"fn init_genesis\"),\" \\u65b9\\u6cd5\\u6765\\u5b8c\\u6210\\u3002\\u6846\\u67b6\\u5728\\u521b\\u5efa\\u521b\\u4e16\\u5757\\u65f6\\uff0c\\u4f1a\\u8c03\\u7528 Service \\u4e2d\\u6807\\u6ce8\\u4e86 \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"#[genesis]\"),\" \\u7684\\u65b9\\u6cd5\\u6765\\u5b8c\\u6210\\u521d\\u59cb\\u5316\\uff0c\\u8be5\\u51fd\\u6570\\u6700\\u591a\\u53ea\\u6709\\u4e00\\u4e2a\\u3002\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),\"#[genesis]\\n    fn init_genesis(&mut self, payload: InitGenesisPayload) {\\n        assert!(self.profits.is_empty());\\n\\n        let mut info = payload.info;\\n        info.tx_fee_discount.sort();\\n        self.sdk.set_value(INFO_KEY.to_string(), info);\\n        self.sdk.set_value(\\n            MINER_PROFIT_OUTLET_KEY.to_string(),\\n            payload.miner_profit_outlet_address,\\n        );\\n\\n        for miner in payload.miner_charge_map.into_iter() {\\n            self.miners\\n                .insert(miner.address, miner.miner_charge_address);\\n        }\\n    }\\n\")),Object(c.b)(\"h2\",{id:\"\\u8d44\\u6e90\\u6d88\\u8017\\u7edf\\u8ba1\\uff1acycle\"},\"\\u8d44\\u6e90\\u6d88\\u8017\\u7edf\\u8ba1\\uff1acycle\"),Object(c.b)(\"p\",null,\"\\u63a5\\u53e3\\u65b9\\u6cd5\\u4e2d\\u4f7f\\u7528 \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"ServiceContext\"),\" \\u7684 \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"fn sub_cycles\"),\" \\u63a5\\u53e3\\uff0c\\u53ef\\u4ee5\\u6d88\\u8017\\u4e00\\u5b9a\\u6570\\u91cf\\u7684 cycles \\uff0c\\u63a5\\u53e3\\u5982\\u4e0b\\uff1a\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),\"pub fn sub_cycles(&self, cycles: u64) -> bool\\n\")),Object(c.b)(\"p\",null,\"\\u6b64\\u5916\\uff0c\\u5982\\u679c\\u63a5\\u53e3\\u65b9\\u6cd5\\u6d88\\u8017\\u7684 cycles \\u662f\\u56fa\\u5b9a\\u6570\\u91cf\\uff0c\\u53ef\\u4ee5\\u4f7f\\u7528\\u8fc7\\u7a0b\\u5b8f \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"#[cycles(amount)]\"),\" \\u6807\\u8bb0\\u63a5\\u53e3\\u65b9\\u6cd5\\uff0c\\u6846\\u67b6\\u4f1a\\u81ea\\u52a8\\u6263\\u9664 \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"amount\"),\" \\u6570\\u91cf\\u7684 cycles \\u3002\\u4f8b\\u5982\\uff0c\\u521b\\u5efa\\u8d44\\u4ea7\\u65b9\\u6cd5\\u6d88\\u8017\\u56fa\\u5b9a 210_00 \\u6570\\u91cf\\u7684 cycles: \"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),\"#[cycles(210_00)]\\n    #[write]\\n    fn create_asset(\\n        &mut self,\\n        ctx: ServiceContext,\\n        payload: CreateAssetPayload,\\n    ) -> ServiceResponse<Asset> ;\\n\")),Object(c.b)(\"h2\",{id:\"\\u4e8b\\u4ef6\"},\"\\u4e8b\\u4ef6\"),Object(c.b)(\"p\",null,\"\\u4f7f\\u7528 \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"ServiceContext\"),\" \\u7684 \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"fn emit_event\"),\" \\u63a5\\u53e3\\uff0c\\u53ef\\u4ee5\\u5411\\u94fe\\u5916\\u629b\\u51fa\\u4e8b\\u4ef6\\u4fe1\\u606f\\u3002 name \\u7c7b\\u4f3c\\u4e8e topic\\uff0c message \\u5219\\u662f\\u4fe1\\u606f\\uff1a\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),\"pub fn emit_event(&self, name: String, message: String) {\\n        self.events.borrow_mut().push(Event {\\n            service: self.service_name.clone(),\\n            name,\\n            data: message,\\n        })\\n    }\\uff1b\\n\")),Object(c.b)(\"p\",null,\"\\u629b\\u51fa\\u7684\\u4e8b\\u4ef6 message \\u4e3a json \\u5e8f\\u5217\\u5316\\u7684\\u5b57\\u7b26\\u4e32\\uff0c\\u4ee5 Asset Service \\u4e3a\\u4f8b\\uff1a\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),'macro_rules! serde_json_string {\\n    ($payload: expr) => {\\n        match serde_json::to_string(&$payload).map_err(AssetError::JsonParse) {\\n            Ok(s) => s,\\n            Err(e) => return e.into(),\\n        };\\n    };\\n}\\n\\n\\nlet event_json = serde_json_string!(event);\\nctx.emit_event(\"TransferAsset\".to_owned(), event_json);\\nServiceResponse::from_succeed(())\\n')),Object(c.b)(\"p\",null,\"\\u8fd9\\u6bb5\\u4ee3\\u7801\\u4f7f\\u7528\\u5230\\u4e86\\u4e00\\u4e2a\\u5728 Asset Service \\u5185\\u81ea\\u5b9a\\u4e49\\u7684\\u5b8f serde_json_string\\u3002\\n\\u8be5\\u5b8f\\u53ea\\u662f\\u7b80\\u5355\\u5730\\u5c06\\u4f20\\u5165\\u7684\\u6570\\u636e json stringfy \\u6210\\u5b57\\u7b26\\u4e32\\u8fd4\\u56de\\uff0c\\u6216\\u8005\\u5f53 json stringfy \\u51fa\\u9519\\u7684\\u65f6\\u5019\\uff0c\\u76f4\\u63a5\\u5728\\u5f53\\u524d\\u65b9\\u6cd5\\u4e0b return AssetError::JsonParse \\u7684\\u9519\\u8bef\\u3002\"),Object(c.b)(\"h2\",{id:\"servicecontext-\\u4e2d\\u7684\\u5176\\u4ed6\\u65b9\\u6cd5\"},\"ServiceContext \\u4e2d\\u7684\\u5176\\u4ed6\\u65b9\\u6cd5\"),Object(c.b)(\"p\",null,\"ServiceContext \\u7ef4\\u62a4\\u4ea4\\u6613\\u6267\\u884c\\u7684\\u4e0a\\u4e0b\\u6587\\uff0c\\u901a\\u8fc7 ServiceContext \\u53ef\\u4ee5\\u83b7\\u53d6\\u7684\\u4fe1\\u606f\\u6709\\uff1a\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),\"// \\u83b7\\u53d6\\u4ea4\\u6613\\u54c8\\u5e0c\\npub fn get_tx_hash(&self) -> Option<Hash>;\\n\\n// \\u83b7\\u53d6 nonce\\npub fn get_nonce(&self) -> Option<Hash>;\\n\\n// \\u83b7\\u53d6 cycle \\u4ef7\\u683c\\npub fn get_cycles_price(&self) -> u64\\uff1b\\n\\n// \\u83b7\\u53d6  cycle limit\\npub fn get_cycles_limit(&self) -> u64\\uff1b\\n\\n// \\u83b7\\u53d6\\u5df2\\u6d88\\u8017 cycles \\u6570\\u91cf\\npub fn get_cycles_used(&self) -> u64\\uff1b\\n\\n// \\u83b7\\u53d6\\u4ea4\\u6613\\u53d1\\u8d77\\u65b9\\u5730\\u5740\\npub fn get_caller(&self) -> Address\\uff1b\\n\\n// \\u83b7\\u53d6\\u4ea4\\u6613\\u6240\\u5728\\u533a\\u5757\\u9ad8\\u5ea6\\npub fn get_current_height(&self) -> u64\\uff1b\\n\\n// \\u83b7\\u53d6\\u989d\\u5916\\u4fe1\\u606f\\npub fn get_extra(&self) -> Option<Bytes>\\uff1b\\n\\n// \\u83b7\\u53d6\\u5f53\\u524d\\u533a\\u5757\\u65f6\\u95f4\\u6233\\npub fn get_timestamp(&self) -> u64\\uff1b\\n\\n// \\u83b7\\u5f97\\u5df2\\u7ecf\\u4e8b\\u4ef6\\u4fe1\\u606f\\npub fn get_events(&self) -> Vec<Event>\\uff1b\\n\\n// \\u83b7\\u5f97 tx \\u8c03\\u7528\\u7684 service name\\npub fn get_service_name(&self) -> &str;\\n\\n// \\u83b7\\u5f97 tx \\u8c03\\u7528\\u7684 method name\\npub fn get_service_method(&self) -> &str;\\n\\n// \\u83b7\\u5f97 tx \\u8c03\\u7528\\u7684 payload\\npub fn get_payload(&self) -> &str;\\n\")),Object(c.b)(\"h2\",{id:\"service-\\u8c03\\u7528\"},\"Service \\u8c03\\u7528\"),Object(c.b)(\"p\",null,\"\\u4e00\\u4e2a Service \\u8c03\\u7528\\u53e6\\u4e00\\u4e2a Service\\uff0c\\u7b49\\u540c\\u4e8e\\u4e00\\u4e2a Rust function \\u4e2d\\u8c03\\u7528\\u53e6\\u4e00\\u4e2a funtion\\u3002\\n\\u4f8b\\u5982\\u5728 Dex Service \\u4e2d\\u8c03\\u7528 Asset Service\\uff0c\\u53ea\\u9700\\u8981\\u901a\\u8fc7 Dex Service \\u81ea\\u8eab\\u7684 asset \\u53d8\\u91cf\\uff0c\\u5c31\\u53ef\\u4ee5\\u8bbf\\u95ee Asset Service\\u4e86\\u3002\\nTrait bound A \\u63a8\\u8350\\u662f Asset Service \\u5bf9\\u5176\\u4ed6 Service \\u66b4\\u9732\\u51fa\\u6765\\u7684\\u65b9\\u6cd5\\u3002\"),Object(c.b)(\"p\",null,\"\\u8be5 asset \\u5c5e\\u6027\\u9700\\u8981\\u5728\\u6784\\u9020 DexService \\u7684\\u65f6\\u5019\\u4f20\\u5165\\u3002\\u4e4b\\u540e\\u6211\\u4eec\\u4f1a\\u8bb2\\u5230\\u3002\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),\"\\npub struct DexService<SDK: ServiceSDK, A> {\\n    _sdk: SDK,\\n    trades: Box<dyn StoreMap<Hash, Trade>>,\\n    buy_orders: Box<dyn StoreMap<Hash, Order>>,\\n    sell_orders: Box<dyn StoreMap<Hash, Order>>,\\n    history_orders: Box<dyn StoreMap<Hash, Order>>,\\n    validity: Box<dyn StoreUint64>,\\n    asset: A,\\n}\\n\\n\")),Object(c.b)(\"h2\",{id:\"hook\"},\"Hook\"),Object(c.b)(\"p\",null,\"\\u6bcf\\u4e2a block \\u6267\\u884c\\u524d\\u540e\\uff0c\\u6846\\u67b6\\u4f1a\\u5206\\u522b\\u8c03\\u7528 Service \\u7684 hook_before\\u3001hook_after \\u65b9\\u6cd5, \\u8fd9\\u4e24\\u4e2a\\u65b9\\u6cd5\\u9700\\u5206\\u522b\\u4f7f\\u7528 \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"#[hook_before]\"),\"\\u3001\",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"#[hook_after]\"),\" \\u8fc7\\u7a0b\\u5b8f\\u6807\\u8bb0\\u3002\\nService \\u53ef\\u501f\\u52a9 hook \\u529f\\u80fd\\u5b8c\\u6210\\u7279\\u5b9a\\u903b\\u8f91\\uff0c\\u5982 DPoS Service \\u53ef\\u5728 hook_after \\u65b9\\u6cd5\\u4e2d\\u7edf\\u8ba1\\u5019\\u9009\\u9a8c\\u8bc1\\u4eba\\u62b5\\u62bc token \\u6570\\u91cf\\uff0c\\u8fdb\\u884c\\u9a8c\\u8bc1\\u4eba\\u53d8\\u66f4\\u7b49\\u64cd\\u4f5c\\uff1bDex Service \\u53ef\\u5728 hook_after \\u65b9\\u6cd5\\u4e2d\\u5bf9\\u8ba2\\u5355\\u8fdb\\u884c\\u5339\\u914d\\u548c\\u6210\\u4ea4\\u64cd\\u4f5c\\uff1a\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),\"// Hook method in dex service\\n#[hook_after]\\n    fn match_and_deal(&mut self, params: &ExecutorParams)\\uff1b\\n\")),Object(c.b)(\"p\",null,\"\\u6ce8\\u610f\\uff0chook_before \\u548c hook_after \\u4e0d\\u5141\\u8bb8\\u8fd4\\u56de\\u4efb\\u4f55\\u6570\\u636e\\u7c7b\\u578b\\u3002\\u8fd9\\u610f\\u5473\\u7740\\u4ed6\\u4eec\\u6ca1\\u6709\",Object(c.b)(\"strong\",{parentName:\"p\"},\"\\u9519\\u8bef\"),\"\\u4e00\\u8bf4\\u3002\\u5f00\\u53d1\\u8005\\u5fc5\\u987b\\u5728\\u65b9\\u6cd5\\u5185\\u59a5\\u5584\\u5904\\u7406\\u53ef\\u80fd\\u9047\\u5230\\u7684\\u4e1a\\u52a1\\u5f02\\u5e38\\uff0c\",Object(c.b)(\"strong\",{parentName:\"p\"},\"\\u5207\\u4e0d\\u53ef\\u629b\\u51fa panic\"),\"\\u3002\"),Object(c.b)(\"h2\",{id:\"tx-hook\"},\"Tx Hook\"),Object(c.b)(\"p\",null,\"\\u5728\\u6bcf\\u7b14\\u4ea4\\u6613\\u6267\\u884c\\u7684\\u524d\\u540e\\uff0c\\u6846\\u67b6\\u8fd8\\u4f1a\\u8c03\\u7528 Service \\u7684 tx_hook_before\\u3001tx_hook_after \\u65b9\\u6cd5\\uff0c\\u8fd9\\u4e24\\u4e2a\\u65b9\\u6cd5\\u9700\\u5206\\u522b\\u4f7f\\u7528 \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"#[tx_hook_before]\"),\"\\u3001\",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"#[tx_hook_after]\"),\" \\u8fc7\\u7a0b\\u5b8f\\u6807\\u8bb0\\u3002\\nService \\u53ef\\u501f\\u52a9 tx hook \\u5b8c\\u6210\\u9488\\u5bf9\\u4ea4\\u6613\\u7684\\u7279\\u5b9a\\u903b\\u8f91\\uff0c\\u6bd4\\u5982\\u9a8c\\u8bc1\\u4ea4\\u6613\\u7684\\u53d1\\u8d77\\u4eba\\u662f\\u5426\\u6ee1\\u8db3\\u7279\\u5b9a\\u7684\\u6761\\u4ef6\\uff0c\\u82e5\\u4e0d\\u6ee1\\u8db3\\uff0c\\u53ef\\u76f4\\u63a5\\u7ec8\\u6b62\\u8be5\\u4ea4\\u6613\\u7684\\u6267\\u884c\\u3002\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),'// Tx hook method\\n#[tx_hook_before]\\nfn check_balance(&self, ctx: ServiceContext) -> ServiceResponse<()> {\\n    let caller = ctx.get_caller();\\n    // Check caller balance...\\n    // if caller.balance < xxx {\\n    //     ctx.cancel(\"abort tx\".to_owned())\\n    // }\\n}\\n')),Object(c.b)(\"p\",null,\"tx_hook_before \\u548c tx_hook_after \\u53ef\\u4ee5\\u8fd4\\u56de\\u9519\\u8bef\\u3002\"),Object(c.b)(\"ol\",null,Object(c.b)(\"li\",{parentName:\"ol\"},\"\\u65e0\\u8bba tx_hook_before \\u6267\\u884c\\u7684\\u7ed3\\u679c\\u662f\\u5931\\u8d25\\u8fd8\\u662f\\u6210\\u529f\\uff0ctx_hook_before \\u6240\\u9020\\u6210\\u7684\\u6539\\u52a8\\uff0c\\u5305\\u62ec state \\u548c event\\uff0c\\u90fd\\u5c06\\u88ab\\u4fdd\\u7559\\u3002\"),Object(c.b)(\"li\",{parentName:\"ol\"},\"\\u5982\\u679c tx_hook_before \\u8fd4\\u56de\\u4e86\\u9519\\u8bef\\uff0c\\u90a3\\u4e48 tx \\u7684\\u903b\\u8f91\\u5c06\\u88ab\\u8df3\\u8fc7\\u3002\"),Object(c.b)(\"li\",{parentName:\"ol\"},\"\\u5982\\u679c tx_hook_after \\u6267\\u884c\\u6210\\u529f\\uff0c\\u90a3\\u4e48 tx \\u7684\\u6539\\u52a8 \\u548c tx_hook_after \\u7684\\u6539\\u52a8\\uff0c\\u90fd\\u5c06\\u88ab\\u4fdd\\u7559\\u3002\"),Object(c.b)(\"li\",{parentName:\"ol\"},\"\\u5982\\u679c tx_hook_after \\u6267\\u884c\\u5931\\u8d25\\uff0c\\u90a3\\u4e48 tx \\u7684\\u6539\\u52a8 \\u548c tx_hook_after \\u7684\\u6539\\u52a8\\uff0c\\u90fd\\u5c06\\u88ab\\u9057\\u5f03\\u3002\")),Object(c.b)(\"h2\",{id:\"\\u5e8f\\u5217\\u5316\"},\"\\u5e8f\\u5217\\u5316\"),Object(c.b)(\"p\",null,\"Service \\u4e3b\\u8981\\u4f7f\\u7528\\u4e24\\u79cd\\u5e8f\\u5217\\u5316\\u65b9\\u6848: Json \\u548c \",Object(c.b)(\"a\",Object(r.a)({parentName:\"p\"},{href:\"https://github.com/ethereum/wiki/wiki/RLP\"}),\"RLP\"),\";\"),Object(c.b)(\"h3\",{id:\"json\"},\"Json\"),Object(c.b)(\"p\",null,\"\\u7528\\u6237\\u53d1\\u9001\\u4ea4\\u6613\\u548c\\u8fd4\\u56de\\u7ed3\\u679c\\uff0c\\u5747\\u4f7f\\u7528 json \\u5e8f\\u5217\\u5316\\uff0c\\u56e0\\u6b64\\u63a5\\u53e3\\u65b9\\u6cd5\\u7684\\u8f93\\u5165\\u53c2\\u6570\\u4e2d\\u7684 \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"payload\"),\" \\u548c\\u8fd4\\u56de\\u503c \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"ServiceResponse<_>\"),\" \\u4e2d\\u7684 \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"Response\"),\" \\u90fd\\u9700\\u8981\\u5b9e\\u73b0 json \\u5e8f\\u5217\\u5316\\u7684 trait\\u3002\\u4ee5 \",Object(c.b)(\"a\",Object(r.a)({parentName:\"p\"},{href:\"https://github.com/mkxbl/muta-tutorial-dex/tree/master/services/asset\"}),\"Asset Service\"),\" \\u7684 \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"fn create_asset\"),\" \\u63a5\\u53e3\\u65b9\\u6cd5\\u4e3a\\u4f8b\\uff1a\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),\"// \\u63a5\\u53e3\\u65b9\\u6cd5\\n#[cycles(210_00)]\\n#[write]\\nfn create_asset(\\n        &mut self,\\n        ctx: ServiceContext,\\n        payload: CreateAssetPayload,\\n    ) -> ServiceResponse<Asset>;\\n\\n// \\u6807\\u8bb0 #[derive(Deserialize, Serialize)] \\u4ee5\\u5b9e\\u73b0 json \\u5e8f\\u5217\\u5316\\n#[derive(Deserialize, Serialize, Clone, Debug)]\\npub struct CreateAssetPayload {\\n    pub name:   String,\\n    pub symbol: String,\\n    pub supply: u64,\\n}\\n// \\u6807\\u8bb0 #[derive(Deserialize, Serialize)] \\u4ee5\\u5b9e\\u73b0 json \\u5e8f\\u5217\\u5316\\n#[derive(Deserialize, Serialize, Clone, Debug)]\\npub struct Asset {\\n    pub id:     Hash,\\n    pub name:   String,\\n    pub symbol: String,\\n    pub supply: u64,\\n    pub issuer: Address,\\n}\\n\")),Object(c.b)(\"h3\",{id:\"rlp\"},\"RLP\"),Object(c.b)(\"p\",null,\"\\u5bf9\\u4e8e\\u5b58\\u50a8\\u5230\\u4e16\\u754c\\u72b6\\u6001\\u7684\\u6570\\u636e\\u7ed3\\u6784\\uff0c\\u4e3a\\u4e86\\u4fdd\\u8bc1\\u5e8f\\u5217\\u5316\\u7684\\u4e00\\u81f4\\u6027\\uff0c\\u8be5\\u6570\\u636e\\u7ed3\\u6784\\u9700\\u8981\\u5b9e\\u73b0 \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"trait FixedCodec\"),\"\\uff0c\\u6211\\u4eec\\u9ed8\\u8ba4\\u4f7f\\u7528 RLP \\u65b9\\u6848\\u6765\\u5b9e\\u73b0\\u8be5 trait \\u3002\\u4ee5 \",Object(c.b)(\"a\",Object(r.a)({parentName:\"p\"},{href:\"https://github.com/mkxbl/muta-tutorial-dex/tree/master/services/asset\"}),\"Asset Service\"),\" \\u4e3a\\u4f8b\\uff1a\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),\"// Asset \\u9700\\u8981\\u5b58\\u5165\\u4e16\\u754c\\u72b6\\u6001 \\npub struct AssetService<SDK> {\\n    // \\u7701\\u7565\\u5176\\u4ed6\\n    assets: Box<dyn StoreMap<Hash, Asset>>,\\n}\\n\\npub trait FixedCodec: Sized {\\n    fn encode_fixed(&self) -> ProtocolResult<Bytes>;\\n    fn decode_fixed(bytes: Bytes) -> ProtocolResult<Self>;\\n}\\n\\n// \\u5bf9 Asset \\u5b9e\\u73b0 trait FixedCodec\\nimpl FixedCodec for Asset {\\n    fn encode_fixed(&self) -> ProtocolResult<Bytes> {\\n        Ok(Bytes::from(rlp::encode(self)))\\n    }\\n\\n    fn decode_fixed(bytes: Bytes) -> ProtocolResult<Self> {\\n        Ok(rlp::decode(bytes.as_ref()).map_err(FixedCodecError::from)?)\\n    }\\n}\\n// \\u5bf9 Asset \\u5b9e\\u73b0 RLP \\u53cd\\u5e8f\\u5217\\u5316\\u65b9\\u6848\\nimpl rlp::Decodable for Asset {\\n    fn decode(rlp: &rlp::Rlp) -> Result<Self, rlp::DecoderError> {\\n        Ok(Self {\\n            id:     rlp.at(0)?.as_val()?,\\n            name:   rlp.at(1)?.as_val()?,\\n            symbol: rlp.at(2)?.as_val()?,\\n            supply: rlp.at(3)?.as_val()?,\\n            issuer: rlp.at(4)?.as_val()?,\\n        })\\n    }\\n}\\n// \\u5bf9 Asset \\u5b9e\\u73b0 RLP \\u5e8f\\u5217\\u5316\\u65b9\\u6848\\nimpl rlp::Encodable for Asset {\\n    fn rlp_append(&self, s: &mut rlp::RlpStream) {\\n        s.begin_list(5)\\n            .append(&self.id)\\n            .append(&self.name)\\n            .append(&self.symbol)\\n            .append(&self.supply)\\n            .append(&self.issuer);\\n    }\\n}\\n\")),Object(c.b)(\"h2\",{id:\"\\u6784\\u9020\\u65b9\\u6cd5\"},\"\\u6784\\u9020\\u65b9\\u6cd5\"),Object(c.b)(\"p\",null,\"\\u6784\\u9020\\u65b9\\u6cd5\\u8fd4\\u56de Service \\u5b9e\\u4f8b\\uff0c\\u4ee5 Asset Service \\u4e3a\\u4f8b\\uff1a\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),\"#[service]\\nimpl<SDK: ServiceSDK> AssetService<SDK> {\\n    pub fn new(mut sdk: SDK) -> Self {\\n        let assets: Box<dyn StoreMap<Hash, Asset>> = sdk.alloc_or_recover_map(ASSETS_KEY);\\n\\n        Self { sdk, assets }\\n    }\\n}\\n\")),Object(c.b)(\"h2\",{id:\"\\u521d\\u59cb\\u5316\\u6ce8\\u518c-service\"},\"\\u521d\\u59cb\\u5316&\\u6ce8\\u518c Service\"),Object(c.b)(\"p\",null,\"DefaultServiceMapping \\u7c7b\\u8d1f\\u8d23\\u5411 Muta \\u6ce8\\u518c Service\\u3002\\n1. \\u5c06\\u8981\\u6ce8\\u518c\\u7684 Service \\u624b\\u52a8\\u6dfb\\u52a0\\u5230 list_service_name \\u65b9\\u6cd5\\u7684\\u5217\\u8868\\u4e2d\\u3002\\n2. \\u901a\\u8fc7 SDKFactory\\uff0c\\u83b7\\u5f97\\uff0c\\u83b7\\u5f97\\u5bf9\\u5e94 Service \\u7684 ServiceSDK\\uff0cServiceSDK\\u7684\\u4f5c\\u7528\\u89c1\\u4e0a\\u6587\\u3002\\n3. \\u5982\\u679c\\u4e00\\u4e2a Service \\u4f9d\\u8d56\\u5176\\u4ed6\\u7684 Service\\uff0c\\u5148\\u5c06\\u5176\\u4ed6 Service \\u6784\\u9020\\u51fa\\u6765\\u3002\\n4. \\u5982\\u679c\\u6709\\u5faa\\u73af\\u4f9d\\u8d56\\uff0c\\u53ef\\u4ee5\\u5148\\u5b8c\\u6210\\u6784\\u9020\\uff0c\\u6700\\u540e\\u8bbe\\u7f6e\\u4f9d\\u8d56\\u3002\"),Object(c.b)(\"blockquote\",null,Object(c.b)(\"p\",{parentName:\"blockquote\"},\"\\u4f8b\\u5b50\\u4e2d\\u7684 new_dex\\uff0c\\u5c31\\u662f\\u5148\\u83b7\\u53d6 AssetService \\u7684\\u5b9e\\u4f8b\\uff0c\\u7136\\u540e\\u518d\\u521d\\u59cb\\u5316 DexService \\u81ea\\u8eab\")),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(r.a)({parentName:\"pre\"},{className:\"language-rust\"}),'\\nimpl ServiceMapping for DefaultServiceMapping {\\n    fn get_service<SDK: \\'static + ServiceSDK, Factory: SDKFactory<SDK>>(\\n        &self,\\n        name: &str,\\n        factory: &Factory,\\n    ) -> ProtocolResult<Box<dyn Service>> {\\n        let service = match name {\\n            \"asset\" => Box::new(Self::new_asset(factory)?) as Box<dyn Service>,\\n            \"metadata\" => Box::new(Self::new_metadata(factory)?) as Box<dyn Service>,\\n            \"dex\" => Box::new(Self::new_dex(factory)?) as Box<dyn Service>,\\n            _ => panic!(\"not found service\"),\\n        };\\n\\n        Ok(service)\\n    }\\n\\n    fn list_service_name(&self) -> Vec<String> {\\n        vec![\"asset\".to_owned(), \"metadata\".to_owned(), \"dex\".to_owned()]\\n    }\\n}\\n\\nimpl DefaultServiceMapping {\\n    fn new_asset<SDK: \\'static + ServiceSDK, Factory: SDKFactory<SDK>>(\\n        factory: &Factory,\\n    ) -> ProtocolResult<AssetService<SDK>> {\\n        Ok(AssetService::new(factory.get_sdk(\"asset\")?))\\n    }\\n\\n    fn new_metadata<SDK: \\'static + ServiceSDK, Factory: SDKFactory<SDK>>(\\n        factory: &Factory,\\n    ) -> ProtocolResult<MetadataService<SDK>> {\\n        Ok(MetadataService::new(factory.get_sdk(\"metadata\")?))\\n    }\\n\\n    fn new_dex<SDK: \\'static + ServiceSDK, Factory: SDKFactory<SDK>>(\\n        factory: &Factory,\\n    ) -> ProtocolResult<DexService<SDK, AssetService<SDK>>> {\\n        let asset = Self::new_asset(factory)?;\\n        Ok(DexService::new(factory.get_sdk(\"dex\")?, asset))\\n    }\\n}\\n\\n')),Object(c.b)(\"h2\",{id:\"service-\\u793a\\u4f8b\"},\"Service \\u793a\\u4f8b\"),Object(c.b)(\"p\",null,\"\\u8fd9\\u91cc\\u6709\\u4e00\\u4e2a\\u529f\\u80fd\\u7c7b\\u4f3c ERC-20 \\u7684 \",Object(c.b)(\"a\",Object(r.a)({parentName:\"p\"},{href:\"https://github.com/nervosnetwork/muta/tree/master/built-in-services/asset\"}),\"Asset Service \\u793a\\u4f8b\"),\"\\uff0c\\u8bfb\\u8005\\u53ef\\u4ee5\\u67e5\\u770b\\u4e00\\u4e2a Service \\u7684\\u5168\\u8c8c\\u3002\\u66f4\\u591a\\u7684 Service \\u793a\\u4f8b\\uff0c\\u8bf7\\u53c2\\u8003 \",Object(c.b)(\"a\",Object(r.a)({parentName:\"p\"},{href:\"./service_eg.md\"}),\"Service \\u793a\\u4f8b\"),\"\\u3002\"),Object(c.b)(\"h2\",{id:\"\\u4e0b\\u4e00\\u7ad9\"},\"\\u4e0b\\u4e00\\u7ad9\"),Object(c.b)(\"p\",null,\"\\u73b0\\u5728\\u4f60\\u5df2\\u7ecf\\u5bf9 Service \\u7684\\u7ec4\\u4ef6\\u548c\\u5f00\\u53d1\\u6709\\u4e86\\u4e00\\u5b9a\\u7684\\u8ba4\\u8bc6\\uff0c\\u4e0b\\u4e00\\u6b65\\u901a\\u8fc7\\u5b66\\u4e60 \",Object(c.b)(\"a\",Object(r.a)({parentName:\"p\"},{href:\"/new-docs/docs/dev/dex\"}),\"\\u5f00\\u53d1\\u4e00\\u6761 Dex \\u4e13\\u6709\\u94fe\"),\" \\uff0c\\u4f60\\u5c06\\u5bf9 Service \\u6709\\u4e00\\u4e2a\\u66f4\\u5168\\u9762\\u7684\\u7406\\u89e3\\u5e76\\u4e14\\u5b66\\u4f1a\\u5982\\u4f55\\u4f7f\\u7528 Muta \\u6846\\u67b6\\u5f00\\u53d1\\u81ea\\u5df1\\u7684\\u533a\\u5757\\u94fe\\u3002\"),Object(c.b)(\"blockquote\",null,Object(c.b)(\"p\",{parentName:\"blockquote\"},\"\\u6ce8\\u610f\\uff1a\\u7531\\u4e8e\\u6846\\u67b6\\u6b63\\u5728\\u6301\\u7eed\\u7684\\u5f00\\u53d1\\u8fc7\\u7a0b\\u4e2d\\uff0c\\u6240\\u4ee5\\u6846\\u67b6\\u7684 api \\u6709\\u53ef\\u80fd\\u53d1\\u751f\\u53d8\\u52a8\")))}b.isMDXComponent=!0},234:function(e,n,t){\"use strict\";t.d(n,\"a\",(function(){return p})),t.d(n,\"b\",(function(){return v}));var r=t(0),a=t.n(r);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=a.a.createContext({}),b=function(e){var n=a.a.useContext(i),t=n;return e&&(t=\"function\"==typeof e?e(n):s({},n,{},e)),t},p=function(e){var n=b(e.components);return a.a.createElement(i.Provider,{value:n},e.children)},d={inlineCode:\"code\",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},u=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,i=l(e,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),p=b(t),u=r,v=p[\"\".concat(o,\".\").concat(u)]||p[u]||d[u]||c;return t?a.a.createElement(v,s({ref:n},i,{components:t})):a.a.createElement(v,s({ref:n},i))}));function v(e,n){var t=arguments,r=n&&n.mdxType;if(\"string\"==typeof e||r){var c=t.length,o=new Array(c);o[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType=\"string\"==typeof e?e:r,o[1]=s;for(var i=2;i<c;i++)o[i]=t[i];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}u.displayName=\"MDXCreateElement\"}}]);","extractedComments":[]}