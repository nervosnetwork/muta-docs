{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{257:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"frontMatter\",(function(){return m})),t.d(n,\"metadata\",(function(){return u})),t.d(n,\"rightToc\",(function(){return p})),t.d(n,\"default\",(function(){return g}));var a,i=t(1),l=t(6),s=(t(0),t(307)),r=t(309),o=t(310),c=t(312),d=t(311),m={last_modified_on:\"2020-07-13\",component_title:\"Reduce\",description:\"The Vector `reduce` transform accepts and outputs `log` events, allowing you to combine multiple events into a single event based on a set of identifiers.\",event_types:[\"log\"],function_category:\"aggregate\",issues_url:\"https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22transform%3A+reduce%22\",operating_systems:[\"Linux\",\"MacOS\",\"Windows\"],sidebar_label:'reduce|[\"log\"]',source_url:\"https://github.com/timberio/vector/tree/master/src/transforms/reduce\",status:\"beta\",title:\"Reduce Transform\",unsupported_operating_systems:[]},u={id:\"reference/transforms/reduce\",title:\"Reduce Transform\",description:\"The Vector `reduce` transform accepts and outputs `log` events, allowing you to combine multiple events into a single event based on a set of identifiers.\",source:\"@site/docs/reference/transforms/reduce.md\",permalink:\"/docs/reference/transforms/reduce\",editUrl:\"https://github.com/nervosnetwork/muta/edit/master/website/docs/reference/transforms/reduce.md\",sidebar_label:'reduce|[\"log\"]'},p=[{value:\"Configuration\",id:\"configuration\",children:[]},{value:\"Options\",id:\"options\",children:[{value:\"ends_when\",id:\"ends_when\",children:[]},{value:\"expire_after_ms\",id:\"expire_after_ms\",children:[]},{value:\"flush_period_ms\",id:\"flush_period_ms\",children:[]},{value:\"identifier_fields\",id:\"identifier_fields\",children:[]},{value:\"merge_strategies\",id:\"merge_strategies\",children:[]}]},{value:\"Examples\",id:\"examples\",children:[]},{value:\"How It Works\",id:\"how-it-works\",children:[{value:\"Complex Processing\",id:\"complex-processing\",children:[]},{value:\"Environment Variables\",id:\"environment-variables\",children:[]}]}],b=(a=\"CodeHeader\",function(e){return console.warn(\"Component \"+a+\" was not imported, exported, or provided by MDXProvider as global scope\"),Object(s.b)(\"div\",e)}),h={rightToc:p};function g(e){var n=e.components,t=Object(l.a)(e,[\"components\"]);return Object(s.b)(\"wrapper\",Object(i.a)({},h,t,{components:n,mdxType:\"MDXLayout\"}),Object(s.b)(\"p\",null,\"The Vector \",Object(s.b)(\"inlineCode\",{parentName:\"p\"},\"reduce\"),\" transform\\naccepts and outputs \",Object(s.b)(\"a\",Object(i.a)({parentName:\"p\"},{href:\"/docs/about/data-model/log/\"}),Object(s.b)(\"inlineCode\",{parentName:\"a\"},\"log\")),\" events, allowing you to\\ncombine multiple events into a single event based on a set of identifiers.\"),Object(s.b)(\"h2\",{id:\"configuration\"},\"Configuration\"),Object(s.b)(c.a,{block:!0,defaultValue:\"common\",values:[{label:\"Common\",value:\"common\"},{label:\"Advanced\",value:\"advanced\"}],mdxType:\"Tabs\"},Object(s.b)(d.a,{value:\"common\",mdxType:\"TabItem\"},Object(s.b)(\"pre\",null,Object(s.b)(\"code\",Object(i.a)({parentName:\"pre\"},{className:\"language-toml\",metastring:'title=\"vector.toml\"',title:'\"vector.toml\"'}),'[transforms.my_transform_id]\\n  # General\\n  type = \"reduce\" # required\\n  inputs = [\"my-source-or-transform-id\"] # required\\n  identifier_fields = [] # optional, default\\n\\n  # Ends when\\n  ends_when.type = \"check_fields\" # optional, default\\n  ends_when.\"message.eq\" = \"this is the content to match against\" # example\\n  ends_when.\"message.eq\" = [\"match this\", \"or this\"] # example\\n  ends_when.\"message.contains\" = \"foo\" # example\\n  ends_when.\"message.contains\" = [\"foo\", \"bar\"] # example\\n  ends_when.\"environment.ends_with\" = \"-staging\" # example\\n  ends_when.\"environment.ends_with\" = [\"-staging\", \"-running\"] # example\\n  ends_when.\"message.regex\" = \" (any|of|these|five|words) \" # example\\n  ends_when.\"environment.starts_with\" = \"staging-\" # example\\n  ends_when.\"environment.starts_with\" = [\"staging-\", \"running-\"] # example\\n'))),Object(s.b)(d.a,{value:\"advanced\",mdxType:\"TabItem\"},Object(s.b)(\"pre\",null,Object(s.b)(\"code\",Object(i.a)({parentName:\"pre\"},{className:\"language-toml\",metastring:'title=\"vector.toml\"',title:'\"vector.toml\"'}),'[transforms.my_transform_id]\\n  # General\\n  type = \"reduce\" # required\\n  inputs = [\"my-source-or-transform-id\"] # required\\n  expire_after_ms = 30000 # optional, default\\n  flush_period_ms = 1000 # optional, default\\n  identifier_fields = [] # optional, default\\n\\n  # Ends when\\n  ends_when.type = \"check_fields\" # optional, default\\n  ends_when.\"message.eq\" = \"this is the content to match against\" # example\\n  ends_when.\"message.eq\" = [\"match this\", \"or this\"] # example\\n  ends_when.\"host.exists\" = true # example\\n  ends_when.\"method.neq\" = \"POST\" # example\\n  ends_when.\"method.neq\" = [\"POST\", \"GET\"] # example\\n  ends_when.\"message.not_contains\" = \"some phrase to ignore\" # example\\n  ends_when.\"unit.not_starts_with\" = \"sys-\" # example\\n  ends_when.\"unit.not_ends_with\" = \".device\" # example\\n  ends_when.\"message.contains\" = \"foo\" # example\\n  ends_when.\"message.contains\" = [\"foo\", \"bar\"] # example\\n  ends_when.\"environment.ends_with\" = \"-staging\" # example\\n  ends_when.\"environment.ends_with\" = [\"-staging\", \"-running\"] # example\\n  ends_when.\"message.ip_cidr_contains\" = \"10.0.0.0/8\" # example\\n  ends_when.\"message.ip_cidr_contains\" = [\"2000::/10\", \"192.168.0.0/16\"] # example\\n  ends_when.\"message.regex\" = \" (any|of|these|five|words) \" # example\\n  ends_when.\"environment.starts_with\" = \"staging-\" # example\\n  ends_when.\"environment.starts_with\" = [\"staging-\", \"running-\"] # example\\n\\n  # Merge strategies\\n  merge_strategies.method = \"discard\" # example\\n  merge_strategies.path = \"discard\" # example\\n  merge_strategies.duration_ms = \"sum\" # example\\n  merge_strategies.query = \"array\" # example\\n')))),Object(s.b)(\"h2\",{id:\"options\"},\"Options\"),Object(s.b)(r.a,{filters:!0,mdxType:\"Fields\"},Object(s.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:[],groups:[],name:\"ends_when\",path:null,relevantWhen:null,required:!1,templateable:!1,type:\"table\",unit:null,warnings:[],mdxType:\"Field\"},Object(s.b)(\"h3\",{id:\"ends_when\"},\"ends_when\"),Object(s.b)(\"p\",null,\"A condition used to distinguish the final event of a transaction. If this\\ncondition resolves to true for an event the transaction it belongs to is\\nimmediately flushed.\"),Object(s.b)(r.a,{filters:!1,mdxType:\"Fields\"},Object(s.b)(o.a,{common:!0,defaultValue:\"check_fields\",enumValues:{check_fields:\"Allows you to check individual fields against a list of conditions.\",is_log:\"Returns true if the event is a log.\",is_metric:\"Returns true if the event is a metric.\"},examples:[\"check_fields\",\"is_log\",\"is_metric\"],groups:[],name:\"type\",path:\"ends_when\",relevantWhen:null,required:!1,templateable:!1,type:\"string\",unit:null,warnings:[],mdxType:\"Field\"},Object(s.b)(\"h4\",{id:\"type\"},\"type\"),Object(s.b)(\"p\",null,\"The type of the condition to execute.\")),Object(s.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:[{\"message.eq\":\"this is the content to match against\"},{\"message.eq\":[\"match this\",\"or this\"]}],groups:[],name:\"`[field-name]`.eq\",path:\"ends_when\",relevantWhen:{type:\"check_fields\"},required:!1,templateable:!1,type:\"string\",unit:null,warnings:[],mdxType:\"Field\"},Object(s.b)(\"h4\",{id:\"field-nameeq\"},Object(s.b)(\"inlineCode\",{parentName:\"h4\"},\"[field-name]\"),\".eq\"),Object(s.b)(\"p\",null,\"Check whether a fields contents exactly matches the value specified. This may\\nbe a single string or a list of strings, in which case this evaluates to true\\nif any of the list matches.\")),Object(s.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:[{\"host.exists\":!0}],groups:[],name:\"`[field-name]`.exists\",path:\"ends_when\",relevantWhen:{type:\"check_fields\"},required:!1,templateable:!1,type:\"bool\",unit:null,warnings:[],mdxType:\"Field\"},Object(s.b)(\"h4\",{id:\"field-nameexists\"},Object(s.b)(\"inlineCode\",{parentName:\"h4\"},\"[field-name]\"),\".exists\"),Object(s.b)(\"p\",null,\"Check whether a field exists or does not exist, depending on the provided value\\nbeing \",Object(s.b)(\"inlineCode\",{parentName:\"p\"},\"true\"),\" or \",Object(s.b)(\"inlineCode\",{parentName:\"p\"},\"false\"),\" respectively.\")),Object(s.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:[{\"method.neq\":\"POST\"},{\"method.neq\":[\"POST\",\"GET\"]}],groups:[],name:\"`[field-name]`.neq\",path:\"ends_when\",relevantWhen:{type:\"check_fields\"},required:!1,templateable:!1,type:\"string\",unit:null,warnings:[],mdxType:\"Field\"},Object(s.b)(\"h4\",{id:\"field-nameneq\"},Object(s.b)(\"inlineCode\",{parentName:\"h4\"},\"[field-name]\"),\".neq\"),Object(s.b)(\"p\",null,\"Check whether a fields contents does not match the value specified. This may be\\na single string or a list of strings, in which case this evaluates to false if\\nany of the list matches.\")),Object(s.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:[{\"message.not_contains\":\"some phrase to ignore\"},{\"unit.not_starts_with\":\"sys-\"},{\"unit.not_ends_with\":\".device\"}],groups:[],name:\"`[field-name]`.not_`[condition]`\",path:\"ends_when\",relevantWhen:{type:\"check_fields\"},required:!1,templateable:!1,type:\"any\",unit:null,warnings:[],mdxType:\"Field\"},Object(s.b)(\"h4\",{id:\"field-namenot_condition\"},Object(s.b)(\"inlineCode\",{parentName:\"h4\"},\"[field-name]\"),\".not_\",Object(s.b)(\"inlineCode\",{parentName:\"h4\"},\"[condition]\")),Object(s.b)(\"p\",null,\"Check if the given \",Object(s.b)(\"inlineCode\",{parentName:\"p\"},\"[condition]\"),\" does not match.\")),Object(s.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:[{\"message.contains\":\"foo\"},{\"message.contains\":[\"foo\",\"bar\"]}],groups:[],name:\"`[field_name]`.contains\",path:\"ends_when\",relevantWhen:{type:\"check_fields\"},required:!1,templateable:!1,type:\"string\",unit:null,warnings:[],mdxType:\"Field\"},Object(s.b)(\"h4\",{id:\"field_namecontains\"},Object(s.b)(\"inlineCode\",{parentName:\"h4\"},\"[field_name]\"),\".contains\"),Object(s.b)(\"p\",null,\"Checks whether a string field contains a string argument. This may be a single\\nstring or a list of strings, in which case this evaluates to true if any of the\\nlist matches.\")),Object(s.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:[{\"environment.ends_with\":\"-staging\"},{\"environment.ends_with\":[\"-staging\",\"-running\"]}],groups:[],name:\"`[field_name]`.ends_with\",path:\"ends_when\",relevantWhen:{type:\"check_fields\"},required:!1,templateable:!1,type:\"string\",unit:null,warnings:[],mdxType:\"Field\"},Object(s.b)(\"h4\",{id:\"field_nameends_with\"},Object(s.b)(\"inlineCode\",{parentName:\"h4\"},\"[field_name]\"),\".ends_with\"),Object(s.b)(\"p\",null,\"Checks whether a string field ends with a string argument. This may be a single\\nstring or a list of strings, in which case this evaluates to true if any of the\\nlist matches.\")),Object(s.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:[{\"message.ip_cidr_contains\":\"10.0.0.0/8\"},{\"message.ip_cidr_contains\":[\"2000::/10\",\"192.168.0.0/16\"]}],groups:[],name:\"`[field_name]`.ip_cidr_contains\",path:\"ends_when\",relevantWhen:{type:\"check_fields\"},required:!1,templateable:!1,type:\"string\",unit:null,warnings:[],mdxType:\"Field\"},Object(s.b)(\"h4\",{id:\"field_nameip_cidr_contains\"},Object(s.b)(\"inlineCode\",{parentName:\"h4\"},\"[field_name]\"),\".ip_cidr_contains\"),Object(s.b)(\"p\",null,\"Checks whether an IP field is contained within a given \",Object(s.b)(\"a\",Object(i.a)({parentName:\"p\"},{href:\"https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\"}),\"IP CIDR\"),\"\\n(works with IPv4 and IPv6). This may be a single string or a list of strings,\\nin which case this evaluates to true if the IP field is contained within any of\\nthe CIDRs in the list.\")),Object(s.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:[{\"message.regex\":\" (any|of|these|five|words) \"}],groups:[],name:\"`[field_name]`.regex\",path:\"ends_when\",relevantWhen:{type:\"check_fields\"},required:!1,templateable:!1,type:\"string\",unit:null,warnings:[],mdxType:\"Field\"},Object(s.b)(\"h4\",{id:\"field_nameregex\"},Object(s.b)(\"inlineCode\",{parentName:\"h4\"},\"[field_name]\"),\".regex\"),Object(s.b)(\"p\",null,\"Checks whether a string field matches a \",Object(s.b)(\"a\",Object(i.a)({parentName:\"p\"},{href:\"https://en.wikipedia.org/wiki/Regular_expression\"}),\"regular expression\"),\".\\nVector uses the \",Object(s.b)(\"a\",Object(i.a)({parentName:\"p\"},{href:\"https://docs.rs/regex/1.3.6/regex/#syntax\"}),\"documented Rust Regex syntax\"),\". Note\\nthat this condition is considerably more expensive than a regular string match\\n(such as \",Object(s.b)(\"inlineCode\",{parentName:\"p\"},\"starts_with\"),\" or \",Object(s.b)(\"inlineCode\",{parentName:\"p\"},\"contains\"),\") so the use of those conditions are\\npreferred where possible.\")),Object(s.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:[{\"environment.starts_with\":\"staging-\"},{\"environment.starts_with\":[\"staging-\",\"running-\"]}],groups:[],name:\"`[field_name]`.starts_with\",path:\"ends_when\",relevantWhen:{type:\"check_fields\"},required:!1,templateable:!1,type:\"string\",unit:null,warnings:[],mdxType:\"Field\"},Object(s.b)(\"h4\",{id:\"field_namestarts_with\"},Object(s.b)(\"inlineCode\",{parentName:\"h4\"},\"[field_name]\"),\".starts_with\"),Object(s.b)(\"p\",null,\"Checks whether a string field starts with a string argument. This may be a\\nsingle string or a list of strings, in which case this evaluates to true if any\\nof the list matches.\")))),Object(s.b)(o.a,{common:!1,defaultValue:3e4,enumValues:null,examples:[3e4],groups:[],name:\"expire_after_ms\",path:null,relevantWhen:null,required:!1,templateable:!1,type:\"int\",unit:null,warnings:[],mdxType:\"Field\"},Object(s.b)(\"h3\",{id:\"expire_after_ms\"},\"expire_after_ms\"),Object(s.b)(\"p\",null,\"A maximum period of time to wait after the last event is received before a\\ncombined event should be considered complete.\")),Object(s.b)(o.a,{common:!1,defaultValue:1e3,enumValues:null,examples:[1e3],groups:[],name:\"flush_period_ms\",path:null,relevantWhen:null,required:!1,templateable:!1,type:\"int\",unit:null,warnings:[],mdxType:\"Field\"},Object(s.b)(\"h3\",{id:\"flush_period_ms\"},\"flush_period_ms\"),Object(s.b)(\"p\",null,\"Controls the frequency that Vector checks for (and flushes) expired events.\")),Object(s.b)(o.a,{common:!0,defaultValue:[],enumValues:null,examples:[[\"request_id\"],[\"user_id\",\"transaction_id\"]],groups:[],name:\"identifier_fields\",path:null,relevantWhen:null,required:!1,templateable:!1,type:\"[string]\",unit:null,warnings:[],mdxType:\"Field\"},Object(s.b)(\"h3\",{id:\"identifier_fields\"},\"identifier_fields\"),Object(s.b)(\"p\",null,\"An ordered list of fields by which to group events. Each group is combined\\nindependently, allowing you to keep independent events separate. When no fields\\nare specified, all events will be combined in a single group. Events missing a\\nspecified field will be combined in their own group.\")),Object(s.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:[],groups:[],name:\"merge_strategies\",path:null,relevantWhen:null,required:!1,templateable:!1,type:\"table\",unit:null,warnings:[],mdxType:\"Field\"},Object(s.b)(\"h3\",{id:\"merge_strategies\"},\"merge_strategies\"),Object(s.b)(\"p\",null,\"A map of field names to custom merge strategies. For each field specified this\\nstrategy will be used for combining events rather than the default behavior.\"),Object(s.b)(\"p\",null,\"The default behavior is as follows:\"),Object(s.b)(\"ol\",null,Object(s.b)(\"li\",{parentName:\"ol\"},\"The first value of a string field is kept, subsequent values are discarded.\"),Object(s.b)(\"li\",{parentName:\"ol\"},\"For timestamp fields the first is kept and a new field \",Object(s.b)(\"inlineCode\",{parentName:\"li\"},\"[field-name]_end\"),\" is\\nadded with the last received timestamp value.\"),Object(s.b)(\"li\",{parentName:\"ol\"},\"Numeric values are summed.\")),Object(s.b)(r.a,{filters:!1,mdxType:\"Fields\"},Object(s.b)(o.a,{common:!0,defaultValue:null,enumValues:{array:\"Each value is appended to an array.\",concat:\"Concatenate each string value (delimited with a space).\",discard:\"Discard all but the first value found.\",sum:\"Sum all numeric values.\",max:\"The maximum of all numeric values.\",min:\"The minimum of all numeric values.\"},examples:[{method:\"discard\"},{path:\"discard\"},{duration_ms:\"sum\"},{query:\"array\"}],groups:[],name:\"`[field-name]`\",path:\"merge_strategies\",relevantWhen:null,required:!0,templateable:!1,type:\"string\",unit:null,warnings:[],mdxType:\"Field\"},Object(s.b)(\"h4\",{id:\"field-name\"},Object(s.b)(\"inlineCode\",{parentName:\"h4\"},\"[field-name]\")),Object(s.b)(\"p\",null,\"The custom merge strategy to use for a field.\"))))),Object(s.b)(\"h2\",{id:\"examples\"},\"Examples\"),Object(s.b)(c.a,{block:!0,defaultValue:\"default\",select:!1,values:[{label:\"Default\",value:\"default\"},{label:\"With Identifier Fields\",value:\"with-identifier-fields\"}],mdxType:\"Tabs\"},Object(s.b)(d.a,{value:\"default\",mdxType:\"TabItem\"},Object(s.b)(\"p\",null,\"Given the following configuration:\"),Object(s.b)(b,{fileName:\"vector.toml\",mdxType:\"CodeHeader\"}),Object(s.b)(\"pre\",null,Object(s.b)(\"code\",Object(i.a)({parentName:\"pre\"},{className:\"language-toml\"}),'[transforms.transaction_events]\\n  type = \"reduce\"\\n  inputs = [...]\\n')),Object(s.b)(\"p\",null,\"And these three \",Object(s.b)(\"a\",Object(i.a)({parentName:\"p\"},{href:\"/docs/about/data-model/log/\"}),Object(s.b)(\"inlineCode\",{parentName:\"a\"},\"log\"),\" events\"),\":\"),Object(s.b)(b,{fileName:\"first log event\",mdxType:\"CodeHeader\"}),Object(s.b)(\"pre\",null,Object(s.b)(\"code\",Object(i.a)({parentName:\"pre\"},{className:\"language-javascript\"}),'{\\n  \"message\": \"A thing is happening\",\\n  \"custom_string_field_1\": \"value1\",\\n  \"this_much\": 1\\n}\\n')),Object(s.b)(\"p\",null,\"Followed by:\"),Object(s.b)(b,{fileName:\"second log event\",mdxType:\"CodeHeader\"}),Object(s.b)(\"pre\",null,Object(s.b)(\"code\",Object(i.a)({parentName:\"pre\"},{className:\"language-javascript\"}),'{\\n  \"message\": \"That thing is still happening\",\\n  \"custom_string_field_2\": \"value2\",\\n  \"this_much\": 3\\n}\\n')),Object(s.b)(\"p\",null,\"And, finally:\"),Object(s.b)(b,{fileName:\"third log event\",mdxType:\"CodeHeader\"}),Object(s.b)(\"pre\",null,Object(s.b)(\"code\",Object(i.a)({parentName:\"pre\"},{className:\"language-javascript\"}),'{\\n  \"message\": \"That thing is concluded\",\\n  \"custom_string_field_3\": \"value3\",\\n  \"this_much\": 2\\n}\\n')),Object(s.b)(\"p\",null,\"A single log event will eventually be produced:\"),Object(s.b)(\"pre\",null,Object(s.b)(\"code\",Object(i.a)({parentName:\"pre\"},{className:\"language-javascript\"}),'{\\n  \"message\": \"A thing is happening\",\\n  \"custom_string_field_1\": \"value1\",\\n  \"custom_string_field_2\": \"value2\",\\n  \"custom_string_field_3\": \"value3\",\\n  \"this_much\": 6\\n}\\n')),Object(s.b)(\"p\",null,\"Notice that string values have not been overridden and integer values have been summed.\")),Object(s.b)(d.a,{value:\"with-identifier-fields\",mdxType:\"TabItem\"},Object(s.b)(\"p\",null,\"Given the following configuration:\"),Object(s.b)(b,{fileName:\"vector.toml\",mdxType:\"CodeHeader\"}),Object(s.b)(\"pre\",null,Object(s.b)(\"code\",Object(i.a)({parentName:\"pre\"},{className:\"language-toml\"}),'[transforms.transaction_events]\\n  type = \"reduce\"\\n  inputs = [...]\\n\\n  identifier_fields = [\"request_id\"]\\n\\n  [transforms.transaction_events.merge_strategies]\\n    request_action = \"array\"\\n\\n  [transforms.transaction_events.ends_when]\\n    \"request_concluded.exists\" = true\\n')),Object(s.b)(\"p\",null,\"And these three \",Object(s.b)(\"a\",Object(i.a)({parentName:\"p\"},{href:\"/docs/about/data-model/log/\"}),Object(s.b)(\"inlineCode\",{parentName:\"a\"},\"log\"),\" events\"),\":\"),Object(s.b)(b,{fileName:\"first log event\",mdxType:\"CodeHeader\"}),Object(s.b)(\"pre\",null,Object(s.b)(\"code\",Object(i.a)({parentName:\"pre\"},{className:\"language-javascript\"}),'{\\n  \"message\": \"A thing is happening\",\\n  \"request_id\": \"1\",\\n  \"request_action\": \"start\",\\n  \"this_much\": 1\\n}\\n')),Object(s.b)(\"p\",null,\"Followed by:\"),Object(s.b)(b,{fileName:\"second log event\",mdxType:\"CodeHeader\"}),Object(s.b)(\"pre\",null,Object(s.b)(\"code\",Object(i.a)({parentName:\"pre\"},{className:\"language-javascript\"}),'{\\n  \"message\": \"That thing is still happening\",\\n  \"request_id\": \"1\",\\n  \"request_action\": \"bounced\",\\n  \"this_much\": 2\\n}\\n')),Object(s.b)(\"p\",null,\"And:\"),Object(s.b)(b,{fileName:\"third log event\",mdxType:\"CodeHeader\"}),Object(s.b)(\"pre\",null,Object(s.b)(\"code\",Object(i.a)({parentName:\"pre\"},{className:\"language-javascript\"}),'{\\n  \"message\": \"A different thing is happening\",\\n  \"request_id\": \"2\",\\n  \"request_action\": \"start\",\\n  \"this_much\": 5\\n}\\n')),Object(s.b)(\"p\",null,\"And, finally:\"),Object(s.b)(b,{fileName:\"fourth log event\",mdxType:\"CodeHeader\"}),Object(s.b)(\"pre\",null,Object(s.b)(\"code\",Object(i.a)({parentName:\"pre\"},{className:\"language-javascript\"}),'{\\n  \"message\": \"That thing concluded\",\\n  \"request_id\": \"1\",\\n  \"request_action\": \"rebound\",\\n  \"request_concluded\": true,\\n  \"this_much\": 3\\n}\\n')),Object(s.b)(\"p\",null,\"A single log event will be produced and flushed immediately:\"),Object(s.b)(\"pre\",null,Object(s.b)(\"code\",Object(i.a)({parentName:\"pre\"},{className:\"language-javascript\"}),'{\\n  \"message\": \"A thing is happening\",\\n  \"request_id\": \"1\",\\n  \"request_action\": [\"start\",\"bounced\",\"rebound\"]\\n  \"request_concluded\": true,\\n  \"this_much\": 6\\n}\\n')),Object(s.b)(\"p\",null,\"Notice that the fields from the third event are not present as it has been identified as a separate transaction and will be aggregated separately. Also, the values of the field \",Object(s.b)(\"inlineCode\",{parentName:\"p\"},\"request_action\"),\" have been stored in an array instead of the default behavior.\"))),Object(s.b)(\"h2\",{id:\"how-it-works\"},\"How It Works\"),Object(s.b)(\"h3\",{id:\"complex-processing\"},\"Complex Processing\"),Object(s.b)(\"p\",null,\"If you encounter limitations with the \",Object(s.b)(\"inlineCode\",{parentName:\"p\"},\"reduce\"),\"\\ntransform then we recommend using a \",Object(s.b)(\"a\",Object(i.a)({parentName:\"p\"},{href:\"https://vector.dev/components/?functions%5B%5D=program\"}),\"runtime transform\"),\".\\nThese transforms are designed for complex processing and give you the power of\\nfull programming runtime.\"),Object(s.b)(\"h3\",{id:\"environment-variables\"},\"Environment Variables\"),Object(s.b)(\"p\",null,\"Environment variables are supported through all of Vector's configuration.\\nSimply add \",Object(s.b)(\"inlineCode\",{parentName:\"p\"},\"${MY_ENV_VAR}\"),\" in your Vector configuration file and the variable\\nwill be replaced before being evaluated.\"),Object(s.b)(\"p\",null,\"You can learn more in the\\n\",Object(s.b)(\"a\",Object(i.a)({parentName:\"p\"},{href:\"/docs/setup/configuration/#environment-variables\"}),\"Environment Variables\"),\" section.\"))}g.isMDXComponent=!0},309:function(e,n,t){\"use strict\";t(12);var a=t(0),i=t.n(a),l=t(318),s=t(317),r=t(316),o=t.n(r);n.a=function({children:e,filters:n}){const[t,r]=Object(a.useState)(!1),[c,d]=Object(a.useState)(new Set),[m,u]=Object(a.useState)(!1),[p,b]=Object(a.useState)(null);let h=[];e&&(h=Array.isArray(e)?e:[e]);let g=h.some(e=>e.props.common),f=o()(h).flatMap(e=>e.props.groups).uniq().value(),_=h.some(e=>e.props.required),v=h;return t&&(v=v.filter(e=>e.props.common)),c.size>0&&(v=v.filter(e=>Array.from(c).every(n=>e.props.groups.includes(n)))),m&&(v=v.filter(e=>e.props.required)),p&&(v=v.filter(e=>e.props.name.toLowerCase().includes(p.toLowerCase()))),i.a.createElement(i.a.Fragment,null,h.length>1&&!1!==n?i.a.createElement(\"div\",{className:\"filters\"},i.a.createElement(\"div\",{className:\"search\"},i.a.createElement(\"span\",{className:\"search--result-count\"},v.length,\" items\"),i.a.createElement(\"input\",{className:\"input--text input--lg\",type:\"text\",onChange:e=>b(e.currentTarget.value),placeholder:\"\\ud83d\\udd0d Search...\"})),i.a.createElement(\"div\",{className:\"filter\"},i.a.createElement(\"div\",{className:\"filter--choices\"},i.a.createElement(l.a,{values:f,currentState:c,setState:d}),g&&i.a.createElement(\"label\",{title:\"Only show popular/common results\"},i.a.createElement(\"input\",{type:\"checkbox\",onChange:e=>r(e.currentTarget.checked),checked:t}),\"common\"),_&&i.a.createElement(\"label\",{title:\"Only show required results\"},i.a.createElement(\"input\",{type:\"checkbox\",onChange:e=>u(e.currentTarget.checked),checked:m}),\"required\")))):null,!Array.isArray(v)||v.length>0?i.a.createElement(\"ul\",{className:\"connected-list\"},v):i.a.createElement(s.a,{text:\"no components found\"}))}},310:function(e,n,t){\"use strict\";t(12);var a=t(0),i=t.n(a),l=t(306),s=t.n(l),r=(t(307),t(315));function o(e){return e.includes(\".\")?'\"'+e+'\"':e}function c(e){return\"string\"==typeof e&&e.includes(\"\\n\")?`\"\"\"\\n${e}\\n\"\"\"`:JSON.stringify(e)}function d(e,n){return(t=n)&&t.constructor===Object?\"name\"in n&&\"value\"in n?`${o(n.name)} = ${c(n.value)}`:`${o(Object.keys(n)[0])} = ${c(Object.values(n)[0])}`:e?`${o(e)} = ${c(n)}`:c(n);var t}function m({values:e}){let n=[];if(Array.isArray(e))for(var t in e){let a=e[t];n.push(i.a.createElement(\"code\",{key:a},c(a))),n.push(\" \")}else for(var a in e)n.push(i.a.createElement(\"code\",{key:a,className:\"with-info-icon\",title:e[a]},c(a))),n.push(\" \");return n}function u({name:e,path:n,values:t}){let a=\"\";return t.forEach((function(t){n&&(a+=n+\".\"),a+=d(e,t)+\"\\n\"})),i.a.createElement(\"div\",null,i.a.createElement(r.a,{className:\"language-toml\"},a))}function p({unit:e,value:n}){let t=\"\";return e&&(t=i.a.createElement(i.a.Fragment,null,\" (\",e,\")\")),i.a.createElement(i.a.Fragment,null,i.a.createElement(\"code\",null,c(n)),t)}function b({value:e}){let n=Object.keys(e)[0],t=Object.values(e)[0];return\"\"==t&&(t=null),i.a.createElement(\"span\",null,i.a.createElement(\"code\",null,i.a.createElement(\"a\",{href:\"#\"+n},n)),\" \",\"= \",i.a.createElement(\"code\",null,c(t)))}function h({defaultValue:e,enumValues:n,examples:t,groups:l,name:s,path:r,relevantWhen:o,required:c,unit:d,warnings:h}){const[g,f]=Object(a.useState)(!1);return i.a.createElement(\"ul\",{className:\"info\"},h&&h.length>0&&h.map((e,n)=>i.a.createElement(\"li\",{key:n,className:\"warning\"},i.a.createElement(\"i\",{className:\"feather icon-alert-triangle\"}),\" WARNING:\",\" \",e.text)),o&&i.a.createElement(\"li\",null,\"Only \",c?\"required\":\"relevant\",\" when:\",\" \",i.a.createElement(b,{value:o})),void 0!==e?null!==e?i.a.createElement(\"li\",null,\"Default: \",i.a.createElement(p,{unit:d,value:e})):i.a.createElement(\"li\",null,\"No default\"):null,n&&i.a.createElement(\"li\",null,\"Enum, must be one of: \",i.a.createElement(m,{values:n})),(t.length>1||t[0]!=e)&&i.a.createElement(\"li\",null,i.a.createElement(\"div\",{className:\"show-more\",onClick:()=>f(!g)},g?\"Hide examples\":\"View examples\"),g&&i.a.createElement(u,{name:s,path:r,values:t})))}n.a=function({children:e,common:n,defaultValue:t,enumValues:l,examples:r,groups:o,name:c,path:d,relevantWhen:m,required:u,templateable:p,type:b,unit:g,warnings:f}){const[_,v]=Object(a.useState)(!1);let O=e;return _&&(O=O.filter(e=>\"p\"!=e.props.originalType)),i.a.createElement(\"li\",{className:s()({\"field-required\":u,\"field-collapsed\":_}),required:u},i.a.createElement(\"div\",{className:\"badges\"},p&&i.a.createElement(\"span\",{className:\"badge badge--primary with-info-icon\",title:\"This option is dynamic and accepts the Vector template syntax\"},\"templateable\"),b&&i.a.createElement(\"span\",{className:\"badge badge--secondary\"},b,g&&i.a.createElement(i.a.Fragment,null,\" (\",g,\")\")),l&&Object.keys(l).length>0&&i.a.createElement(\"span\",{className:\"badge badge--secondary with-info-icon\",title:\"This option is an enumation and only allows specific values\"},\"enum\"),n&&i.a.createElement(\"span\",{className:\"badge badge--primary with-info-icon\",title:\"This is a popular that we recommend for getting started\"},\"common\"),u?i.a.createElement(\"span\",{className:\"badge badge--danger\"},\"required\",m&&\"*\"):i.a.createElement(\"span\",{className:\"badge badge--secondary\"},\"optional\")),O,!_&&\"table\"!=b&&i.a.createElement(h,{defaultValue:t,enumValues:l,examples:r,groups:o,name:c,path:d,relevantWhen:m,required:u,unit:g,warnings:f}))}}}]);","extractedComments":[]}