{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{262:function(e,t,a){\"use strict\";a.r(t),a.d(t,\"frontMatter\",(function(){return l})),a.d(t,\"metadata\",(function(){return r})),a.d(t,\"rightToc\",(function(){return s})),a.d(t,\"default\",(function(){return b}));var n=a(1),i=a(6),c=(a(0),a(307)),l={last_modified_on:\"2020-07-13\",title:\"Templating\",description:\"Learn Vector's templating syntax used to creat dynamic values in Vector's configuration.\",status:\"beta\"},r={id:\"reference/templating\",title:\"Templating\",description:\"Learn Vector's templating syntax used to creat dynamic values in Vector's configuration.\",source:\"@site/docs/reference/templating.md\",permalink:\"/docs/reference/templating\",editUrl:\"https://github.com/nervosnetwork/muta/edit/master/website/docs/reference/templating.md\"},s=[{value:\"Example\",id:\"example\",children:[]},{value:\"Syntax\",id:\"syntax\",children:[{value:\"Event Fields\",id:\"event-fields\",children:[]},{value:\"Strftime Specifiers\",id:\"strftime-specifiers\",children:[]},{value:\"Escaping\",id:\"escaping\",children:[]}]},{value:\"How It Works\",id:\"how-it-works\",children:[{value:\"Array Values\",id:\"array-values\",children:[]},{value:\"Fallback Values\",id:\"fallback-values\",children:[]},{value:\"Missing Fields\",id:\"missing-fields\",children:[]},{value:\"Nested Fields\",id:\"nested-fields\",children:[]}]}],o={rightToc:s};function b(e){var t=e.components,a=Object(i.a)(e,[\"components\"]);return Object(c.b)(\"wrapper\",Object(n.a)({},o,a,{components:t,mdxType:\"MDXLayout\"}),Object(c.b)(\"p\",null,\"Vector supports a template syntax for select configuration options. This allows\\nyou to use event fields when configuring Vector:\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-text\"}),'field = \"application_id={{ application_id }}/date=%F/\"\\n')),Object(c.b)(\"h2\",{id:\"example\"},\"Example\"),Object(c.b)(\"p\",null,\"For example, let's partition data on AWS S3 by \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"application_id\"),\" and \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"date\"),\".\\nWe can accomplish this with the\\n\",Object(c.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/docs/reference/sinks/aws_s3/#key_prefix\"}),Object(c.b)(\"inlineCode\",{parentName:\"a\"},\"key_prefix\"),\" option\"),\" in the\\n\",Object(c.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/docs/reference/sinks/aws_s3/\"}),Object(c.b)(\"inlineCode\",{parentName:\"a\"},\"aws_s3\"),\" sink\"),\":\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-toml\"}),'[sinks.backup]\\n  type = \"aws_s3\"\\n  bucket = \"all_application_logs\"\\n  key_prefix = \"application_id={{ application_id }}/date=%F/\"\\n')),Object(c.b)(\"p\",null,\"Notice that Vector allows direct field references as well as \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"strftime\"),\"\\nspecifiers. If we were to run the following \",Object(c.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/docs/about/data-model/log/\"}),Object(c.b)(\"inlineCode\",{parentName:\"a\"},\"log\"),\" event\"),\"\\nthough Vector:\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-json\"}),'{\\n  \"timestamp\": \"2020-02-14T01:22:23.223Z\",\\n  \"application_id\": 1,\\n  \"message\": \"Hello world\"\\n}\\n')),Object(c.b)(\"p\",null,\"The value of the \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"key_prefix\"),\" option would equal:\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-text\"}),\"application_id=1/date=2020-02-14\\n\")),Object(c.b)(\"p\",null,\"This effectively enables dynamic partitioning, something fundamental to storing\\nlog data.\"),Object(c.b)(\"h2\",{id:\"syntax\"},\"Syntax\"),Object(c.b)(\"h3\",{id:\"event-fields\"},\"Event Fields\"),Object(c.b)(\"p\",null,\"Individual \",Object(c.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/docs/about/data-model/log/\"}),Object(c.b)(\"inlineCode\",{parentName:\"a\"},\"log\"),\" event\"),\" fields can be access with the\\n\",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"{{<field-path-notation>}}\"),\" syntax:\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-toml\"}),'option = \"{{ field_path_notation }}\"\\n')),Object(c.b)(\"p\",null,\"Vector's \",Object(c.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/docs/reference/field-path-notation/\"}),\"field notation\"),\" is simple. It uses\\n\",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\".\"),\" to target nested fields and \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"[<index>]\"),\" to target array values. Learn more\\nin the \",Object(c.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/docs/reference/field-path-notation/\"}),\"field notation docs\"),\".\"),Object(c.b)(\"h3\",{id:\"strftime-specifiers\"},\"Strftime Specifiers\"),Object(c.b)(\"p\",null,\"In addition to directly accessing fields, Vector offers a shortcut for injecting\\n\",Object(c.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"https://docs.rs/chrono/0.4.11/chrono/format/strftime/index.html#specifiers\"}),\"strftime specifiers\"),\":\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-toml\"}),'options = \"year=%Y/month=%m/day=%d/\"\\n')),Object(c.b)(\"p\",null,\"The value is based off of the \",Object(c.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/docs/about/data-model/log/#timestamp\"}),Object(c.b)(\"inlineCode\",{parentName:\"a\"},\"timestamp\"),\" field\"),\",\\nand the name of this field can be changed via the\\n\",Object(c.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/docs/reference/global-options/#timestamp_key\"}),\"global \",Object(c.b)(\"inlineCode\",{parentName:\"a\"},\"timestamp_key\"),\" option\"),\".\"),Object(c.b)(\"h3\",{id:\"escaping\"},\"Escaping\"),Object(c.b)(\"p\",null,\"You can escape this syntax by prefixing the character with a \",Object(c.b)(\"inlineCode\",{parentName:\"p\"},\"\\\\\"),\". For example,\\nyou can escape the event field syntax like so:\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-toml\"}),'option = \"\\\\{{ field_name }}\"\\n')),Object(c.b)(\"p\",null,\"And strptime specified like so:\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-toml\"}),'options = \"year=\\\\%Y/month=\\\\%m/day=\\\\%d/\"\\n')),Object(c.b)(\"p\",null,\"Each value above will be treated \",Object(c.b)(\"em\",{parentName:\"p\"},\"literally\"),\".\"),Object(c.b)(\"h2\",{id:\"how-it-works\"},\"How It Works\"),Object(c.b)(\"h3\",{id:\"array-values\"},\"Array Values\"),Object(c.b)(\"p\",null,\"Array values can be accessed using Vector's\\n\",Object(c.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/docs/reference/field-path-notation/\"}),\"field notation syntax\"),\":\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-text\"}),'option = \"{{ parent.child[0] }}\"\\n')),Object(c.b)(\"h3\",{id:\"fallback-values\"},\"Fallback Values\"),Object(c.b)(\"p\",null,\"Vector currently does not support fallback values. \",Object(c.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"https://github.com/timberio/vector/issues/1692\"}),\"Issue 1692\"),\"\\nis open to add this functionality. In the interim, you can use the\\n\",Object(c.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/docs/reference/transforms/lua/\"}),Object(c.b)(\"inlineCode\",{parentName:\"a\"},\"lua\"),\" transform\"),\" to set a default value:\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-toml\"}),'[transforms.set_defaults]\\n  # REQUIRED\\n  type = \"lua\"\\n  inputs = [\"my-source-id\"]\\n  source = \"\"\"\\nif event[\"my_field\"] == nil then\\n  event[\"my_field\"] = \"default\"\\nend\\n\"\"\"\\n')),Object(c.b)(\"h3\",{id:\"missing-fields\"},\"Missing Fields\"),Object(c.b)(\"p\",null,\"If a field is missing, a blank string will be inserted in it's place. Vector\\nwill not error, drop the event, or log anything.\"),Object(c.b)(\"h3\",{id:\"nested-fields\"},\"Nested Fields\"),Object(c.b)(\"p\",null,\"Nested fields can be accessed using Vector's\\n\",Object(c.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/docs/reference/field-path-notation/\"}),\"field notation syntax\"),\":\"),Object(c.b)(\"pre\",null,Object(c.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-text\"}),'option = \"{{ parent.child }}\"\\n')))}b.isMDXComponent=!0}}]);","extractedComments":[]}