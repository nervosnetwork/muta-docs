{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[146],{264:function(e,t,a){\"use strict\";a.r(t),a.d(t,\"frontMatter\",(function(){return b})),a.d(t,\"metadata\",(function(){return m})),a.d(t,\"rightToc\",(function(){return p})),a.d(t,\"default\",(function(){return u}));var n=a(1),l=a(6),r=(a(0),a(307)),i=a(309),o=a(310),c=a(312),s=a(311),b={last_modified_on:\"2020-07-13\",component_title:\"Logfmt Parser\",description:\"The Vector `logfmt_parser` transform accepts and outputs `log` events, allowing you to parse a log field's value in the logfmt format.\",event_types:[\"log\"],function_category:\"parse\",issues_url:\"https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22transform%3A+logfmt_parser%22\",operating_systems:[\"Linux\",\"MacOS\",\"Windows\"],sidebar_label:'logfmt_parser|[\"log\"]',source_url:\"https://github.com/timberio/vector/tree/master/src/transforms/logfmt_parser.rs\",status:\"beta\",title:\"Logfmt Parser Transform\",unsupported_operating_systems:[]},m={id:\"reference/transforms/logfmt_parser\",title:\"Logfmt Parser Transform\",description:\"The Vector `logfmt_parser` transform accepts and outputs `log` events, allowing you to parse a log field's value in the logfmt format.\",source:\"@site/docs/reference/transforms/logfmt_parser.md\",permalink:\"/docs/reference/transforms/logfmt_parser\",editUrl:\"https://github.com/nervosnetwork/muta/edit/master/website/docs/reference/transforms/logfmt_parser.md\",sidebar_label:'logfmt_parser|[\"log\"]'},p=[{value:\"Configuration\",id:\"configuration\",children:[{value:\"drop_field\",id:\"drop_field\",children:[]},{value:\"field\",id:\"field\",children:[]},{value:\"types\",id:\"types\",children:[]}]},{value:\"Examples\",id:\"examples\",children:[]},{value:\"How It Works\",id:\"how-it-works\",children:[{value:\"Complex Processing\",id:\"complex-processing\",children:[]},{value:\"Environment Variables\",id:\"environment-variables\",children:[]},{value:\"Field Notation Syntax\",id:\"field-notation-syntax\",children:[]},{value:\"Format Specification\",id:\"format-specification\",children:[]},{value:\"Key/Value Parsing\",id:\"keyvalue-parsing\",children:[]},{value:\"Quoting Values\",id:\"quoting-values\",children:[]},{value:\"Value Coercion\",id:\"value-coercion\",children:[]}]}],d={rightToc:p};function u(e){var t=e.components,a=Object(l.a)(e,[\"components\"]);return Object(r.b)(\"wrapper\",Object(n.a)({},d,a,{components:t,mdxType:\"MDXLayout\"}),Object(r.b)(\"p\",null,\"The Vector \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"logfmt_parser\"),\" transform\\naccepts and outputs \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/docs/about/data-model/log/\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"log\")),\" events, allowing you to parse\\na log field's value in the \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"https://brandur.org/logfmt\"}),\"logfmt\"),\" format.\"),Object(r.b)(\"h2\",{id:\"configuration\"},\"Configuration\"),Object(r.b)(c.a,{block:!0,defaultValue:\"common\",values:[{label:\"Common\",value:\"common\"},{label:\"Advanced\",value:\"advanced\"}],mdxType:\"Tabs\"},Object(r.b)(s.a,{value:\"common\",mdxType:\"TabItem\"},Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-toml\",metastring:'title=\"vector.toml\"',title:'\"vector.toml\"'}),'[transforms.my_transform_id]\\n  # General\\n  type = \"logfmt_parser\" # required\\n  inputs = [\"my-source-or-transform-id\"] # required\\n  drop_field = true # optional, default\\n  field = \"message\" # optional, default\\n\\n  # Types\\n  types.status = \"int\" # example\\n  types.duration = \"float\" # example\\n  types.success = \"bool\" # example\\n  types.timestamp = \"timestamp|%F\" # example\\n  types.timestamp = \"timestamp|%a %b %e %T %Y\" # example\\n  types.parent.child = \"int\" # example\\n'))),Object(r.b)(s.a,{value:\"advanced\",mdxType:\"TabItem\"},Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-toml\",metastring:'title=\"vector.toml\"',title:'\"vector.toml\"'}),'[transforms.my_transform_id]\\n  # General\\n  type = \"logfmt_parser\" # required\\n  inputs = [\"my-source-or-transform-id\"] # required\\n  drop_field = true # optional, default\\n  field = \"message\" # optional, default\\n\\n  # Types\\n  types.status = \"int\" # example\\n  types.duration = \"float\" # example\\n  types.success = \"bool\" # example\\n  types.timestamp = \"timestamp|%F\" # example\\n  types.timestamp = \"timestamp|%a %b %e %T %Y\" # example\\n  types.parent.child = \"int\" # example\\n')))),Object(r.b)(i.a,{filters:!0,mdxType:\"Fields\"},Object(r.b)(o.a,{common:!0,defaultValue:!0,enumValues:null,examples:[!0,!1],groups:[],name:\"drop_field\",path:null,relevantWhen:null,required:!1,templateable:!1,type:\"bool\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h3\",{id:\"drop_field\"},\"drop_field\"),Object(r.b)(\"p\",null,\"If the specified \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"#field\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"field\")),\" should be dropped (removed) after parsing.\")),Object(r.b)(o.a,{common:!0,defaultValue:\"message\",enumValues:null,examples:[\"message\",\"parent.child\",\"array[0]\"],groups:[],name:\"field\",path:null,relevantWhen:null,required:!1,templateable:!1,type:\"string\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h3\",{id:\"field\"},\"field\"),Object(r.b)(\"p\",null,\"The log field to parse.\\nSee \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"#field-notation-syntax\"}),\"Field Notation Syntax\"),\" and \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"#format-specification\"}),\"Format Specification\"),\" for more info.\")),Object(r.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:[],groups:[],name:\"types\",path:null,relevantWhen:null,required:!1,templateable:!1,type:\"table\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h3\",{id:\"types\"},\"types\"),Object(r.b)(\"p\",null,\"Key/value pairs representing mapped log field names and types. This is used to\\ncoerce log fields into their proper types.\"),Object(r.b)(i.a,{filters:!1,mdxType:\"Fields\"},Object(r.b)(o.a,{common:!0,defaultValue:null,enumValues:{bool:'Coerces `\"true\"`/`/\"false\"`, `\"1\"`/`\"0\"`, and `\"t\"`/`\"f\"` values into boolean.',float:\"Coerce to a 64 bit float.\",int:\"Coerce to a 64 bit integer.\",string:\"Coerce to a string.\",timestamp:\"Coerces to a Vector timestamp. [`strptime` specificiers][urls.strptime_specifiers] must be used to parse the string.\"},examples:[{status:\"int\"},{duration:\"float\"},{success:\"bool\"},{timestamp:\"timestamp|%F\"},{timestamp:\"timestamp|%a %b %e %T %Y\"},{parent:{child:\"int\"}}],groups:[],name:\"`[field-name]`\",path:\"types\",relevantWhen:null,required:!1,templateable:!1,type:\"string\",unit:null,warnings:[],mdxType:\"Field\"},Object(r.b)(\"h4\",{id:\"field-name\"},Object(r.b)(\"inlineCode\",{parentName:\"h4\"},\"[field-name]\")),Object(r.b)(\"p\",null,\"A definition of log field type conversions. They key is the log field name and\\nthe value is the type. \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"https://docs.rs/chrono/0.4.11/chrono/format/strftime/index.html#specifiers\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"strptime\"),\" specifiers\"),\" are\\nsupported for the \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"timestamp\"),\" type.\"))))),Object(r.b)(\"h2\",{id:\"examples\"},\"Examples\"),Object(r.b)(c.a,{block:!0,defaultValue:\"heroku-router-log\",select:!1,values:[{label:\"Heroku Router Log\",value:\"heroku-router-log\"},{label:\"Loosely Structured\",value:\"loosely-structured\"}],mdxType:\"Tabs\"},Object(r.b)(s.a,{value:\"heroku-router-log\",mdxType:\"TabItem\"},Object(r.b)(\"p\",null,\"Given the following Heroku router log line:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-json\",metastring:'title=\"log event\"',title:'\"log','event\"':!0}),'{\\n  \"message\": \"at=info method=GET path=/ host=myapp.herokuapp.com request_id=8601b555-6a83-4c12-8269-97c8e32cdb22 fwd=\"204.204.204.204\" dyno=web.1 connect=1ms service=18ms status=200 bytes=13 tls_version=tls1.1 protocol=http\"\\n}\\n')),Object(r.b)(\"p\",null,\"And the following configuration:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-toml\",metastring:'title=\"vector.toml\"',title:'\"vector.toml\"'}),'[transforms.<transform-id>]\\ntype = \"logfmt\"\\nfield = \"message\"\\ndrop_field = true\\n\\ntypes.bytes = \"int\"\\ntypes.status = \"int\"\\n')),Object(r.b)(\"p\",null,\"A \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/docs/about/data-model/log/\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"log\"),\" event\"),\" will be output with the following structure:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-javascript\",metastring:'title=\"log event\"',title:'\"log','event\"':!0}),'{\\n  // ... existing fields\\n  \"at\": \"info\",\\n  \"method\": \"GET\",\\n  \"path\": \"/\",\\n  \"host\": \"myapp.herokuapp.com\",\\n  \"request_id\": \"8601b555-6a83-4c12-8269-97c8e32cdb22\",\\n  \"fwd\": \"204.204.204.204\",\\n  \"dyno\": \"web.1\",\\n  \"connect\": \"1ms\",\\n  \"service\": \"18ms\",\\n  \"status\": 200,\\n  \"bytes\": 13,\\n  \"tls_version\": \"tls1.1\",\\n  \"protocol\": \"http\"\\n}\\n')),Object(r.b)(\"p\",null,\"A couple of things to note:\"),Object(r.b)(\"ol\",null,Object(r.b)(\"li\",{parentName:\"ol\"},\"The \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"bytes\"),\" and \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"status\"),\" fields were coerced into \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"int\"),\"s via the \",Object(r.b)(\"a\",Object(n.a)({parentName:\"li\"},{href:\"#types\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"types\")),\" options.\"),Object(r.b)(\"li\",{parentName:\"ol\"},\"The \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"message\"),\" field was dropped due to setting \",Object(r.b)(\"a\",Object(n.a)({parentName:\"li\"},{href:\"#drop_field\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"drop_field\")),\" to \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"true\"),\".\"))),Object(r.b)(s.a,{value:\"loosely-structured\",mdxType:\"TabItem\"},Object(r.b)(\"p\",null,\"The \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"logfmt_parser\"),\" will also parse loosely structured key/value pairs. For\\nexample, given the following \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"log\"),\" event:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-json\",metastring:'title=\"log event\"',title:'\"log','event\"':!0}),'{\\n  \"message\": \"info | Sent 200 in 54.2ms duration=54.2ms status=200\"\\n}\\n')),Object(r.b)(\"p\",null,\"And the following configuration:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-toml\",metastring:'title=\"vector.toml\"',title:'\"vector.toml\"'}),'[transforms.<transform-id>]\\ntype = \"logfmt\"\\nfield = \"message\"\\ndrop_field = false # keep the field since it contains other data\\n\\ntypes.status = \"int\"\\n')),Object(r.b)(\"p\",null,\"A \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/docs/about/data-model/log/\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"log\"),\" event\"),\" will be output with the following structure:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-javascript\",metastring:'title=\"log event\"',title:'\"log','event\"':!0}),'{\\n  // ... existing fields\\n  \"message\": \"info | Sent 200 in 54.2ms duration=54.2ms status=200\",\\n  \"duration\": \"54.2ms\",\\n  \"status\": 200\\n}\\n')),Object(r.b)(\"p\",null,\"A couple of things to note:\"),Object(r.b)(\"ol\",null,Object(r.b)(\"li\",{parentName:\"ol\"},\"The \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"status\"),\" field was coerced into an \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"int\"),\" via the \",Object(r.b)(\"a\",Object(n.a)({parentName:\"li\"},{href:\"#types\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"types\")),\" option.\"),Object(r.b)(\"li\",{parentName:\"ol\"},\"The \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"message\"),\" field was \",Object(r.b)(\"em\",{parentName:\"li\"},\"kept\"),\" due to setting \",Object(r.b)(\"a\",Object(n.a)({parentName:\"li\"},{href:\"#drop_field\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"drop_field\")),\" to \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"false\"),\".\")))),Object(r.b)(\"h2\",{id:\"how-it-works\"},\"How It Works\"),Object(r.b)(\"h3\",{id:\"complex-processing\"},\"Complex Processing\"),Object(r.b)(\"p\",null,\"If you encounter limitations with the \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"logfmt_parser\"),\"\\ntransform then we recommend using a \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"https://vector.dev/components/?functions%5B%5D=program\"}),\"runtime transform\"),\".\\nThese transforms are designed for complex processing and give you the power of\\nfull programming runtime.\"),Object(r.b)(\"h3\",{id:\"environment-variables\"},\"Environment Variables\"),Object(r.b)(\"p\",null,\"Environment variables are supported through all of Vector's configuration.\\nSimply add \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"${MY_ENV_VAR}\"),\" in your Vector configuration file and the variable\\nwill be replaced before being evaluated.\"),Object(r.b)(\"p\",null,\"You can learn more in the\\n\",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/docs/setup/configuration/#environment-variables\"}),\"Environment Variables\"),\" section.\"),Object(r.b)(\"h3\",{id:\"field-notation-syntax\"},\"Field Notation Syntax\"),Object(r.b)(\"p\",null,\"The \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"#field\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"field\")),\" options\\nsupport \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/docs/reference/field-path-notation/\"}),\"Vector's field notation syntax\"),\",\\nenabling access to root-level, nested, and array field values. For example:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-toml\",metastring:'title=\"vector.toml\"',title:'\"vector.toml\"'}),'[transforms.my_logfmt_parser_transform_id]\\n  # ...\\n  field = \"message\"\\n  field = \"parent.child\"\\n  field = \"array[0]\"\\n  # ...\\n')),Object(r.b)(\"p\",null,\"You can learn more about Vector's field notation in the\\n\",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/docs/reference/field-path-notation/\"}),\"field notation reference\"),\".\"),Object(r.b)(\"h3\",{id:\"format-specification\"},\"Format Specification\"),Object(r.b)(\"p\",null,Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"https://brandur.org/logfmt\"}),\"Logfmt\"),\" is, unfortunately, a very loosely defined format. There\\nis no official specification for the format and Vector makes a best effort to\\nparse key/value pairs delimited with a \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"=\"),\". It works by splitting the \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"#field\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"field\")),\"'s\\nvalue on non-quoted white-space and then splitting each token by a non-quoted\\n\",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"=\"),\" character. This makes the parsing process somewhat flexible in that the\\nstring does not need to be strictly formatted.\"),Object(r.b)(\"p\",null,\"For example, the following log line:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-js\",metastring:'title=\"log event\"',title:'\"log','event\"':!0}),'{\\n  \"message\": \"Hello world duration=2s user-agent=\\\\\"Firefox/47.3 Mozilla/5.0\\\\\"\"\\n}\\n')),Object(r.b)(\"p\",null,\"Will be successfully parsed into:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-js\",metastring:'title=\"log event\"',title:'\"log','event\"':!0}),'{\\n  \"message\": \"Hello world duration=2s user-agent=\\\\\"Firefox/47.3 Mozilla/5.0\\\\\"\",\\n  \"duration\": \"2s\",\\n  \"user-agent\": \"Firefox/47.3 Mozilla/5.0\"\\n}\\n')),Object(r.b)(\"h3\",{id:\"keyvalue-parsing\"},\"Key/Value Parsing\"),Object(r.b)(\"p\",null,\"This transform can be used for key/value parsing. \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"https://brandur.org/logfmt\"}),\"Logfmt\"),\" refers\\nto a \",Object(r.b)(\"em\",{parentName:\"p\"},\"loosely\"),\" defined spec that parses a key/value pair delimited by a \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"=\"),\"\\ncharacter. This section, and it's keywords, is primarily added to assist users\\nin finding this transform for these terms.\"),Object(r.b)(\"h3\",{id:\"quoting-values\"},\"Quoting Values\"),Object(r.b)(\"p\",null,\"Values can be quoted to capture spaces, and quotes can be escaped with \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"\\\\\"),\".\\nFor example\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-text\"}),'key1=\"value with spaces\" key2=\"value with spaces and \\\\\"\"\\n')),Object(r.b)(\"p\",null,\"Would result in the following \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"log\"),\" event:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-json\",metastring:'title=\"log event\"',title:'\"log','event\"':!0}),'{\\n  \"key1\": \"value with spaces\",\\n  \"key2\": \"value with spaces and \\\\\"\"\\n}\\n')),Object(r.b)(\"h3\",{id:\"value-coercion\"},\"Value Coercion\"),Object(r.b)(\"p\",null,\"Values can be coerced upon extraction via the \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"#types\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"types.*\")),\" options. This functions\\nexactly like the \",Object(r.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/docs/reference/transforms/coercer/\"}),Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"coercer\"),\" transform\"),\" except that its\\ncoupled within this transform for convenience.\"),Object(r.b)(\"h4\",{id:\"timestamps\"},\"Timestamps\"),Object(r.b)(\"p\",null,\"You can coerce values into timestamps via the \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"timestamp\"),\" type:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-toml\",metastring:'title=\"vector.toml\"',title:'\"vector.toml\"'}),'# ...\\ntypes.first_timestamp = \"timestamp\" # best effort parsing\\ntypes.second_timestamp = \"timestamp|%Y-%m-%dT%H:%M:%S%z\" # ISO8601\\n# ...\\n')),Object(r.b)(\"p\",null,\"As noted above, if you do not specify a specific \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"strftime\"),\" format, Vector\\nwill make a best effort attempt to parse the timestamp against the following\\ncommon formats:\"),Object(r.b)(\"table\",null,Object(r.b)(\"thead\",{parentName:\"table\"},Object(r.b)(\"tr\",{parentName:\"thead\"},Object(r.b)(\"th\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),\"Format\"),Object(r.b)(\"th\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),\"Description\"))),Object(r.b)(\"tbody\",{parentName:\"table\"},Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"strong\",{parentName:\"td\"},\"Without Timezone\")),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}))),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"%F %T\")),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),\"YYYY-MM-DD HH:MM:SS\")),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"%v %T\")),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),\"DD-Mmm-YYYY HH:MM:SS\")),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"FT%T\")),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),\"ISO 8601 / RFC 3339 without TZ\")),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"m/%d/%Y:%T\")),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),\"US common date format\")),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"a, %d %b %Y %T\")),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),\"RFC 822/2822 without TZ\")),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"a %d %b %T %Y\")),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"date\"),\" command output without TZ\")),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"A %d %B %T %Y\")),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"date\"),\" command output without TZ, long names\")),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"a %b %e %T %Y\")),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),\"ctime format\")),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"strong\",{parentName:\"td\"},\"With Timezone\")),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}))),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"%+\")),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),\"ISO 8601 / RFC 3339\")),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"%a %d %b %T %Z %Y\")),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"date\"),\" command output\")),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"%a %d %b %T %z %Y\")),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"date\"),\" command output, numeric TZ\")),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"%a %d %b %T %#z %Y\")),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"date\"),\" command output, numeric TZ\")),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"strong\",{parentName:\"td\"},\"UTC Formats\")),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}))),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"%s\")),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),\"UNIX timestamp\")),Object(r.b)(\"tr\",{parentName:\"tbody\"},Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),Object(r.b)(\"inlineCode\",{parentName:\"td\"},\"%FT%TZ\")),Object(r.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:\"left\"}),\"ISO 8601 / RFC 3339 UTC\")))))}u.isMDXComponent=!0},309:function(e,t,a){\"use strict\";a(12);var n=a(0),l=a.n(n),r=a(318),i=a(317),o=a(316),c=a.n(o);t.a=function({children:e,filters:t}){const[a,o]=Object(n.useState)(!1),[s,b]=Object(n.useState)(new Set),[m,p]=Object(n.useState)(!1),[d,u]=Object(n.useState)(null);let f=[];e&&(f=Array.isArray(e)?e:[e]);let O=f.some(e=>e.props.common),j=c()(f).flatMap(e=>e.props.groups).uniq().value(),g=f.some(e=>e.props.required),h=f;return a&&(h=h.filter(e=>e.props.common)),s.size>0&&(h=h.filter(e=>Array.from(s).every(t=>e.props.groups.includes(t)))),m&&(h=h.filter(e=>e.props.required)),d&&(h=h.filter(e=>e.props.name.toLowerCase().includes(d.toLowerCase()))),l.a.createElement(l.a.Fragment,null,f.length>1&&!1!==t?l.a.createElement(\"div\",{className:\"filters\"},l.a.createElement(\"div\",{className:\"search\"},l.a.createElement(\"span\",{className:\"search--result-count\"},h.length,\" items\"),l.a.createElement(\"input\",{className:\"input--text input--lg\",type:\"text\",onChange:e=>u(e.currentTarget.value),placeholder:\"\\ud83d\\udd0d Search...\"})),l.a.createElement(\"div\",{className:\"filter\"},l.a.createElement(\"div\",{className:\"filter--choices\"},l.a.createElement(r.a,{values:j,currentState:s,setState:b}),O&&l.a.createElement(\"label\",{title:\"Only show popular/common results\"},l.a.createElement(\"input\",{type:\"checkbox\",onChange:e=>o(e.currentTarget.checked),checked:a}),\"common\"),g&&l.a.createElement(\"label\",{title:\"Only show required results\"},l.a.createElement(\"input\",{type:\"checkbox\",onChange:e=>p(e.currentTarget.checked),checked:m}),\"required\")))):null,!Array.isArray(h)||h.length>0?l.a.createElement(\"ul\",{className:\"connected-list\"},h):l.a.createElement(i.a,{text:\"no components found\"}))}},310:function(e,t,a){\"use strict\";a(12);var n=a(0),l=a.n(n),r=a(306),i=a.n(r),o=(a(307),a(315));function c(e){return e.includes(\".\")?'\"'+e+'\"':e}function s(e){return\"string\"==typeof e&&e.includes(\"\\n\")?`\"\"\"\\n${e}\\n\"\"\"`:JSON.stringify(e)}function b(e,t){return(a=t)&&a.constructor===Object?\"name\"in t&&\"value\"in t?`${c(t.name)} = ${s(t.value)}`:`${c(Object.keys(t)[0])} = ${s(Object.values(t)[0])}`:e?`${c(e)} = ${s(t)}`:s(t);var a}function m({values:e}){let t=[];if(Array.isArray(e))for(var a in e){let n=e[a];t.push(l.a.createElement(\"code\",{key:n},s(n))),t.push(\" \")}else for(var n in e)t.push(l.a.createElement(\"code\",{key:n,className:\"with-info-icon\",title:e[n]},s(n))),t.push(\" \");return t}function p({name:e,path:t,values:a}){let n=\"\";return a.forEach((function(a){t&&(n+=t+\".\"),n+=b(e,a)+\"\\n\"})),l.a.createElement(\"div\",null,l.a.createElement(o.a,{className:\"language-toml\"},n))}function d({unit:e,value:t}){let a=\"\";return e&&(a=l.a.createElement(l.a.Fragment,null,\" (\",e,\")\")),l.a.createElement(l.a.Fragment,null,l.a.createElement(\"code\",null,s(t)),a)}function u({value:e}){let t=Object.keys(e)[0],a=Object.values(e)[0];return\"\"==a&&(a=null),l.a.createElement(\"span\",null,l.a.createElement(\"code\",null,l.a.createElement(\"a\",{href:\"#\"+t},t)),\" \",\"= \",l.a.createElement(\"code\",null,s(a)))}function f({defaultValue:e,enumValues:t,examples:a,groups:r,name:i,path:o,relevantWhen:c,required:s,unit:b,warnings:f}){const[O,j]=Object(n.useState)(!1);return l.a.createElement(\"ul\",{className:\"info\"},f&&f.length>0&&f.map((e,t)=>l.a.createElement(\"li\",{key:t,className:\"warning\"},l.a.createElement(\"i\",{className:\"feather icon-alert-triangle\"}),\" WARNING:\",\" \",e.text)),c&&l.a.createElement(\"li\",null,\"Only \",s?\"required\":\"relevant\",\" when:\",\" \",l.a.createElement(u,{value:c})),void 0!==e?null!==e?l.a.createElement(\"li\",null,\"Default: \",l.a.createElement(d,{unit:b,value:e})):l.a.createElement(\"li\",null,\"No default\"):null,t&&l.a.createElement(\"li\",null,\"Enum, must be one of: \",l.a.createElement(m,{values:t})),(a.length>1||a[0]!=e)&&l.a.createElement(\"li\",null,l.a.createElement(\"div\",{className:\"show-more\",onClick:()=>j(!O)},O?\"Hide examples\":\"View examples\"),O&&l.a.createElement(p,{name:i,path:o,values:a})))}t.a=function({children:e,common:t,defaultValue:a,enumValues:r,examples:o,groups:c,name:s,path:b,relevantWhen:m,required:p,templateable:d,type:u,unit:O,warnings:j}){const[g,h]=Object(n.useState)(!1);let N=e;return g&&(N=N.filter(e=>\"p\"!=e.props.originalType)),l.a.createElement(\"li\",{className:i()({\"field-required\":p,\"field-collapsed\":g}),required:p},l.a.createElement(\"div\",{className:\"badges\"},d&&l.a.createElement(\"span\",{className:\"badge badge--primary with-info-icon\",title:\"This option is dynamic and accepts the Vector template syntax\"},\"templateable\"),u&&l.a.createElement(\"span\",{className:\"badge badge--secondary\"},u,O&&l.a.createElement(l.a.Fragment,null,\" (\",O,\")\")),r&&Object.keys(r).length>0&&l.a.createElement(\"span\",{className:\"badge badge--secondary with-info-icon\",title:\"This option is an enumation and only allows specific values\"},\"enum\"),t&&l.a.createElement(\"span\",{className:\"badge badge--primary with-info-icon\",title:\"This is a popular that we recommend for getting started\"},\"common\"),p?l.a.createElement(\"span\",{className:\"badge badge--danger\"},\"required\",m&&\"*\"):l.a.createElement(\"span\",{className:\"badge badge--secondary\"},\"optional\")),N,!g&&\"table\"!=u&&l.a.createElement(f,{defaultValue:a,enumValues:r,examples:o,groups:c,name:s,path:b,relevantWhen:m,required:p,unit:O,warnings:j}))}}}]);","extractedComments":[]}