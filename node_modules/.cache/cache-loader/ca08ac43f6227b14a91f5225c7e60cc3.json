{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/Desktop/vdocs/website/docs/reference/transforms/swimlanes.md","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/docs/reference/transforms/swimlanes.md","mtime":1594780808419},{"path":"/Users/Yun/Desktop/vdocs/website/.docusaurus/docusaurus-plugin-content-docs/site-docs-reference-transforms-swimlanes-md-d4f.json","mtime":1595086435139},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1588759133114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Yun/Desktop/vdocs/website/docs/reference/transforms/swimlanes.md"],"names":["React","mdx","frontMatter","last_modified_on","component_title","description","event_types","function_category","issues_url","operating_systems","sidebar_label","source_url","status","title","unsupported_operating_systems","metadata","Fields","Field","Tabs","TabItem","rightToc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tlast_modified_on: '2020-07-13',\n\tcomponent_title: 'Swimlanes',\n\tdescription: 'The Vector `swimlanes` transform accepts and outputs `log` events, allowing you to route events across parallel streams using logical filters.',\n\tevent_types: [\n\t\t'log'\n\t],\n\tfunction_category: 'route',\n\tissues_url: 'https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22transform%3A+swimlanes%22',\n\toperating_systems: [\n\t\t'Linux',\n\t\t'MacOS',\n\t\t'Windows'\n\t],\n\tsidebar_label: 'swimlanes|[\"log\"]',\n\tsource_url: 'https://github.com/timberio/vector/tree/master/src/transforms/swimlanes.rs',\n\tstatus: 'beta',\n\ttitle: 'Swimlanes Transform',\n\tunsupported_operating_systems: []\n};\nexport const metadata = {\n  \"id\": \"reference/transforms/swimlanes\",\n  \"title\": \"Swimlanes Transform\",\n  \"description\": \"The Vector `swimlanes` transform accepts and outputs `log` events, allowing you to route events across parallel streams using logical filters.\",\n  \"source\": \"@site/docs/reference/transforms/swimlanes.md\",\n  \"permalink\": \"/docs/reference/transforms/swimlanes\",\n  \"editUrl\": \"https://github.com/nervosnetwork/muta/edit/master/website/docs/reference/transforms/swimlanes.md\",\n  \"sidebar_label\": \"swimlanes|[\\\"log\\\"]\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"Split Transform\",\n    \"permalink\": \"/docs/reference/transforms/split\"\n  },\n  \"next\": {\n    \"title\": \"Tag Cardinality Limit Transform\",\n    \"permalink\": \"/docs/reference/transforms/tag_cardinality_limit\"\n  }\n};\n  /* @jsx mdx */\nimport Fields from '@site/src/components/Fields';\nimport Field from '@site/src/components/Field';\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nexport const rightToc = [{\n  value: 'Configuration',\n  id: 'configuration',\n  children: [{\n    value: 'lanes',\n    id: 'lanes',\n    children: []\n  }]\n}, {\n  value: 'Examples',\n  id: 'examples',\n  children: []\n}, {\n  value: 'How It Works',\n  id: 'how-it-works',\n  children: [{\n    value: 'Complex Processing',\n    id: 'complex-processing',\n    children: []\n  }, {\n    value: 'Environment Variables',\n    id: 'environment-variables',\n    children: []\n  }]\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`The Vector `}<inlineCode parentName=\"p\">{`swimlanes`}</inlineCode>{` transform\naccepts and outputs `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/about/data-model/log/\"\n      }}><inlineCode parentName=\"a\">{`log`}</inlineCode></a>{` events, allowing you to route\nevents across parallel streams using logical filters.`}</p>\n    {\n      /*\n          THIS FILE IS AUTOGENERATED!\n           To make changes please edit the template located at:\n           website/docs/reference/transforms/swimlanes.md.erb\n      */\n    }\n    <h2 {...{\n      \"id\": \"configuration\"\n    }}>{`Configuration`}</h2>\n    <Tabs block={true} defaultValue=\"common\" values={[{\n      \"label\": \"Common\",\n      \"value\": \"common\"\n    }, {\n      \"label\": \"Advanced\",\n      \"value\": \"advanced\"\n    }]} mdxType=\"Tabs\">\n      <TabItem value=\"common\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"title=\\\"vector.toml\\\"\",\n            \"title\": \"\\\"vector.toml\\\"\"\n          }}>{`[transforms.my_transform_id]\n  # General\n  type = \"swimlanes\" # required\n  inputs = [\"my-source-or-transform-id\"] # required\n\n  # Lanes\n  [transforms.my_transform_id.lanes.\\`[swimlane-id]\\`]\n    type = \"check_fields\" # optional, default\n    \"message.eq\" = \"this is the content to match against\" # example\n    \"message.eq\" = [\"match this\", \"or this\"] # example\n    \"message.contains\" = \"foo\" # example\n    \"message.contains\" = [\"foo\", \"bar\"] # example\n    \"environment.ends_with\" = \"-staging\" # example\n    \"environment.ends_with\" = [\"-staging\", \"-running\"] # example\n    \"message.regex\" = \" (any|of|these|five|words) \" # example\n    \"environment.starts_with\" = \"staging-\" # example\n    \"environment.starts_with\" = [\"staging-\", \"running-\"] # example\n`}</code></pre>\n      </TabItem>\n      <TabItem value=\"advanced\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"title=\\\"vector.toml\\\"\",\n            \"title\": \"\\\"vector.toml\\\"\"\n          }}>{`[transforms.my_transform_id]\n  # General\n  type = \"swimlanes\" # required\n  inputs = [\"my-source-or-transform-id\"] # required\n\n  # Lanes\n  [transforms.my_transform_id.lanes.\\`[swimlane-id]\\`]\n    type = \"check_fields\" # optional, default\n    \"message.eq\" = \"this is the content to match against\" # example\n    \"message.eq\" = [\"match this\", \"or this\"] # example\n    \"host.exists\" = true # example\n    \"method.neq\" = \"POST\" # example\n    \"method.neq\" = [\"POST\", \"GET\"] # example\n    \"message.not_contains\" = \"some phrase to ignore\" # example\n    \"unit.not_starts_with\" = \"sys-\" # example\n    \"unit.not_ends_with\" = \".device\" # example\n    \"message.contains\" = \"foo\" # example\n    \"message.contains\" = [\"foo\", \"bar\"] # example\n    \"environment.ends_with\" = \"-staging\" # example\n    \"environment.ends_with\" = [\"-staging\", \"-running\"] # example\n    \"message.ip_cidr_contains\" = \"10.0.0.0/8\" # example\n    \"message.ip_cidr_contains\" = [\"2000::/10\", \"192.168.0.0/16\"] # example\n    \"message.regex\" = \" (any|of|these|five|words) \" # example\n    \"environment.starts_with\" = \"staging-\" # example\n    \"environment.starts_with\" = [\"staging-\", \"running-\"] # example\n`}</code></pre>\n      </TabItem>\n    </Tabs>\n    <Fields filters={true} mdxType=\"Fields\">\n      <Field common={true} defaultValue={null} enumValues={null} examples={[]} groups={[]} name={\"lanes\"} path={null} relevantWhen={null} required={true} templateable={false} type={\"table\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"lanes\"\n        }}>{`lanes`}</h3>\n        <p>{`A table of swimlane identifiers to logical conditions representing the filter\nof the swimlane. Each swimlane can then be referenced as an input by other\ncomponents with the name `}<inlineCode parentName=\"p\">{`<transform_name>.<swimlane_id>`}</inlineCode>{`.`}</p>\n        <Fields filters={false} mdxType=\"Fields\">\n          <Field common={true} defaultValue={null} enumValues={null} examples={[]} groups={[]} name={\"`[swimlane-id]`\"} path={\"lanes\"} relevantWhen={null} required={true} templateable={false} type={\"table\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"swimlane-id\"\n            }}><inlineCode parentName=\"h4\">{`[swimlane-id]`}</inlineCode></h4>\n            <p>{`The identifier of a swimlane.`}</p>\n            <Fields filters={false} mdxType=\"Fields\">\n              <Field common={true} defaultValue={\"check_fields\"} enumValues={{\n                \"check_fields\": \"Allows you to check individual fields against a list of conditions.\",\n                \"is_log\": \"Returns true if the event is a log.\",\n                \"is_metric\": \"Returns true if the event is a metric.\"\n              }} examples={[\"check_fields\", \"is_log\", \"is_metric\"]} groups={[]} name={\"type\"} path={\"lanes.`[swimlane-id]`\"} relevantWhen={null} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n                <h5 {...{\n                  \"id\": \"type\"\n                }}>{`type`}</h5>\n                <p>{`The type of the condition to execute.`}</p>\n              </Field>\n              <Field common={true} defaultValue={null} enumValues={null} examples={[{\n                \"message.eq\": \"this is the content to match against\"\n              }, {\n                \"message.eq\": [\"match this\", \"or this\"]\n              }]} groups={[]} name={\"`[field-name]`.eq\"} path={\"lanes.`[swimlane-id]`\"} relevantWhen={{\n                \"type\": \"check_fields\"\n              }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n                <h5 {...{\n                  \"id\": \"field-nameeq\"\n                }}><inlineCode parentName=\"h5\">{`[field-name]`}</inlineCode>{`.eq`}</h5>\n                <p>{`Check whether a fields contents exactly matches the value specified. This may\nbe a single string or a list of strings, in which case this evaluates to true\nif any of the list matches.`}</p>\n              </Field>\n              <Field common={false} defaultValue={null} enumValues={null} examples={[{\n                \"host.exists\": true\n              }]} groups={[]} name={\"`[field-name]`.exists\"} path={\"lanes.`[swimlane-id]`\"} relevantWhen={{\n                \"type\": \"check_fields\"\n              }} required={false} templateable={false} type={\"bool\"} unit={null} warnings={[]} mdxType=\"Field\">\n                <h5 {...{\n                  \"id\": \"field-nameexists\"\n                }}><inlineCode parentName=\"h5\">{`[field-name]`}</inlineCode>{`.exists`}</h5>\n                <p>{`Check whether a field exists or does not exist, depending on the provided value\nbeing `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{` respectively.`}</p>\n              </Field>\n              <Field common={false} defaultValue={null} enumValues={null} examples={[{\n                \"method.neq\": \"POST\"\n              }, {\n                \"method.neq\": [\"POST\", \"GET\"]\n              }]} groups={[]} name={\"`[field-name]`.neq\"} path={\"lanes.`[swimlane-id]`\"} relevantWhen={{\n                \"type\": \"check_fields\"\n              }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n                <h5 {...{\n                  \"id\": \"field-nameneq\"\n                }}><inlineCode parentName=\"h5\">{`[field-name]`}</inlineCode>{`.neq`}</h5>\n                <p>{`Check whether a fields contents does not match the value specified. This may be\na single string or a list of strings, in which case this evaluates to false if\nany of the list matches.`}</p>\n              </Field>\n              <Field common={false} defaultValue={null} enumValues={null} examples={[{\n                \"message.not_contains\": \"some phrase to ignore\"\n              }, {\n                \"unit.not_starts_with\": \"sys-\"\n              }, {\n                \"unit.not_ends_with\": \".device\"\n              }]} groups={[]} name={\"`[field-name]`.not_`[condition]`\"} path={\"lanes.`[swimlane-id]`\"} relevantWhen={{\n                \"type\": \"check_fields\"\n              }} required={false} templateable={false} type={\"any\"} unit={null} warnings={[]} mdxType=\"Field\">\n                <h5 {...{\n                  \"id\": \"field-namenot_condition\"\n                }}><inlineCode parentName=\"h5\">{`[field-name]`}</inlineCode>{`.not_`}<inlineCode parentName=\"h5\">{`[condition]`}</inlineCode></h5>\n                <p>{`Check if the given `}<inlineCode parentName=\"p\">{`[condition]`}</inlineCode>{` does not match.`}</p>\n              </Field>\n              <Field common={true} defaultValue={null} enumValues={null} examples={[{\n                \"message.contains\": \"foo\"\n              }, {\n                \"message.contains\": [\"foo\", \"bar\"]\n              }]} groups={[]} name={\"`[field_name]`.contains\"} path={\"lanes.`[swimlane-id]`\"} relevantWhen={{\n                \"type\": \"check_fields\"\n              }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n                <h5 {...{\n                  \"id\": \"field_namecontains\"\n                }}><inlineCode parentName=\"h5\">{`[field_name]`}</inlineCode>{`.contains`}</h5>\n                <p>{`Checks whether a string field contains a string argument. This may be a single\nstring or a list of strings, in which case this evaluates to true if any of the\nlist matches.`}</p>\n              </Field>\n              <Field common={true} defaultValue={null} enumValues={null} examples={[{\n                \"environment.ends_with\": \"-staging\"\n              }, {\n                \"environment.ends_with\": [\"-staging\", \"-running\"]\n              }]} groups={[]} name={\"`[field_name]`.ends_with\"} path={\"lanes.`[swimlane-id]`\"} relevantWhen={{\n                \"type\": \"check_fields\"\n              }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n                <h5 {...{\n                  \"id\": \"field_nameends_with\"\n                }}><inlineCode parentName=\"h5\">{`[field_name]`}</inlineCode>{`.ends_with`}</h5>\n                <p>{`Checks whether a string field ends with a string argument. This may be a single\nstring or a list of strings, in which case this evaluates to true if any of the\nlist matches.`}</p>\n              </Field>\n              <Field common={false} defaultValue={null} enumValues={null} examples={[{\n                \"message.ip_cidr_contains\": \"10.0.0.0/8\"\n              }, {\n                \"message.ip_cidr_contains\": [\"2000::/10\", \"192.168.0.0/16\"]\n              }]} groups={[]} name={\"`[field_name]`.ip_cidr_contains\"} path={\"lanes.`[swimlane-id]`\"} relevantWhen={{\n                \"type\": \"check_fields\"\n              }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n                <h5 {...{\n                  \"id\": \"field_nameip_cidr_contains\"\n                }}><inlineCode parentName=\"h5\">{`[field_name]`}</inlineCode>{`.ip_cidr_contains`}</h5>\n                <p>{`Checks whether an IP field is contained within a given `}<a parentName=\"p\" {...{\n                    \"href\": \"https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\"\n                  }}>{`IP CIDR`}</a>{`\n(works with IPv4 and IPv6). This may be a single string or a list of strings,\nin which case this evaluates to true if the IP field is contained within any of\nthe CIDRs in the list.`}</p>\n              </Field>\n              <Field common={true} defaultValue={null} enumValues={null} examples={[{\n                \"message.regex\": \" (any|of|these|five|words) \"\n              }]} groups={[]} name={\"`[field_name]`.regex\"} path={\"lanes.`[swimlane-id]`\"} relevantWhen={{\n                \"type\": \"check_fields\"\n              }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n                <h5 {...{\n                  \"id\": \"field_nameregex\"\n                }}><inlineCode parentName=\"h5\">{`[field_name]`}</inlineCode>{`.regex`}</h5>\n                <p>{`Checks whether a string field matches a `}<a parentName=\"p\" {...{\n                    \"href\": \"https://en.wikipedia.org/wiki/Regular_expression\"\n                  }}>{`regular expression`}</a>{`.\nVector uses the `}<a parentName=\"p\" {...{\n                    \"href\": \"https://docs.rs/regex/1.3.6/regex/#syntax\"\n                  }}>{`documented Rust Regex syntax`}</a>{`. Note\nthat this condition is considerably more expensive than a regular string match\n(such as `}<inlineCode parentName=\"p\">{`starts_with`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`contains`}</inlineCode>{`) so the use of those conditions are\npreferred where possible.`}</p>\n              </Field>\n              <Field common={true} defaultValue={null} enumValues={null} examples={[{\n                \"environment.starts_with\": \"staging-\"\n              }, {\n                \"environment.starts_with\": [\"staging-\", \"running-\"]\n              }]} groups={[]} name={\"`[field_name]`.starts_with\"} path={\"lanes.`[swimlane-id]`\"} relevantWhen={{\n                \"type\": \"check_fields\"\n              }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n                <h5 {...{\n                  \"id\": \"field_namestarts_with\"\n                }}><inlineCode parentName=\"h5\">{`[field_name]`}</inlineCode>{`.starts_with`}</h5>\n                <p>{`Checks whether a string field starts with a string argument. This may be a\nsingle string or a list of strings, in which case this evaluates to true if any\nof the list matches.`}</p>\n              </Field>\n            </Fields>\n          </Field>\n        </Fields>\n      </Field>\n    </Fields>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Tabs block={true} defaultValue=\"ifelse\" select={false} values={[{\n      \"label\": \"If/Else\",\n      \"value\": \"ifelse\"\n    }, {\n      \"label\": \"Splitting\",\n      \"value\": \"splitting\"\n    }]} mdxType=\"Tabs\">\n      <TabItem value=\"ifelse\" mdxType=\"TabItem\">\n        <p>{`The `}<inlineCode parentName=\"p\">{`swimlanes`}</inlineCode>{` transform, in it's simplest form, can act as a simple if/else stream splitter. For example, we can route events from the host `}<inlineCode parentName=\"p\">{`gerry`}</inlineCode>{` to a sink `}<inlineCode parentName=\"p\">{`only_loves_gerry`}</inlineCode>{`, and all other events to a sink `}<inlineCode parentName=\"p\">{`hates_gerry`}</inlineCode>{`:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"title=\\\"vector.toml\\\"\",\n            \"title\": \"\\\"vector.toml\\\"\"\n          }}>{`[transforms.splitting_gerrys]\n  inputs = [ \"somewhere\" ]\n  type = \"swimlanes\"\n\n  [transforms.splitting_gerrys.lanes.only_gerrys]\n    type = \"check_fields\"\n    \"host.eq\" = \"gerry\"\n\n  [transforms.splitting_gerrys.lanes.no_gerrys]\n    type = \"check_fields\"\n    \"host.neq\" = \"gerry\"\n\n[sinks.only_loves_gerry]\n  inputs = [ \"splitting_gerrys.only_gerrys\" ]\n  type = \"something\"\n\n[sinks.hates_gerry]\n  inputs = [ \"splitting_gerrys.no_gerrys\" ]\n  type = \"something_else\"\n`}</code></pre>\n        <p>{`This syntax makes it easy to create arbitrary numbers of swimlanes, each with their own logic, and easily route them to downstream components.`}</p>\n      </TabItem>\n      <TabItem value=\"splitting\" mdxType=\"TabItem\">\n        <p>{`To follow up with the previous `}<inlineCode parentName=\"p\">{`If/Else`}</inlineCode>{` example, let's say we want to split a log stream based on all of the log `}<inlineCode parentName=\"p\">{`level`}</inlineCode>{` values:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"title=\\\"vector.toml\\\"\",\n            \"title\": \"\\\"vector.toml\\\"\"\n          }}>{`[transforms.level_splitter]\n  type = \"swimlanes\"\n\n  [transforms.level_splitter.lanes.debug_events]\n    type = \"check_fields\"\n    \"level.eq\" = \"debug\"\n\n  [transforms.level_splitter.lanes.info_events]\n    type = \"check_fields\"\n    \"level.eq\" = \"info\"\n\n  [transforms.level_splitter.lanes.warn_events]\n    type = \"check_fields\"\n    \"level.eq\" = \"warn\"\n\n  [transforms.level_splitter.lanes.error_events]\n    type = \"check_fields\"\n    \"level.eq\" = \"error\"\n\n[sinks.info_printer]\n  type = \"console\"\n  inputs = [\"level_splitter.info_events\"]\n  target = \"stdout\"\n\n[sinks.error_printer]\n  type = \"console\"\n  inputs = [\"level_splitter.error_events\"]\n  target = \"stderr\"\n\n# Add more sinks or transforms that use the \\`debug_events\\` and \\`warn_events\\`\n# streams\n`}</code></pre>\n        <p>{`Notice how we must define mutually exclusive conditions for each `}<inlineCode parentName=\"p\">{`level`}</inlineCode>{` value. If a log `}<inlineCode parentName=\"p\">{`level`}</inlineCode>{` does not match any of the lanes it will be dropped.`}</p>\n      </TabItem>\n    </Tabs>\n    <h2 {...{\n      \"id\": \"how-it-works\"\n    }}>{`How It Works`}</h2>\n    <h3 {...{\n      \"id\": \"complex-processing\"\n    }}>{`Complex Processing`}</h3>\n    <p>{`If you encounter limitations with the `}<inlineCode parentName=\"p\">{`swimlanes`}</inlineCode>{`\ntransform then we recommend using a `}<a parentName=\"p\" {...{\n        \"href\": \"https://vector.dev/components/?functions%5B%5D=program\"\n      }}>{`runtime transform`}</a>{`.\nThese transforms are designed for complex processing and give you the power of\nfull programming runtime.`}</p>\n    <h3 {...{\n      \"id\": \"environment-variables\"\n    }}>{`Environment Variables`}</h3>\n    <p>{`Environment variables are supported through all of Vector's configuration.\nSimply add `}<inlineCode parentName=\"p\">{`\\${MY_ENV_VAR}`}</inlineCode>{` in your Vector configuration file and the variable\nwill be replaced before being evaluated.`}</p>\n    <p>{`You can learn more in the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/setup/configuration/#environment-variables\"\n      }}>{`Environment Variables`}</a>{` section.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}