{"remainingRequest":"/Users/Yun/vector/website/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/Yun/vector/website/src/components/Changelog/index.js","dependencies":[{"path":"/Users/Yun/vector/website/src/components/Changelog/index.js","mtime":1594780808761},{"path":"/Users/Yun/vector/website/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/vector/website/node_modules/babel-loader/lib/index.js","mtime":1588759098876}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIjtpbXBvcnQgUmVhY3Qse3VzZVN0YXRlfWZyb20ncmVhY3QnO2ltcG9ydCBDaGVja2JveExpc3QgZnJvbSdAc2l0ZS9zcmMvY29tcG9uZW50cy9DaGVja2JveExpc3QnO2ltcG9ydCBFbXB0eSBmcm9tJ0BzaXRlL3NyYy9jb21wb25lbnRzL0VtcHR5JztpbXBvcnQgSGVhZGluZyBmcm9tJ0B0aGVtZS9IZWFkaW5nJztpbXBvcnQgTGluayBmcm9tJ0Bkb2N1c2F1cnVzL0xpbmsnO2ltcG9ydCBSYWRpb0xpc3QgZnJvbSdAc2l0ZS9zcmMvY29tcG9uZW50cy9SYWRpb0xpc3QnO2ltcG9ydCBTZWxlY3QgZnJvbSdyZWFjdC1zZWxlY3QnO2ltcG9ydCBfIGZyb20nbG9kYXNoJztpbXBvcnQgY2xhc3NuYW1lcyBmcm9tJ2NsYXNzbmFtZXMnO2ltcG9ydHtjb21taXRUeXBlTmFtZSxzb3J0Q29tbWl0VHlwZXN9ZnJvbSdAc2l0ZS9zcmMvZXhwb3J0cy9jb21taXRzJztpbXBvcnQgcGx1cmFsaXplIGZyb20ncGx1cmFsaXplJztpbXBvcnQgc3R5bGVzIGZyb20nLi9zdHlsZXMubW9kdWxlLmNzcyc7aW1wb3J0IHVzZURvY3VzYXVydXNDb250ZXh0IGZyb20nQGRvY3VzYXVydXMvdXNlRG9jdXNhdXJ1c0NvbnRleHQnO2NvbnN0IEFuY2hvcmVkSDM9SGVhZGluZygnaDMnKTtjb25zdCBBbmNob3JlZEg0PUhlYWRpbmcoJ2g0Jyk7Y29uc3QgREVGQVVMVF9UWVBFUz1bJ2VuaGFuY2VtZW50JywnZmVhdCcsJ2ZpeCcsJ3BlcmYnXTtmdW5jdGlvbiBTY29wZVRhZ3Moe3Njb3Blc30pe3JldHVybiBzY29wZXMubWFwKChzY29wZSxpZHgpPT4vKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgic3BhbiIse2tleTppZHgsY2xhc3NOYW1lOiJiYWRnZSBiYWRnZS0tcHJpbWFyeSBiYWRnZS0tc21hbGwgbGluayIsb25DbGljazooKT0+c2V0U2VhcmNoVGVybShzY29wZS5uYW1lKSxzdHlsZTp7bWFyZ2luUmlnaHQ6IjRweCJ9LHRpdGxlOmBGaWx0ZXIgdG8gJyR7c2NvcGUubmFtZX0nIGNoYW5nZXMgb25seWB9LHNjb3BlLm5hbWUpKTt9ZnVuY3Rpb24gQ29tbWl0KHtjb21taXQsc2V0U2VhcmNoVGVybX0pe3JldHVybi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJsaSIsbnVsbCwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOiJiYWRnZXMifSxjb21taXQuYnJlYWtpbmdfY2hhbmdlJiYvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChMaW5rLHt0bzpjb21taXQuaGlnaGxpZ2h0X3Blcm1hbGluayxjbGFzc05hbWU6ImJhZGdlIGJhZGdlLS1kYW5nZXIiLHRpdGxlOiJWaWV3IHVwZ3JhZGUgZ3VpZGUuLi4ifSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiaSIse2NsYXNzTmFtZToiZmVhdGhlciBpY29uLWFsZXJ0LXRyaWFuZ2xlIn0pLCIgYnJlYWtpbmciKSwhY29tbWl0LmJyZWFraW5nX2NoYW5nZSYmY29tbWl0LmhpZ2hsaWdodF9wZXJtYWxpbmsmJi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KExpbmsse3RvOmNvbW1pdC5oaWdobGlnaHRfcGVybWFsaW5rLGNsYXNzTmFtZToiYmFkZ2UgYmFkZ2UtLXdhcm5pbmciLHRpdGxlOiJWaWV3IGhpZ2hsaWdodCBhbm5vdW5jZW1lbnQuLi4ifSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiaSIse2NsYXNzTmFtZToiZmVhdGhlciBpY29uLWdpZnQifSksIiBoaWdobGlnaHQiKSxjb21taXQucHJfbnVtYmVyJiYvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiYSIse2hyZWY6YGh0dHBzOi8vZ2l0aHViLmNvbS90aW1iZXJpby92ZWN0b3IvcHVsbC8ke2NvbW1pdC5wcl9udW1iZXJ9YCx0YXJnZXQ6Il9ibGFuayIsY2xhc3NOYW1lOiJiYWRnZSBiYWRnZS0tc2Vjb25kYXJ5IixzdHlsZTp7bWluV2lkdGg6IjY1cHgiLHRleHRBbGlnbjoiY2VudGVyIn0sdGl0bGU6IlZpZXcgcHVsbCByZXF1ZXN0Li4uIn0sLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImkiLHtjbGFzc05hbWU6ImZlYXRoZXIgaWNvbi1naXQtcHVsbC1yZXF1ZXN0In0pLCIgIixjb21taXQucHJfbnVtYmVyKSwhY29tbWl0LnByX251bWJlciYmLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImEiLHtocmVmOmBodHRwczovL2dpdGh1Yi5jb20vdGltYmVyaW8vdmVjdG9yL2NvbW1pdC8ke2NvbW1pdC5zaGF9YCx0YXJnZXQ6Il9ibGFuayIsY2xhc3NOYW1lOiJiYWRnZSBiYWRnZS0tc2Vjb25kYXJ5IixzdHlsZTp7bWluV2lkdGg6IjY1cHgiLHRleHRBbGlnbjoiY2VudGVyIn0sdGl0bGU6IlZpZXcgY29tbWl0Li4uIn0sLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImkiLHtjbGFzc05hbWU6ImZlYXRoZXIgaWNvbi1naXQtY29tbWl0In0pLCIgIixjb21taXQuc2hhLnNsaWNlKDAsNSkpKSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChBbmNob3JlZEg0LHtpZDpjb21taXQuc2hhfSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChTY29wZVRhZ3Mse3Njb3Blczpjb21taXQuc2NvcGVzfSksY29tbWl0LmRlc2NyaXB0aW9uKSk7fWZ1bmN0aW9uIENvbW1pdHMoe2NvbW1pdHMsZ3JvdXBCeSxzZXRTZWFyY2hUZXJtfSl7aWYoZ3JvdXBCeSl7Y29uc3QgZ3JvdXBlZENvbW1pdHM9Xyhjb21taXRzKS5zb3J0QnkoY29tbWl0PT5jb21taXQudHlwZSkuZ3JvdXBCeShncm91cEJ5KS52YWx1ZSgpO2NvbnN0IGdyb3VwS2V5cz1zb3J0Q29tbWl0VHlwZXMoT2JqZWN0LmtleXMoZ3JvdXBlZENvbW1pdHMpKTtyZXR1cm4vKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgidWwiLHtjbGFzc05hbWU6ImNvbm5lY3RlZC1saXN0IGNvbm5lY3RlZC1saXN0LS1jbGVhbiJ9LGdyb3VwS2V5cy5tYXAoKGdyb3VwS2V5LGNhdElkeCk9Pi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJsaSIse2tleTpjYXRJZHh9LC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEFuY2hvcmVkSDMse2lkOmdyb3VwS2V5fSxwbHVyYWxpemUoY29tbWl0VHlwZU5hbWUoZ3JvdXBLZXkpLGdyb3VwZWRDb21taXRzW2dyb3VwS2V5XS5sZW5ndGgsdHJ1ZSkpLC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJ1bCIse2NsYXNzTmFtZToiY29ubmVjdGVkLWxpc3QgY29ubmVjdGVkLWxpc3QtLWNvbXBhY3QgY29ubmVjdGVkLWxpc3QtLWJsZW5kIGNvbm5lY3RlZC1saXN0LS1ob3ZlciJ9LGdyb3VwZWRDb21taXRzW2dyb3VwS2V5XS5tYXAoKGNvbW1pdCxjb21taXRJZHgpPT4vKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb21taXQse2tleTpjb21taXRJZHgsY29tbWl0OmNvbW1pdCxzZXRTZWFyY2hUZXJtOnNldFNlYXJjaFRlcm19KSkpKSkpO31lbHNle3JldHVybi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLG51bGwsY29tbWl0cy5sZW5ndGgpO319ZnVuY3Rpb24gQ2hhbmdlbG9nKHt2ZXJzaW9ufSl7Y29uc3QgY29udGV4dD11c2VEb2N1c2F1cnVzQ29udGV4dCgpO2NvbnN0e3NpdGVDb25maWc9e319PWNvbnRleHQ7Y29uc3R7bWV0YWRhdGE6e3JlbGVhc2VzfX09c2l0ZUNvbmZpZy5jdXN0b21GaWVsZHM7Y29uc3QgY29tbWl0cz1fLmZsYXRNYXAocmVsZWFzZXMscmVsZWFzZT0+cmVsZWFzZS5jb21taXRzLm1hcChjb21taXQ9Pntjb21taXQudmVyc2lvbj1yZWxlYXNlLnZlcnNpb247cmV0dXJuIGNvbW1pdDt9KSk7Ly8KLy8gU3RhdGUKLy8KY29uc3RbZ3JvdXBCeSxzZXRHcm91cEJ5XT11c2VTdGF0ZSgndHlwZScpO2NvbnN0W29ubHlUeXBlcyxzZXRPbmx5VHlwZXNdPXVzZVN0YXRlKG5ldyBTZXQoREVGQVVMVF9UWVBFUykpO2NvbnN0W3NlYXJjaFRlcm0sc2V0U2VhcmNoVGVybV09dXNlU3RhdGUobnVsbCk7Y29uc3Rbb25seXZlcnNpb24sc2V0VmVyc2lvbl09dXNlU3RhdGUodmVyc2lvbik7Ly8KLy8gQmFzZSBjb21taXRzCi8vCmxldCBiYXNlQ29tbWl0cz1jb21taXRzLnNsaWNlKDApO2lmKG9ubHl2ZXJzaW9uKXtiYXNlQ29tbWl0cz1iYXNlQ29tbWl0cy5maWx0ZXIoY29tbWl0PT5jb21taXQudmVyc2lvbj09b25seXZlcnNpb24pO30vLwovLyBGaWx0ZXJlZCBjb21taXRzCi8vCmxldCBmaWx0ZXJlZENvbW1pdHM9YmFzZUNvbW1pdHM7aWYob25seVR5cGVzLnNpemU+MCl7ZmlsdGVyZWRDb21taXRzPWZpbHRlcmVkQ29tbWl0cy5maWx0ZXIoY29tbWl0PT5vbmx5VHlwZXMuaGFzKGNvbW1pdC50eXBlKSk7fWlmKHNlYXJjaFRlcm0pe2ZpbHRlcmVkQ29tbWl0cz1maWx0ZXJlZENvbW1pdHMuZmlsdGVyKGNvbW1pdD0+Y29tbWl0Lm1lc3NhZ2UudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hUZXJtLnRvTG93ZXJDYXNlKCkpKTt9aWYob25seXZlcnNpb24pe2ZpbHRlcmVkQ29tbWl0cz1maWx0ZXJlZENvbW1pdHMuZmlsdGVyKGNvbW1pdD0+Y29tbWl0LnZlcnNpb249PW9ubHl2ZXJzaW9uKTt9Ly8KLy8gRmlsdGVyIE9wdGlvbnMKLy8KY29uc3QgdHlwZXM9bmV3IFNldChfKGNvbW1pdHMpLm1hcChjb21taXQ9PmNvbW1pdC50eXBlKS51bmlxKCkuY29tcGFjdCgpLnNvcnQoKS52YWx1ZSgpKTsvLwovLyBSZW5kZXIKLy8KcmV0dXJuLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsbnVsbCxiYXNlQ29tbWl0cy5sZW5ndGg+NT8vKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOiJmaWx0ZXJzIGZpbHRlcnMtLW5hcnJvdyJ9LC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6InNlYXJjaCJ9LC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIix7Y2xhc3NOYW1lOiJzZWFyY2gtLXJlc3VsdC1jb3VudCJ9LGZpbHRlcmVkQ29tbWl0cy5sZW5ndGgsIiBpdGVtcyIpLC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJpbnB1dCIse3R5cGU6InRleHQiLG9uQ2hhbmdlOmV2ZW50PT5zZXRTZWFyY2hUZXJtKGV2ZW50LmN1cnJlbnRUYXJnZXQudmFsdWUpLHBsYWNlaG9sZGVyOiJcdUQ4M0RcdUREMEQgU2VhcmNoIGJ5IHR5cGUsIGNvbXBvbmVudCBuYW1lLCBvciB0aXRsZS4uLiIsY2xhc3NOYW1lOiJpbnB1dC0tdGV4dCBpbnB1dC0tbGciLHZhbHVlOnNlYXJjaFRlcm18fCcnfSkpLC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6ImZpbHRlciJ9LC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6ImZpbHRlci0tY2hvaWNlcyJ9LC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENoZWNrYm94TGlzdCx7bmFtZToidHlwZSIsdmFsdWVzOnR5cGVzLGN1cnJlbnRTdGF0ZTpvbmx5VHlwZXMsc2V0U3RhdGU6c2V0T25seVR5cGVzfSkpKSk6bnVsbCxmaWx0ZXJlZENvbW1pdHMubGVuZ3RoPjA/LyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tbWl0cyx7Y29tbWl0czpmaWx0ZXJlZENvbW1pdHMsZ3JvdXBCeTpncm91cEJ5LHNldFNlYXJjaFRlcm06c2V0U2VhcmNoVGVybSx0eXBlczp0eXBlc30pOi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEVtcHR5LHt0ZXh0OiJubyBjb21taXRzIGZvdW5kIn0pKTt9ZXhwb3J0IGRlZmF1bHQgQ2hhbmdlbG9nOw=="},{"version":3,"sources":["/Users/Yun/vector/website/src/components/Changelog/index.js"],"names":["React","useState","CheckboxList","Empty","Heading","Link","RadioList","Select","_","classnames","commitTypeName","sortCommitTypes","pluralize","styles","useDocusaurusContext","AnchoredH3","AnchoredH4","DEFAULT_TYPES","ScopeTags","scopes","map","scope","idx","setSearchTerm","name","marginRight","Commit","commit","breaking_change","highlight_permalink","pr_number","minWidth","textAlign","sha","slice","description","Commits","commits","groupBy","groupedCommits","sortBy","type","value","groupKeys","Object","keys","groupKey","catIdx","length","commitIdx","Changelog","version","context","siteConfig","metadata","releases","customFields","flatMap","release","setGroupBy","onlyTypes","setOnlyTypes","Set","searchTerm","onlyversion","setVersion","baseCommits","filter","filteredCommits","size","has","message","toLowerCase","includes","types","uniq","compact","sort","event","currentTarget"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nimport CheckboxList from '@site/src/components/CheckboxList';\nimport Empty from '@site/src/components/Empty';\nimport Heading from '@theme/Heading';\nimport Link from '@docusaurus/Link';\nimport RadioList from '@site/src/components/RadioList';\nimport Select from 'react-select';\n\nimport _ from 'lodash';\nimport classnames from 'classnames';\nimport {commitTypeName, sortCommitTypes} from '@site/src/exports/commits';\nimport pluralize from 'pluralize';\nimport styles from './styles.module.css';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\n\nconst AnchoredH3 = Heading('h3');\nconst AnchoredH4 = Heading('h4');\nconst DEFAULT_TYPES = ['enhancement', 'feat', 'fix', 'perf'];\n\nfunction ScopeTags({scopes}) {\n  return scopes.map((scope, idx) => (\n    <span\n      key={idx}\n      className=\"badge badge--primary badge--small link\"\n      onClick={() => setSearchTerm(scope.name)}\n      style={{marginRight: \"4px\"}}\n      title={`Filter to '${scope.name}' changes only`}>\n      {scope.name}\n    </span>\n  ));\n}\n\nfunction Commit({commit, setSearchTerm}) {\n  return (\n    <li>\n      <div className=\"badges\">\n        {commit.breaking_change && (\n          <Link\n            to={commit.highlight_permalink}\n            className=\"badge badge--danger\"\n            title=\"View upgrade guide...\">\n            <i className=\"feather icon-alert-triangle\"></i> breaking\n          </Link>\n        )}\n        {!commit.breaking_change && commit.highlight_permalink && (\n          <Link\n            to={commit.highlight_permalink}\n            className=\"badge badge--warning\"\n            title=\"View highlight announcement...\">\n            <i className=\"feather icon-gift\"></i> highlight\n          </Link>\n        )}\n        {commit.pr_number && (\n          <a\n            href={`https://github.com/timberio/vector/pull/${commit.pr_number}`}\n            target=\"_blank\"\n            className=\"badge badge--secondary\"\n            style={{minWidth: \"65px\", textAlign: \"center\"}}\n            title=\"View pull request...\">\n            <i className=\"feather icon-git-pull-request\"></i> {commit.pr_number}\n          </a>\n        )}\n        {!commit.pr_number && (\n          <a\n            href={`https://github.com/timberio/vector/commit/${commit.sha}`}\n            target=\"_blank\"\n            className=\"badge badge--secondary\"\n            style={{minWidth: \"65px\", textAlign: \"center\"}}\n            title=\"View commit...\">\n            <i className=\"feather icon-git-commit\"></i> {commit.sha.slice(0,5)}\n          </a>\n        )}\n      </div>\n      <AnchoredH4 id={commit.sha}>\n        <ScopeTags scopes={commit.scopes} />\n        {commit.description}\n      </AnchoredH4>\n    </li>\n  );\n}\n\nfunction Commits({commits, groupBy, setSearchTerm}) {\n  if (groupBy) {\n    const groupedCommits = _(commits).sortBy(commit => commit.type).groupBy(groupBy).value();\n    const groupKeys = sortCommitTypes(Object.keys(groupedCommits));\n\n    return(\n      <ul className=\"connected-list connected-list--clean\">\n        {groupKeys.map((groupKey, catIdx) => (\n          <li key={catIdx}>\n            <AnchoredH3 id={groupKey}>{pluralize(commitTypeName(groupKey), groupedCommits[groupKey].length, true)}</AnchoredH3>\n            <ul className=\"connected-list connected-list--compact connected-list--blend connected-list--hover\">\n              {groupedCommits[groupKey].map((commit, commitIdx) => (\n                <Commit key={commitIdx} commit={commit} setSearchTerm={setSearchTerm} />\n              ))}\n            </ul>\n          </li>\n        ))}\n      </ul>\n    );\n  } else {\n    return (\n      <div>\n        {commits.length}\n      </div>\n    );\n  }\n}\n\nfunction Changelog({version}) {\n  const context = useDocusaurusContext();\n  const {siteConfig = {}} = context;\n  const {metadata: {releases}} = siteConfig.customFields;\n  const commits = _.flatMap(releases, (release => (\n    release.commits.map(commit => {\n      commit.version = release.version;\n      return commit\n    })\n  )));\n\n  //\n  // State\n  //\n\n  const [groupBy, setGroupBy] = useState('type');\n  const [onlyTypes, setOnlyTypes] = useState(new Set(DEFAULT_TYPES));\n  const [searchTerm, setSearchTerm] = useState(null);\n  const [onlyversion, setVersion] = useState(version);\n\n  //\n  // Base commits\n  //\n\n  let baseCommits = commits.slice(0);\n\n  if (onlyversion) {\n    baseCommits = baseCommits.filter(commit => (\n      commit.version == onlyversion\n    ));\n  }\n\n  //\n  // Filtered commits\n  //\n\n  let filteredCommits = baseCommits;\n\n  if (onlyTypes.size > 0) {\n    filteredCommits = filteredCommits.filter(commit => onlyTypes.has(commit.type) );\n  }\n\n  if (searchTerm) {\n    filteredCommits = filteredCommits.filter(commit => (\n      commit.message.toLowerCase().includes(searchTerm.toLowerCase())\n    ));\n  }\n\n  if (onlyversion) {\n    filteredCommits = filteredCommits.filter(commit => (\n      commit.version == onlyversion\n    ));\n  }\n\n  //\n  // Filter Options\n  //\n\n  const types = new Set(\n    _(commits).\n      map(commit => commit.type).\n      uniq().\n      compact().\n      sort().\n      value());\n\n  //\n  // Render\n  //\n\n  return (\n    <div>\n      {baseCommits.length > 5 ?\n        (<div className=\"filters filters--narrow\">\n          <div className=\"search\">\n            <span className=\"search--result-count\">{filteredCommits.length} items</span>\n            <input\n              type=\"text\"\n              onChange={(event) => setSearchTerm(event.currentTarget.value)}\n              placeholder=\"🔍 Search by type, component name, or title...\"\n              className=\"input--text input--lg\"\n              value={searchTerm || ''} />\n          </div>\n          <div className=\"filter\">\n            <div className=\"filter--choices\">\n              <CheckboxList\n                name=\"type\"\n                values={types}\n                currentState={onlyTypes}\n                setState={setOnlyTypes} />\n            </div>\n          </div>\n        </div>) :\n        null}\n      {filteredCommits.length > 0 ?\n        <Commits\n          commits={filteredCommits}\n          groupBy={groupBy}\n          setSearchTerm={setSearchTerm}\n          types={types} /> :\n        <Empty text=\"no commits found\" />}\n    </div>\n  );\n}\n\nexport default Changelog;\n"]}]}