{"remainingRequest":"/Users/Yun/vector/website/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/Yun/vector/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--10-2!/Users/Yun/vector/website/plugins/highlights/markdownLoader.js??ref--10-3!/Users/Yun/vector/website/highlights/2019-10-21-require-encoding-option-for-console-and-file-sinks.md?truncated=true","dependencies":[{"path":"/Users/Yun/vector/website/highlights/2019-10-21-require-encoding-option-for-console-and-file-sinks.md","mtime":1594780808676},{"path":"/Users/Yun/vector/website/.docusaurus/highlights/site-highlights-2019-10-21-require-encoding-option-for-console-and-file-sinks-md-5f0.json","mtime":1594781224002},{"path":"/Users/Yun/vector/website/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/vector/website/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/vector/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/vector/website/plugins/highlights/markdownLoader.js","mtime":1594780808733}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL1l1bi92ZWN0b3Ivd2Vic2l0ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgY29uc3QgZnJvbnRNYXR0ZXI9e2xhc3RfbW9kaWZpZWRfb246JzIwMjAtMDctMTMnLCRzY2hlbWE6Jy8ubWV0YS8uc2NoZW1hcy9oaWdobGlnaHRzLmpzb24nLHRpdGxlOidSZXF1aXJlIGBlbmNvZGluZ2Agb3B0aW9uIGZvciBjb25zb2xlIGFuZCBmaWxlIHNpbmtzJyxkZXNjcmlwdGlvbjonVGhlIGBlbmNvZGluZ2Agb3B0aW9uIGlzIG5vdyByZXF1aXJlZCBmb3IgdGhlc2Ugc2lua3MnLGF1dGhvcl9naXRodWI6J2h0dHBzOi8vZ2l0aHViLmNvbS9iaW5hcnlsb2dpYycscHJfbnVtYmVyczpbMTAzM10scmVsZWFzZTonMC42LjAnLGhpZGVfb25fcmVsZWFzZV9ub3RlczpmYWxzZSx0YWdzOlsndHlwZTogYnJlYWtpbmcgY2hhbmdlJywnZG9tYWluOiBzaW5rcycsJ3Npbms6IGNvbnNvbGUnLCdzaW5rOiBmaWxlJ119O2V4cG9ydCBjb25zdCBtZXRhZGF0YT17ImRhdGUiOiIyMDE5LTEwLTIxVDAwOjAwOjAwLjAwMFoiLCJkZXNjcmlwdGlvbiI6IlRoZSBgZW5jb2RpbmdgIG9wdGlvbiBpcyBub3cgcmVxdWlyZWQgZm9yIHRoZXNlIHNpbmtzIiwicGVybWFsaW5rIjoiL2hpZ2hsaWdodHMvMjAxOS0xMC0yMS1yZXF1aXJlLWVuY29kaW5nLW9wdGlvbi1mb3ItY29uc29sZS1hbmQtZmlsZS1zaW5rcyIsInJlYWRpbmdUaW1lIjoiMSBtaW4gcmVhZCIsInNvdXJjZSI6IkBzaXRlL2hpZ2hsaWdodHMvMjAxOS0xMC0yMS1yZXF1aXJlLWVuY29kaW5nLW9wdGlvbi1mb3ItY29uc29sZS1hbmQtZmlsZS1zaW5rcy5tZCIsInRhZ3MiOlt7ImxhYmVsIjoidHlwZTogYnJlYWtpbmcgY2hhbmdlIiwicGVybWFsaW5rIjoiL2hpZ2hsaWdodHMvdGFncy90eXBlLWJyZWFraW5nLWNoYW5nZSJ9LHsibGFiZWwiOiJkb21haW46IHNpbmtzIiwicGVybWFsaW5rIjoiL2hpZ2hsaWdodHMvdGFncy9kb21haW4tc2lua3MifSx7ImxhYmVsIjoic2luazogY29uc29sZSIsInBlcm1hbGluayI6Ii9oaWdobGlnaHRzL3RhZ3Mvc2luay1jb25zb2xlIn0seyJsYWJlbCI6InNpbms6IGZpbGUiLCJwZXJtYWxpbmsiOiIvaGlnaGxpZ2h0cy90YWdzL3NpbmstZmlsZSJ9XSwidGl0bGUiOiJSZXF1aXJlIGBlbmNvZGluZ2Agb3B0aW9uIGZvciBjb25zb2xlIGFuZCBmaWxlIHNpbmtzIiwidHJ1bmNhdGVkIjpmYWxzZSwicHJldkl0ZW0iOnsidGl0bGUiOiJBUk12NyAmIEFSTTY0IFN1cHBvcnQgb24gTGludXgiLCJwZXJtYWxpbmsiOiIvaGlnaGxpZ2h0cy8yMDE5LTExLTE5LWFybS1zdXBwb3J0LW9uLWxpbnV4In19Oy8qIEBqc3ggbWR4ICovZXhwb3J0IGNvbnN0IHJpZ2h0VG9jPVt7dmFsdWU6J1VwZ3JhZGUgR3VpZGUnLGlkOid1cGdyYWRlLWd1aWRlJyxjaGlsZHJlbjpbXX1dO2NvbnN0IG1ha2VTaG9ydGNvZGU9bmFtZT0+ZnVuY3Rpb24gTURYRGVmYXVsdFNob3J0Y29kZShwcm9wcyl7Y29uc29sZS53YXJuKCJDb21wb25lbnQgIituYW1lKyIgd2FzIG5vdCBpbXBvcnRlZCwgZXhwb3J0ZWQsIG9yIHByb3ZpZGVkIGJ5IE1EWFByb3ZpZGVyIGFzIGdsb2JhbCBzY29wZSIpO3JldHVybiBtZHgoImRpdiIscHJvcHMpO307Y29uc3QgbGF5b3V0UHJvcHM9e3JpZ2h0VG9jfTtjb25zdCBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe2NvbXBvbmVudHMsLi4ucHJvcHN9KXtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoInAiLG51bGwsYFRoZSBkeW5hbWljIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBlbmNvZGluZ2ApLGAgY29uY2VwdCBpbiBWZWN0b3Igd2FzIGNvbmZ1c2luZyB1c2Vycywgc28gd2UndmUgbWFkZQppdCByZXF1aXJlZCBhbmQgZXhwbGljaXQuIFNpbXBseSBhZGQgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYGVuY29kaW5nID0gImpzb24iYCksYCB0byB5b3VyIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBjb25zb2xlYCksYCBhbmQKYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYGZpbGVgKSxgIHNpbmtzLmApLG1keCgiaDIiLHsiaWQiOiJ1cGdyYWRlLWd1aWRlIn0sYFVwZ3JhZGUgR3VpZGVgKSxtZHgoInAiLG51bGwsYE1ha2UgdGhlIGZvbGxvd2luZyBjaGFuZ2VzIGluIHlvdXIgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYHZlY3Rvci50b21sYCksYCBmaWxlOmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtZGlmZiIsIm1ldGFzdHJpbmciOiJ0aXRsZT1cInZlY3Rvci50b21sXCIiLCJ0aXRsZSI6IlwidmVjdG9yLnRvbWxcIiJ9KSxgIFtzaW5rcy5jb25zb2xlXQogICB0eXBlID0gImNvbnNvbGUiCisgIGVuY29kaW5nID0gImpzb24iCgogW3NpbmtzLmZpbGVdCiAgIHR5cGUgPSAiZmlsZSIKKyAgZW5jb2RpbmcgPSAianNvbiIKYCkpLG1keCgicCIsbnVsbCxgVGhhdCdzIGl0IWApKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/Yun/vector/website/highlights/2019-10-21-require-encoding-option-for-console-and-file-sinks.md"],"names":["React","mdx","frontMatter","last_modified_on","$schema","title","description","author_github","pr_numbers","release","hide_on_release_notes","tags","metadata","rightToc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"gGACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,gBAAgB,CAAE,YADU,CAE5BC,OAAO,CAAE,iCAFmB,CAG5BC,KAAK,CAAE,sDAHqB,CAI5BC,WAAW,CAAE,uDAJe,CAK5BC,aAAa,CAAE,gCALa,CAM5BC,UAAU,CAAE,CACX,IADW,CANgB,CAS5BC,OAAO,CAAE,OATmB,CAU5BC,qBAAqB,CAAE,KAVK,CAW5BC,IAAI,CAAE,CACL,uBADK,CAEL,eAFK,CAGL,eAHK,CAIL,YAJK,CAXsB,CAApB,CAkBT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,OAAQ,0BADc,CAEtB,cAAe,uDAFO,CAGtB,YAAa,2EAHS,CAItB,cAAe,YAJO,CAKtB,SAAU,mFALY,CAMtB,OAAQ,CACN,CACE,QAAS,uBADX,CAEE,YAAa,uCAFf,CADM,CAKN,CACE,QAAS,eADX,CAEE,YAAa,+BAFf,CALM,CASN,CACE,QAAS,eADX,CAEE,YAAa,+BAFf,CATM,CAaN,CACE,QAAS,YADX,CAEE,YAAa,4BAFf,CAbM,CANc,CAwBtB,QAAS,sDAxBa,CAyBtB,YAAa,KAzBS,CA0BtB,WAAY,CACV,QAAS,gCADC,CAEV,YAAa,6CAFH,CA1BU,CAAjB,CA+BL,cAEF,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CAAC,CACvBC,KAAK,CAAE,eADgB,CAEvBC,EAAE,CAAE,eAFmB,CAGvBC,QAAQ,CAAE,EAHa,CAAD,CAAjB,CAKP,KAAMC,CAAAA,aAAa,CAAGC,IAAI,EAAI,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHD,CAKA,KAAMG,CAAAA,WAAW,CAAG,CAClBV,QADkB,CAApB,CAGA,KAAMW,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGN,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,aAAK,cAAL,CAAmB,kBAAY,UAAU,CAAC,GAAvB,EAA6B,UAA7B,CAAnB,CAAyE;sCAAzE,CACmC,kBAAY,UAAU,CAAC,GAAvB,EAA6B,mBAA7B,CADnC,CACkG,WADlG,CAC6G,kBAAY,UAAU,CAAC,GAAvB,EAA6B,SAA7B,CAD7G,CACkK;CADlK,CAEF,kBAAY,UAAU,CAAC,GAAvB,EAA6B,MAA7B,CAFE,CAEgD,SAFhD,CAFK,CAKL,SAAQ,CACN,KAAM,eADA,CAAR,CAEK,eAFL,CALK,CAQL,aAAK,qCAAL,CAA0C,kBAAY,UAAU,CAAC,GAAvB,EAA6B,aAA7B,CAA1C,CAAmG,QAAnG,CARK,CASL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAE5B,aAAc,uBAFc,CAG5B,QAAS,iBAHmB,CAA3B,EAIE;;;;;;;CAJF,CAAL,CATK,CAqBL,aAAK,YAAL,CArBK,CAAP,CAuBD,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tlast_modified_on: '2020-07-13',\n\t$schema: '/.meta/.schemas/highlights.json',\n\ttitle: 'Require `encoding` option for console and file sinks',\n\tdescription: 'The `encoding` option is now required for these sinks',\n\tauthor_github: 'https://github.com/binarylogic',\n\tpr_numbers: [\n\t\t1033\n\t],\n\trelease: '0.6.0',\n\thide_on_release_notes: false,\n\ttags: [\n\t\t'type: breaking change',\n\t\t'domain: sinks',\n\t\t'sink: console',\n\t\t'sink: file'\n\t]\n};\nexport const metadata = {\n  \"date\": \"2019-10-21T00:00:00.000Z\",\n  \"description\": \"The `encoding` option is now required for these sinks\",\n  \"permalink\": \"/highlights/2019-10-21-require-encoding-option-for-console-and-file-sinks\",\n  \"readingTime\": \"1 min read\",\n  \"source\": \"@site/highlights/2019-10-21-require-encoding-option-for-console-and-file-sinks.md\",\n  \"tags\": [\n    {\n      \"label\": \"type: breaking change\",\n      \"permalink\": \"/highlights/tags/type-breaking-change\"\n    },\n    {\n      \"label\": \"domain: sinks\",\n      \"permalink\": \"/highlights/tags/domain-sinks\"\n    },\n    {\n      \"label\": \"sink: console\",\n      \"permalink\": \"/highlights/tags/sink-console\"\n    },\n    {\n      \"label\": \"sink: file\",\n      \"permalink\": \"/highlights/tags/sink-file\"\n    }\n  ],\n  \"title\": \"Require `encoding` option for console and file sinks\",\n  \"truncated\": false,\n  \"prevItem\": {\n    \"title\": \"ARMv7 & ARM64 Support on Linux\",\n    \"permalink\": \"/highlights/2019-11-19-arm-support-on-linux\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'Upgrade Guide',\n  id: 'upgrade-guide',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`The dynamic `}<inlineCode parentName=\"p\">{`encoding`}</inlineCode>{` concept in Vector was confusing users, so we've made\nit required and explicit. Simply add `}<inlineCode parentName=\"p\">{`encoding = \"json\"`}</inlineCode>{` to your `}<inlineCode parentName=\"p\">{`console`}</inlineCode>{` and\n`}<inlineCode parentName=\"p\">{`file`}</inlineCode>{` sinks.`}</p>\n    <h2 {...{\n      \"id\": \"upgrade-guide\"\n    }}>{`Upgrade Guide`}</h2>\n    <p>{`Make the following changes in your `}<inlineCode parentName=\"p\">{`vector.toml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\",\n        \"metastring\": \"title=\\\"vector.toml\\\"\",\n        \"title\": \"\\\"vector.toml\\\"\"\n      }}>{` [sinks.console]\n   type = \"console\"\n+  encoding = \"json\"\n\n [sinks.file]\n   type = \"file\"\n+  encoding = \"json\"\n`}</code></pre>\n    <p>{`That's it!`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}