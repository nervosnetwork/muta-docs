{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--10-2!/Users/Yun/Desktop/vdocs/website/plugins/highlights/markdownLoader.js??ref--10-3!/Users/Yun/Desktop/vdocs/website/highlights/2019-10-21-require-encoding-option-for-console-and-file-sinks.md","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/highlights/2019-10-21-require-encoding-option-for-console-and-file-sinks.md","mtime":1594780808676},{"path":"/Users/Yun/Desktop/vdocs/website/.docusaurus/highlights/site-highlights-2019-10-21-require-encoding-option-for-console-and-file-sinks-md-5f0.json","mtime":1594980991894},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/Desktop/vdocs/website/plugins/highlights/markdownLoader.js","mtime":1594780808733}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL1l1bi9EZXNrdG9wL3Zkb2NzL3dlYnNpdGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXtsYXN0X21vZGlmaWVkX29uOicyMDIwLTA3LTEzJywkc2NoZW1hOicvLm1ldGEvLnNjaGVtYXMvaGlnaGxpZ2h0cy5qc29uJyx0aXRsZTonUmVxdWlyZSBgZW5jb2RpbmdgIG9wdGlvbiBmb3IgY29uc29sZSBhbmQgZmlsZSBzaW5rcycsZGVzY3JpcHRpb246J1RoZSBgZW5jb2RpbmdgIG9wdGlvbiBpcyBub3cgcmVxdWlyZWQgZm9yIHRoZXNlIHNpbmtzJyxhdXRob3JfZ2l0aHViOidodHRwczovL2dpdGh1Yi5jb20vYmluYXJ5bG9naWMnLHByX251bWJlcnM6WzEwMzNdLHJlbGVhc2U6JzAuNi4wJyxoaWRlX29uX3JlbGVhc2Vfbm90ZXM6ZmFsc2UsdGFnczpbJ3R5cGU6IGJyZWFraW5nIGNoYW5nZScsJ2RvbWFpbjogc2lua3MnLCdzaW5rOiBjb25zb2xlJywnc2luazogZmlsZSddfTtleHBvcnQgY29uc3QgbWV0YWRhdGE9eyJkYXRlIjoiMjAxOS0xMC0yMVQwMDowMDowMC4wMDBaIiwiZGVzY3JpcHRpb24iOiJUaGUgYGVuY29kaW5nYCBvcHRpb24gaXMgbm93IHJlcXVpcmVkIGZvciB0aGVzZSBzaW5rcyIsInBlcm1hbGluayI6Ii9oaWdobGlnaHRzLzIwMTktMTAtMjEtcmVxdWlyZS1lbmNvZGluZy1vcHRpb24tZm9yLWNvbnNvbGUtYW5kLWZpbGUtc2lua3MiLCJyZWFkaW5nVGltZSI6IjEgbWluIHJlYWQiLCJzb3VyY2UiOiJAc2l0ZS9oaWdobGlnaHRzLzIwMTktMTAtMjEtcmVxdWlyZS1lbmNvZGluZy1vcHRpb24tZm9yLWNvbnNvbGUtYW5kLWZpbGUtc2lua3MubWQiLCJ0YWdzIjpbeyJsYWJlbCI6InR5cGU6IGJyZWFraW5nIGNoYW5nZSIsInBlcm1hbGluayI6Ii9oaWdobGlnaHRzL3RhZ3MvdHlwZS1icmVha2luZy1jaGFuZ2UifSx7ImxhYmVsIjoiZG9tYWluOiBzaW5rcyIsInBlcm1hbGluayI6Ii9oaWdobGlnaHRzL3RhZ3MvZG9tYWluLXNpbmtzIn0seyJsYWJlbCI6InNpbms6IGNvbnNvbGUiLCJwZXJtYWxpbmsiOiIvaGlnaGxpZ2h0cy90YWdzL3NpbmstY29uc29sZSJ9LHsibGFiZWwiOiJzaW5rOiBmaWxlIiwicGVybWFsaW5rIjoiL2hpZ2hsaWdodHMvdGFncy9zaW5rLWZpbGUifV0sInRpdGxlIjoiUmVxdWlyZSBgZW5jb2RpbmdgIG9wdGlvbiBmb3IgY29uc29sZSBhbmQgZmlsZSBzaW5rcyIsInRydW5jYXRlZCI6ZmFsc2UsInByZXZJdGVtIjp7InRpdGxlIjoiQVJNdjcgJiBBUk02NCBTdXBwb3J0IG9uIExpbnV4IiwicGVybWFsaW5rIjoiL2hpZ2hsaWdodHMvMjAxOS0xMS0xOS1hcm0tc3VwcG9ydC1vbi1saW51eCJ9fTsvKiBAanN4IG1keCAqL2V4cG9ydCBjb25zdCByaWdodFRvYz1be3ZhbHVlOidVcGdyYWRlIEd1aWRlJyxpZDondXBncmFkZS1ndWlkZScsY2hpbGRyZW46W119XTtjb25zdCBtYWtlU2hvcnRjb2RlPW5hbWU9PmZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O2NvbnN0IGxheW91dFByb3BzPXtyaWdodFRvY307Y29uc3QgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtjb21wb25lbnRzLC4uLnByb3BzfSl7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJwIixudWxsLGBUaGUgZHluYW1pYyBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgZW5jb2RpbmdgKSxgIGNvbmNlcHQgaW4gVmVjdG9yIHdhcyBjb25mdXNpbmcgdXNlcnMsIHNvIHdlJ3ZlIG1hZGUKaXQgcmVxdWlyZWQgYW5kIGV4cGxpY2l0LiBTaW1wbHkgYWRkIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBlbmNvZGluZyA9ICJqc29uImApLGAgdG8geW91ciBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgY29uc29sZWApLGAgYW5kCmAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBmaWxlYCksYCBzaW5rcy5gKSxtZHgoImgyIix7ImlkIjoidXBncmFkZS1ndWlkZSJ9LGBVcGdyYWRlIEd1aWRlYCksbWR4KCJwIixudWxsLGBNYWtlIHRoZSBmb2xsb3dpbmcgY2hhbmdlcyBpbiB5b3VyIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGB2ZWN0b3IudG9tbGApLGAgZmlsZTpgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWRpZmYiLCJtZXRhc3RyaW5nIjoidGl0bGU9XCJ2ZWN0b3IudG9tbFwiIiwidGl0bGUiOiJcInZlY3Rvci50b21sXCIifSksYCBbc2lua3MuY29uc29sZV0KICAgdHlwZSA9ICJjb25zb2xlIgorICBlbmNvZGluZyA9ICJqc29uIgoKIFtzaW5rcy5maWxlXQogICB0eXBlID0gImZpbGUiCisgIGVuY29kaW5nID0gImpzb24iCmApKSxtZHgoInAiLG51bGwsYFRoYXQncyBpdCFgKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/Yun/Desktop/vdocs/website/highlights/2019-10-21-require-encoding-option-for-console-and-file-sinks.md"],"names":["React","mdx","frontMatter","last_modified_on","$schema","title","description","author_github","pr_numbers","release","hide_on_release_notes","tags","metadata","rightToc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"uGACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,gBAAgB,CAAE,YADU,CAE5BC,OAAO,CAAE,iCAFmB,CAG5BC,KAAK,CAAE,sDAHqB,CAI5BC,WAAW,CAAE,uDAJe,CAK5BC,aAAa,CAAE,gCALa,CAM5BC,UAAU,CAAE,CACX,IADW,CANgB,CAS5BC,OAAO,CAAE,OATmB,CAU5BC,qBAAqB,CAAE,KAVK,CAW5BC,IAAI,CAAE,CACL,uBADK,CAEL,eAFK,CAGL,eAHK,CAIL,YAJK,CAXsB,CAApB,CAkBT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,OAAQ,0BADc,CAEtB,cAAe,uDAFO,CAGtB,YAAa,2EAHS,CAItB,cAAe,YAJO,CAKtB,SAAU,mFALY,CAMtB,OAAQ,CACN,CACE,QAAS,uBADX,CAEE,YAAa,uCAFf,CADM,CAKN,CACE,QAAS,eADX,CAEE,YAAa,+BAFf,CALM,CASN,CACE,QAAS,eADX,CAEE,YAAa,+BAFf,CATM,CAaN,CACE,QAAS,YADX,CAEE,YAAa,4BAFf,CAbM,CANc,CAwBtB,QAAS,sDAxBa,CAyBtB,YAAa,KAzBS,CA0BtB,WAAY,CACV,QAAS,gCADC,CAEV,YAAa,6CAFH,CA1BU,CAAjB,CA+BL,cAEF,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CAAC,CACvBC,KAAK,CAAE,eADgB,CAEvBC,EAAE,CAAE,eAFmB,CAGvBC,QAAQ,CAAE,EAHa,CAAD,CAAjB,CAKP,KAAMC,CAAAA,aAAa,CAAGC,IAAI,EAAI,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHD,CAKA,KAAMG,CAAAA,WAAW,CAAG,CAClBV,QADkB,CAApB,CAGA,KAAMW,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGN,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,aAAK,cAAL,CAAmB,kBAAY,UAAU,CAAC,GAAvB,EAA6B,UAA7B,CAAnB,CAAyE;sCAAzE,CACmC,kBAAY,UAAU,CAAC,GAAvB,EAA6B,mBAA7B,CADnC,CACkG,WADlG,CAC6G,kBAAY,UAAU,CAAC,GAAvB,EAA6B,SAA7B,CAD7G,CACkK;CADlK,CAEF,kBAAY,UAAU,CAAC,GAAvB,EAA6B,MAA7B,CAFE,CAEgD,SAFhD,CAFK,CAKL,SAAQ,CACN,KAAM,eADA,CAAR,CAEK,eAFL,CALK,CAQL,aAAK,qCAAL,CAA0C,kBAAY,UAAU,CAAC,GAAvB,EAA6B,aAA7B,CAA1C,CAAmG,QAAnG,CARK,CASL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAE5B,aAAc,uBAFc,CAG5B,QAAS,iBAHmB,CAA3B,EAIE;;;;;;;CAJF,CAAL,CATK,CAqBL,aAAK,YAAL,CArBK,CAAP,CAuBD,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tlast_modified_on: '2020-07-13',\n\t$schema: '/.meta/.schemas/highlights.json',\n\ttitle: 'Require `encoding` option for console and file sinks',\n\tdescription: 'The `encoding` option is now required for these sinks',\n\tauthor_github: 'https://github.com/binarylogic',\n\tpr_numbers: [\n\t\t1033\n\t],\n\trelease: '0.6.0',\n\thide_on_release_notes: false,\n\ttags: [\n\t\t'type: breaking change',\n\t\t'domain: sinks',\n\t\t'sink: console',\n\t\t'sink: file'\n\t]\n};\nexport const metadata = {\n  \"date\": \"2019-10-21T00:00:00.000Z\",\n  \"description\": \"The `encoding` option is now required for these sinks\",\n  \"permalink\": \"/highlights/2019-10-21-require-encoding-option-for-console-and-file-sinks\",\n  \"readingTime\": \"1 min read\",\n  \"source\": \"@site/highlights/2019-10-21-require-encoding-option-for-console-and-file-sinks.md\",\n  \"tags\": [\n    {\n      \"label\": \"type: breaking change\",\n      \"permalink\": \"/highlights/tags/type-breaking-change\"\n    },\n    {\n      \"label\": \"domain: sinks\",\n      \"permalink\": \"/highlights/tags/domain-sinks\"\n    },\n    {\n      \"label\": \"sink: console\",\n      \"permalink\": \"/highlights/tags/sink-console\"\n    },\n    {\n      \"label\": \"sink: file\",\n      \"permalink\": \"/highlights/tags/sink-file\"\n    }\n  ],\n  \"title\": \"Require `encoding` option for console and file sinks\",\n  \"truncated\": false,\n  \"prevItem\": {\n    \"title\": \"ARMv7 & ARM64 Support on Linux\",\n    \"permalink\": \"/highlights/2019-11-19-arm-support-on-linux\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'Upgrade Guide',\n  id: 'upgrade-guide',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`The dynamic `}<inlineCode parentName=\"p\">{`encoding`}</inlineCode>{` concept in Vector was confusing users, so we've made\nit required and explicit. Simply add `}<inlineCode parentName=\"p\">{`encoding = \"json\"`}</inlineCode>{` to your `}<inlineCode parentName=\"p\">{`console`}</inlineCode>{` and\n`}<inlineCode parentName=\"p\">{`file`}</inlineCode>{` sinks.`}</p>\n    <h2 {...{\n      \"id\": \"upgrade-guide\"\n    }}>{`Upgrade Guide`}</h2>\n    <p>{`Make the following changes in your `}<inlineCode parentName=\"p\">{`vector.toml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\",\n        \"metastring\": \"title=\\\"vector.toml\\\"\",\n        \"title\": \"\\\"vector.toml\\\"\"\n      }}>{` [sinks.console]\n   type = \"console\"\n+  encoding = \"json\"\n\n [sinks.file]\n   type = \"file\"\n+  encoding = \"json\"\n`}</code></pre>\n    <p>{`That's it!`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}