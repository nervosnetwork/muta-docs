{"remainingRequest":"/Users/Yun/vector/website/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/Yun/vector/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--10-2!/Users/Yun/vector/website/plugins/highlights/markdownLoader.js??ref--10-3!/Users/Yun/vector/website/highlights/2020-01-12-use-comma-delim-server-list-instead-of-an-array.md","dependencies":[{"path":"/Users/Yun/vector/website/highlights/2020-01-12-use-comma-delim-server-list-instead-of-an-array.md","mtime":1594780808680},{"path":"/Users/Yun/vector/website/.docusaurus/highlights/site-highlights-2020-01-12-use-comma-delim-server-list-instead-of-an-array-md-bb5.json","mtime":1594781224001},{"path":"/Users/Yun/vector/website/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/vector/website/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/vector/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/vector/website/plugins/highlights/markdownLoader.js","mtime":1594780808733}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL1l1bi92ZWN0b3Ivd2Vic2l0ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgY29uc3QgZnJvbnRNYXR0ZXI9e2xhc3RfbW9kaWZpZWRfb246JzIwMjAtMDctMTMnLCRzY2hlbWE6Jy8ubWV0YS8uc2NoZW1hcy9oaWdobGlnaHRzLmpzb24nLHRpdGxlOidVc2UgY29tbWEgZGVsaW0gc2VydmVyIGxpc3QgaW4gYGthZmthYCBzaW5rJyxkZXNjcmlwdGlvbjonVGhpcyBjaGFuZ2UgYWNoaWV2ZSBjb25zaXN0ZW5jeSB3aXRoIG91ciBga2Fma2FgIHNvdXJjZSBhbmQgb3RoZXIgS2Fma2EgY2xpZW50cycsYXV0aG9yX2dpdGh1YjonaHR0cHM6Ly9naXRodWIuY29tL2JpbmFyeWxvZ2ljJyxwcl9udW1iZXJzOlsxNTAyXSxyZWxlYXNlOicwLjcuMCcsaGlkZV9vbl9yZWxlYXNlX25vdGVzOmZhbHNlLHRhZ3M6Wyd0eXBlOiBicmVha2luZyBjaGFuZ2UnLCdkb21haW46IHNpbmtzJywnc2luazoga2Fma2EnXX07ZXhwb3J0IGNvbnN0IG1ldGFkYXRhPXsiZGF0ZSI6IjIwMjAtMDEtMTJUMDA6MDA6MDAuMDAwWiIsImRlc2NyaXB0aW9uIjoiVGhpcyBjaGFuZ2UgYWNoaWV2ZSBjb25zaXN0ZW5jeSB3aXRoIG91ciBga2Fma2FgIHNvdXJjZSBhbmQgb3RoZXIgS2Fma2EgY2xpZW50cyIsInBlcm1hbGluayI6Ii9oaWdobGlnaHRzLzIwMjAtMDEtMTItdXNlLWNvbW1hLWRlbGltLXNlcnZlci1saXN0LWluc3RlYWQtb2YtYW4tYXJyYXkiLCJyZWFkaW5nVGltZSI6IjEgbWluIHJlYWQiLCJzb3VyY2UiOiJAc2l0ZS9oaWdobGlnaHRzLzIwMjAtMDEtMTItdXNlLWNvbW1hLWRlbGltLXNlcnZlci1saXN0LWluc3RlYWQtb2YtYW4tYXJyYXkubWQiLCJ0YWdzIjpbeyJsYWJlbCI6InR5cGU6IGJyZWFraW5nIGNoYW5nZSIsInBlcm1hbGluayI6Ii9oaWdobGlnaHRzL3RhZ3MvdHlwZS1icmVha2luZy1jaGFuZ2UifSx7ImxhYmVsIjoiZG9tYWluOiBzaW5rcyIsInBlcm1hbGluayI6Ii9oaWdobGlnaHRzL3RhZ3MvZG9tYWluLXNpbmtzIn0seyJsYWJlbCI6InNpbms6IGthZmthIiwicGVybWFsaW5rIjoiL2hpZ2hsaWdodHMvdGFncy9zaW5rLWthZmthIn1dLCJ0aXRsZSI6IlVzZSBjb21tYSBkZWxpbSBzZXJ2ZXIgbGlzdCBpbiBga2Fma2FgIHNpbmsiLCJ0cnVuY2F0ZWQiOmZhbHNlLCJwcmV2SXRlbSI6eyJ0aXRsZSI6IlNpbmsgb3B0aW9ucyBoYXZlIGJlZW4gcmVmYWN0b3JlZCIsInBlcm1hbGluayI6Ii9oaWdobGlnaHRzLzIwMjAtMDEtMTItcmVxdWVzdC1vcHRpb25zLXJlZmFjdG9yZWQifSwibmV4dEl0ZW0iOnsidGl0bGUiOiJOZXcgUHJvbWV0aGV1cyBTb3VyY2UiLCJwZXJtYWxpbmsiOiIvaGlnaGxpZ2h0cy8yMDIwLTAxLTA3LXByb21ldGhldXMtc291cmNlIn19Oy8qIEBqc3ggbWR4ICovZXhwb3J0IGNvbnN0IHJpZ2h0VG9jPVt7dmFsdWU6J1VwZ3JhZGUgR3VpZGUnLGlkOid1cGdyYWRlLWd1aWRlJyxjaGlsZHJlbjpbXX1dO2NvbnN0IG1ha2VTaG9ydGNvZGU9bmFtZT0+ZnVuY3Rpb24gTURYRGVmYXVsdFNob3J0Y29kZShwcm9wcyl7Y29uc29sZS53YXJuKCJDb21wb25lbnQgIituYW1lKyIgd2FzIG5vdCBpbXBvcnRlZCwgZXhwb3J0ZWQsIG9yIHByb3ZpZGVkIGJ5IE1EWFByb3ZpZGVyIGFzIGdsb2JhbCBzY29wZSIpO3JldHVybiBtZHgoImRpdiIscHJvcHMpO307Y29uc3QgbGF5b3V0UHJvcHM9e3JpZ2h0VG9jfTtjb25zdCBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe2NvbXBvbmVudHMsLi4ucHJvcHN9KXtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoInAiLG51bGwsYFRoZSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxga2Fma2FgKSxgIHNpbmsgZmllbGQgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYGJvb3RzdHJhcF9zZXJ2ZXJzYCksYCBoYXMgYmVlbiBjaGFuZ2VkIGZyb20gYW4gYXJyYXkgdG8gYQpzdHJpbmcsIGV4cGVjdGluZyBhIGNvbW1hIHNlcGFyYXRlZCBsaXN0IG9mIGJvb3RzdHJhcCBzZXJ2ZXJzIHNpbWlsYXIgdG8gdGhlCmAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBrYWZrYWApLGAgc291cmNlLmApLG1keCgiaDIiLHsiaWQiOiJ1cGdyYWRlLWd1aWRlIn0sYFVwZ3JhZGUgR3VpZGVgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWRpZmYiLCJtZXRhc3RyaW5nIjoidGl0bGU9XCJ2ZWN0b3IudG9tbFwiIiwidGl0bGUiOiJcInZlY3Rvci50b21sXCIifSksYCBbc2lua3MubXlfc2lua19pZF0KICAgdHlwZSA9ICJrYWZrYSIKICAgaW5wdXRzID0gWyJteS1zb3VyY2UtaWQiXQotICBib290c3RyYXBfc2VydmVycyA9IFsiMTAuMTQuMjIuMTIzOjkwOTIiLCAiMTAuMTQuMjMuMzMyOjkwOTIiXQorICBib290c3RyYXBfc2VydmVycyA9ICIxMC4xNC4yMi4xMjM6OTA5MiwxMC4xNC4yMy4zMzI6OTA5MiIKYCkpKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/Yun/vector/website/highlights/2020-01-12-use-comma-delim-server-list-instead-of-an-array.md"],"names":["React","mdx","frontMatter","last_modified_on","$schema","title","description","author_github","pr_numbers","release","hide_on_release_notes","tags","metadata","rightToc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"gGACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,gBAAgB,CAAE,YADU,CAE5BC,OAAO,CAAE,iCAFmB,CAG5BC,KAAK,CAAE,6CAHqB,CAI5BC,WAAW,CAAE,iFAJe,CAK5BC,aAAa,CAAE,gCALa,CAM5BC,UAAU,CAAE,CACX,IADW,CANgB,CAS5BC,OAAO,CAAE,OATmB,CAU5BC,qBAAqB,CAAE,KAVK,CAW5BC,IAAI,CAAE,CACL,uBADK,CAEL,eAFK,CAGL,aAHK,CAXsB,CAApB,CAiBT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,OAAQ,0BADc,CAEtB,cAAe,iFAFO,CAGtB,YAAa,wEAHS,CAItB,cAAe,YAJO,CAKtB,SAAU,gFALY,CAMtB,OAAQ,CACN,CACE,QAAS,uBADX,CAEE,YAAa,uCAFf,CADM,CAKN,CACE,QAAS,eADX,CAEE,YAAa,+BAFf,CALM,CASN,CACE,QAAS,aADX,CAEE,YAAa,6BAFf,CATM,CANc,CAoBtB,QAAS,6CApBa,CAqBtB,YAAa,KArBS,CAsBtB,WAAY,CACV,QAAS,mCADC,CAEV,YAAa,mDAFH,CAtBU,CA0BtB,WAAY,CACV,QAAS,uBADC,CAEV,YAAa,0CAFH,CA1BU,CAAjB,CA+BL,cAEF,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CAAC,CACvBC,KAAK,CAAE,eADgB,CAEvBC,EAAE,CAAE,eAFmB,CAGvBC,QAAQ,CAAE,EAHa,CAAD,CAAjB,CAKP,KAAMC,CAAAA,aAAa,CAAGC,IAAI,EAAI,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHD,CAKA,KAAMG,CAAAA,WAAW,CAAG,CAClBV,QADkB,CAApB,CAGA,KAAMW,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGN,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,aAAK,MAAL,CAAW,kBAAY,UAAU,CAAC,GAAvB,EAA6B,OAA7B,CAAX,CAA8D,cAA9D,CAA4E,kBAAY,UAAU,CAAC,GAAvB,EAA6B,mBAA7B,CAA5E,CAA2I;;CAA3I,CAEF,kBAAY,UAAU,CAAC,GAAvB,EAA6B,OAA7B,CAFE,CAEiD,UAFjD,CAFK,CAKL,SAAQ,CACN,KAAM,eADA,CAAR,CAEK,eAFL,CALK,CAQL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAE5B,aAAc,uBAFc,CAG5B,QAAS,iBAHmB,CAA3B,EAIE;;;;;CAJF,CAAL,CARK,CAAP,CAmBD,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tlast_modified_on: '2020-07-13',\n\t$schema: '/.meta/.schemas/highlights.json',\n\ttitle: 'Use comma delim server list in `kafka` sink',\n\tdescription: 'This change achieve consistency with our `kafka` source and other Kafka clients',\n\tauthor_github: 'https://github.com/binarylogic',\n\tpr_numbers: [\n\t\t1502\n\t],\n\trelease: '0.7.0',\n\thide_on_release_notes: false,\n\ttags: [\n\t\t'type: breaking change',\n\t\t'domain: sinks',\n\t\t'sink: kafka'\n\t]\n};\nexport const metadata = {\n  \"date\": \"2020-01-12T00:00:00.000Z\",\n  \"description\": \"This change achieve consistency with our `kafka` source and other Kafka clients\",\n  \"permalink\": \"/highlights/2020-01-12-use-comma-delim-server-list-instead-of-an-array\",\n  \"readingTime\": \"1 min read\",\n  \"source\": \"@site/highlights/2020-01-12-use-comma-delim-server-list-instead-of-an-array.md\",\n  \"tags\": [\n    {\n      \"label\": \"type: breaking change\",\n      \"permalink\": \"/highlights/tags/type-breaking-change\"\n    },\n    {\n      \"label\": \"domain: sinks\",\n      \"permalink\": \"/highlights/tags/domain-sinks\"\n    },\n    {\n      \"label\": \"sink: kafka\",\n      \"permalink\": \"/highlights/tags/sink-kafka\"\n    }\n  ],\n  \"title\": \"Use comma delim server list in `kafka` sink\",\n  \"truncated\": false,\n  \"prevItem\": {\n    \"title\": \"Sink options have been refactored\",\n    \"permalink\": \"/highlights/2020-01-12-request-options-refactored\"\n  },\n  \"nextItem\": {\n    \"title\": \"New Prometheus Source\",\n    \"permalink\": \"/highlights/2020-01-07-prometheus-source\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'Upgrade Guide',\n  id: 'upgrade-guide',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`The `}<inlineCode parentName=\"p\">{`kafka`}</inlineCode>{` sink field `}<inlineCode parentName=\"p\">{`bootstrap_servers`}</inlineCode>{` has been changed from an array to a\nstring, expecting a comma separated list of bootstrap servers similar to the\n`}<inlineCode parentName=\"p\">{`kafka`}</inlineCode>{` source.`}</p>\n    <h2 {...{\n      \"id\": \"upgrade-guide\"\n    }}>{`Upgrade Guide`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\",\n        \"metastring\": \"title=\\\"vector.toml\\\"\",\n        \"title\": \"\\\"vector.toml\\\"\"\n      }}>{` [sinks.my_sink_id]\n   type = \"kafka\"\n   inputs = [\"my-source-id\"]\n-  bootstrap_servers = [\"10.14.22.123:9092\", \"10.14.23.332:9092\"]\n+  bootstrap_servers = \"10.14.22.123:9092,10.14.23.332:9092\"\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}