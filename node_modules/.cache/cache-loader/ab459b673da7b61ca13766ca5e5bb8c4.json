{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/Desktop/vdocs/website/new-docs/docs/advanced/crypto.md","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/docs/advanced/crypto.md","mtime":1596522471759},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-advanced-crypto-md-478.json","mtime":1596522471985},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1588759133114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL1l1bi9EZXNrdG9wL3Zkb2NzL3dlYnNpdGUvbmV3LWRvY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXtpZDonY3J5cHRvJyx0aXRsZTonQ3J5cHRvZ3JhcGh5J307ZXhwb3J0IGNvbnN0IG1ldGFkYXRhPXsiaWQiOiJhZHZhbmNlZC9jcnlwdG8iLCJ0aXRsZSI6IkNyeXB0b2dyYXBoeSIsImRlc2NyaXB0aW9uIjoiTXV0YSDkvb/nlKggc2VjcDI1NmsxIOWPguaVsOS7peWunueOsOakreWchuabsue6v+aVsOWtl+etvuWQjeeul+azlShFQ0RTQSkg55qE5Yqf6IO9Iiwic291cmNlIjoiQHNpdGUvZG9jcy9hZHZhbmNlZC9jcnlwdG8ubWQiLCJwZXJtYWxpbmsiOiIvbmV3LWRvY3MvZG9jcy9hZHZhbmNlZC9jcnlwdG8iLCJlZGl0VXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL25lcnZvc25ldHdvcmsvbXV0YS9lZGl0L21hc3Rlci93ZWJzaXRlL2RvY3MvYWR2YW5jZWQvY3J5cHRvLm1kIiwic2lkZWJhciI6ImRvY3MiLCJwcmV2aW91cyI6eyJ0aXRsZSI6IlN0b3JhZ2UiLCJwZXJtYWxpbmsiOiIvbmV3LWRvY3MvZG9jcy9hZHZhbmNlZC9jb3JlL3N0b3JhZ2UifSwibmV4dCI6eyJ0aXRsZSI6IkpTIFNESyIsInBlcm1hbGluayI6Ii9uZXctZG9jcy9kb2NzL3Rvb2xjaGFpbi9zZGstanMifX07LyogQGpzeCBtZHggKi9leHBvcnQgY29uc3QgcmlnaHRUb2M9W3t2YWx1ZTon5aaC5L2V55Sf5oiQ55Sf5oiQ5Zyw5Z2AJyxpZDon5aaC5L2V55Sf5oiQ55Sf5oiQ5Zyw5Z2AJyxjaGlsZHJlbjpbXX0se3ZhbHVlOiflpoLkvZXnrb7lkI3kuqTmmJMnLGlkOiflpoLkvZXnrb7lkI3kuqTmmJMnLGNoaWxkcmVuOltdfV07Y29uc3QgbWFrZVNob3J0Y29kZT1uYW1lPT5mdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTtjb25zdCBsYXlvdXRQcm9wcz17cmlnaHRUb2N9O2NvbnN0IE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7Y29tcG9uZW50cywuLi5wcm9wc30pe3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgicCIsbnVsbCxgTXV0YSDkvb/nlKggc2VjcDI1NmsxIOWPguaVsOS7peWunueOsOakreWchuabsue6v+aVsOWtl+etvuWQjeeul+azlShFQ0RTQSkg55qE5Yqf6IO9YCksbWR4KCJoMiIseyJpZCI6IuWmguS9leeUn+aIkOeUn+aIkOWcsOWdgCJ9LGDlpoLkvZXnlJ/miJDnlJ/miJDlnLDlnYBgKSxtZHgoInAiLG51bGwsYOiusOengemSpSBwYCxtZHgoImVtIix7cGFyZW50TmFtZToicCJ9LGByYCksYCwg5a+55bqU5Zyw5Z2A5Ye95pWwIEEocGAsbWR4KCJlbSIse3BhcmVudE5hbWU6InAifSxgcmApLGAp77yM5YiZ5pyJ77yaYCksbWR4KCJwIixudWxsLGBBKHBgLG1keCgiZW0iLHtwYXJlbnROYW1lOiJwIn0sYHJgKSxgKSA9IEJpdGAsbWR4KCJzdWIiLG51bGwsYDAuLjE2MGApLGAoS2VjY2FrKEVDRFNBUFVCS0VZKHBgLG1keCgiZW0iLHtwYXJlbnROYW1lOiJwIn0sYHJgKSxgKSkpYCksbWR4KCJwIixudWxsLGBNdXRhIOeahOWcsOWdgOWvueW6lOaIkOS4gOS4qiAxNjBiaXQg55qE5YC877yM55Sf5oiQ55qE6L+H56iL6K+m57uG5o+P6L+w5Li677yaYCksbWR4KCJvbCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxg56eB6ZKlIC0+IOWFrOmSpe+8muengemSpemAmui/hyBFQ0RTQSDlhazpkqXnlJ/miJDnrpfms5XovazmjaLkuLrlhazpkqVgKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxg5YWs6ZKlIC0+IOWTiOW4jO+8muWFrOmSpemAmui/hyBLZWNjYWsg5Ye95pWw6L2s5o2i5ZOI5biM5YC8YCksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYOWTiOW4jCAtPiDlnLDlnYDvvJrmiKrlj5bliY0gMTYwYml0IOWTiOW4jOWAvGApKSxtZHgoImgyIix7ImlkIjoi5aaC5L2V562+5ZCN5Lqk5piTIn0sYOWmguS9leetvuWQjeS6pOaYk2ApLG1keCgicCIsbnVsbCxg6K6w56eB6ZKlIHBgLG1keCgiZW0iLHtwYXJlbnROYW1lOiJwIn0sYHJgKSxg77yM5b6F562+5ZCN5raI5oGvIHjvvIzlr7nlupTmnInnrb7lkI3lh73mlbAgUyh4Ke+8jOWImeacie+8mmApLG1keCgicCIsbnVsbCxgUyh4KSA9IEVDRFNBU0lHTihLZWNjYWsoUkxQKHgpKSwgcGAsbWR4KCJlbSIse3BhcmVudE5hbWU6InAifSxgcmApLGApYCksbWR4KCJwIixudWxsLGDnlLHkuo7kvb/nlKggc3BlYzI1Nmsx77yM5Zug5q2k562+5ZCN5a+55bqU5oiQ5LiA5LiqIDUxMmJpdCDnmoTlgLzvvIznrb7lkI3ov4fnqIvmtojmga/mj4/ov7DkuLrvvJpgKSxtZHgoIm9sIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LGDmtojmga8gLT4g5bqP5YiX5YyW5raI5oGv77ya5raI5oGv6YCa6L+HIFJMUCDluo/liJfljJbvvIzmtojmga/luo/liJfkuLpgLG1keCgib2wiLHtwYXJlbnROYW1lOiJsaSJ9LG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LGBjaGFpbklEYCksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYGN5Y2xlc0xpbWl0YCksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYGN5Y2xlc1ByaWNlYCksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYG5vbmNlYCksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYG1ldGhvZGApLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LGBzZXJ2aWNlYCksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYHBheWxvYWRgKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxgdGltZW91dGApKSksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYOW6j+WIl+WMlua2iOaBryAtPiDlk4jluIzvvJrluo/liJfljJbmtojmga/pgJrov4cgS2VjY2FrIOWHveaVsOi9rOaNouWTiOW4jOWAvGApLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LGDlk4jluIwgLT4g562+5ZCN77ya5ZOI5biM5YC86YCa6L+HIEVDRFNBIOetvuWQjeeul+azleeUn+aIkOetvuWQjWApKSxtZHgoInAiLG51bGwsYOS4i+mdoueahOS+i+WtkO+8jOWwhuS9v+eUqOS8quS7o+eggeaPj+i/sOetvuWQjeeahOi/h+eoi2ApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtdHlwZXNjcmlwdCJ9KSxgaW1wb3J0IHsgZW5jb2RlIGFzIFJMUEVuY29kZSB9IGZyb20gJ3JscCc7CmltcG9ydCBjcmVhdGVLZWNjYWtIYXNoIGZyb20gJ2tlY2NhaycKaW1wb3J0IHsgc2lnbiBhcyBFQ0RTQVNpZ24gfSBmcm9tICdzY2VwMjU2azEnOwoKY29uc3QgdHggPSBbCiAgY2hhaW5JZCwgLy8gJzB4YjZhNGQ3ZGEyMTQ0M2Y1ZTgxNmU4NzAwZWVhODc2MTBlNmQ3Njk2NTdkNmI4ZWM3MzAyODQ1N2JmMmNhNDAzNicKICBjeWNsZXNMaW1pdCwgLy8gJzB4ZmZmZicKICBjeWNsZXNQcmljZSwgLy8gJzB4ZmZmZicKICBub25jZSwgLy8gJzB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCcKICBtZXRob2QsIC8vICdhX3NlcnZpY2VfbWV0aG9kJyAKICBzZXJ2aWNlLCAvLyAnYV9zZXJ2aWNlX25hbWUnCiAgcGF5bG9hZCwgLy8gJ2FfbWV0aG9kX3BheWxvYWQnCiAgdGltZW91dCwgLy8gJzB4ZmZmZicgLy8gPT4gY3VycmVudF9ibG9ja19oZWlnaHQgKyB0aW1lb3V0X2dhcCAtIDEKXTsKCmNvbnN0IGVuY29kZWRNZXNzYWdlID0gUkxQRW5jb2RlKHR4KTsKY29uc3QgaGFzaCA9IGNyZWF0ZUtlY2Nha0hhc2goJ2tlY2NhazI1NicpCiAgICAgICAgLnVwZGF0ZShlbmNvZGVkTWVzc2FnZSkKICAgICAgICAuZGlnZXN0KCk7CmNvbnN0IHNpZ25hdHVyZSA9IEVDRFNBU2lnbihoYXNoLCBwcml2YXRlS2V5KTsKYCkpKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/Yun/Desktop/vdocs/website/new-docs/docs/advanced/crypto.md"],"names":["React","mdx","frontMatter","id","title","metadata","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'crypto',\n\ttitle: 'Cryptography'\n};\nexport const metadata = {\n  \"id\": \"advanced/crypto\",\n  \"title\": \"Cryptography\",\n  \"description\": \"Muta 使用 secp256k1 参数以实现椭圆曲线数字签名算法(ECDSA) 的功能\",\n  \"source\": \"@site/docs/advanced/crypto.md\",\n  \"permalink\": \"/new-docs/docs/advanced/crypto\",\n  \"editUrl\": \"https://github.com/nervosnetwork/muta/edit/master/website/docs/advanced/crypto.md\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"Storage\",\n    \"permalink\": \"/new-docs/docs/advanced/core/storage\"\n  },\n  \"next\": {\n    \"title\": \"JS SDK\",\n    \"permalink\": \"/new-docs/docs/toolchain/sdk-js\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: '如何生成生成地址',\n  id: '如何生成生成地址',\n  children: []\n}, {\n  value: '如何签名交易',\n  id: '如何签名交易',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`Muta 使用 secp256k1 参数以实现椭圆曲线数字签名算法(ECDSA) 的功能`}</p>\n    <h2 {...{\n      \"id\": \"如何生成生成地址\"\n    }}>{`如何生成生成地址`}</h2>\n    <p>{`记私钥 p`}<em parentName=\"p\">{`r`}</em>{`, 对应地址函数 A(p`}<em parentName=\"p\">{`r`}</em>{`)，则有：`}</p>\n    <p>{`A(p`}<em parentName=\"p\">{`r`}</em>{`) = Bit`}<sub>{`0..160`}</sub>{`(Keccak(ECDSAPUBKEY(p`}<em parentName=\"p\">{`r`}</em>{`)))`}</p>\n    <p>{`Muta 的地址对应成一个 160bit 的值，生成的过程详细描述为：`}</p>\n    <ol>\n      <li parentName=\"ol\">{`私钥 -> 公钥：私钥通过 ECDSA 公钥生成算法转换为公钥`}</li>\n      <li parentName=\"ol\">{`公钥 -> 哈希：公钥通过 Keccak 函数转换哈希值`}</li>\n      <li parentName=\"ol\">{`哈希 -> 地址：截取前 160bit 哈希值`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"如何签名交易\"\n    }}>{`如何签名交易`}</h2>\n    <p>{`记私钥 p`}<em parentName=\"p\">{`r`}</em>{`，待签名消息 x，对应有签名函数 S(x)，则有：`}</p>\n    <p>{`S(x) = ECDSASIGN(Keccak(RLP(x)), p`}<em parentName=\"p\">{`r`}</em>{`)`}</p>\n    <p>{`由于使用 spec256k1，因此签名对应成一个 512bit 的值，签名过程消息描述为：`}</p>\n    <ol>\n      <li parentName=\"ol\">{`消息 -> 序列化消息：消息通过 RLP 序列化，消息序列为`}<ol parentName=\"li\">\n          <li parentName=\"ol\">{`chainID`}</li>\n          <li parentName=\"ol\">{`cyclesLimit`}</li>\n          <li parentName=\"ol\">{`cyclesPrice`}</li>\n          <li parentName=\"ol\">{`nonce`}</li>\n          <li parentName=\"ol\">{`method`}</li>\n          <li parentName=\"ol\">{`service`}</li>\n          <li parentName=\"ol\">{`payload`}</li>\n          <li parentName=\"ol\">{`timeout`}</li>\n        </ol></li>\n      <li parentName=\"ol\">{`序列化消息 -> 哈希：序列化消息通过 Keccak 函数转换哈希值`}</li>\n      <li parentName=\"ol\">{`哈希 -> 签名：哈希值通过 ECDSA 签名算法生成签名`}</li>\n    </ol>\n    <p>{`下面的例子，将使用伪代码描述签名的过程`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import { encode as RLPEncode } from 'rlp';\nimport createKeccakHash from 'keccak'\nimport { sign as ECDSASign } from 'scep256k1';\n\nconst tx = [\n  chainId, // '0xb6a4d7da21443f5e816e8700eea87610e6d769657d6b8ec73028457bf2ca4036'\n  cyclesLimit, // '0xffff'\n  cyclesPrice, // '0xffff'\n  nonce, // '0x0000000000000000000000000000000000000000000000000000000000000000'\n  method, // 'a_service_method' \n  service, // 'a_service_name'\n  payload, // 'a_method_payload'\n  timeout, // '0xffff' // => current_block_height + timeout_gap - 1\n];\n\nconst encodedMessage = RLPEncode(tx);\nconst hash = createKeccakHash('keccak256')\n        .update(encodedMessage)\n        .digest();\nconst signature = ECDSASign(hash, privateKey);\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}