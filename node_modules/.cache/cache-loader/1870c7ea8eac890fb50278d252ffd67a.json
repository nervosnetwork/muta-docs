{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/Desktop/vdocs/website/new-docs/docs/docs_zh/advanced/crypto.md","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/docs/docs_zh/advanced/crypto.md","mtime":1596523326630},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-docs-zh-advanced-crypto-md-16b.json","mtime":1596523332619},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1588759133114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL1l1bi9EZXNrdG9wL3Zkb2NzL3dlYnNpdGUvbmV3LWRvY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXt0aXRsZTon5a+G56CB5a2mJ307ZXhwb3J0IGNvbnN0IG1ldGFkYXRhPXsiaWQiOiJkb2NzX3poL2FkdmFuY2VkL2NyeXB0byIsInRpdGxlIjoi5a+G56CB5a2mIiwiZGVzY3JpcHRpb24iOiJNdXRhIOS9v+eUqCBzZWNwMjU2azEg5Y+C5pWw5Lul5a6e546w5qSt5ZyG5puy57q/5pWw5a2X562+5ZCN566X5rOVKEVDRFNBKSDnmoTlip/og70iLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL2RvY3NfemgvYWR2YW5jZWQvY3J5cHRvLm1kIiwicGVybWFsaW5rIjoiL25ldy1kb2NzL2RvY3MvZG9jc196aC9hZHZhbmNlZC9jcnlwdG8iLCJlZGl0VXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL25lcnZvc25ldHdvcmsvbXV0YS9lZGl0L21hc3Rlci93ZWJzaXRlL2RvY3MvZG9jc196aC9hZHZhbmNlZC9jcnlwdG8ubWQiLCJzaWRlYmFyIjoiZG9jc196aCIsInByZXZpb3VzIjp7InRpdGxlIjoi5a2Y5YKoIiwicGVybWFsaW5rIjoiL25ldy1kb2NzL2RvY3MvZG9jc196aC9hZHZhbmNlZC9jb3JlL3N0b3JhZ2UifSwibmV4dCI6eyJ0aXRsZSI6IkpTIFNESyIsInBlcm1hbGluayI6Ii9uZXctZG9jcy9kb2NzL2RvY3NfemgvdG9vbGNoYWluL3Nkay1qcyJ9fTsvKiBAanN4IG1keCAqL2V4cG9ydCBjb25zdCByaWdodFRvYz1be3ZhbHVlOiflpoLkvZXnlJ/miJDnlJ/miJDlnLDlnYAnLGlkOiflpoLkvZXnlJ/miJDnlJ/miJDlnLDlnYAnLGNoaWxkcmVuOltdfSx7dmFsdWU6J+WmguS9leetvuWQjeS6pOaYkycsaWQ6J+WmguS9leetvuWQjeS6pOaYkycsY2hpbGRyZW46W119XTtjb25zdCBtYWtlU2hvcnRjb2RlPW5hbWU9PmZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O2NvbnN0IGxheW91dFByb3BzPXtyaWdodFRvY307Y29uc3QgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtjb21wb25lbnRzLC4uLnByb3BzfSl7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJwIixudWxsLGBNdXRhIOS9v+eUqCBzZWNwMjU2azEg5Y+C5pWw5Lul5a6e546w5qSt5ZyG5puy57q/5pWw5a2X562+5ZCN566X5rOVKEVDRFNBKSDnmoTlip/og71gKSxtZHgoImgyIix7ImlkIjoi5aaC5L2V55Sf5oiQ55Sf5oiQ5Zyw5Z2AIn0sYOWmguS9leeUn+aIkOeUn+aIkOWcsOWdgGApLG1keCgicCIsbnVsbCxg6K6w56eB6ZKlIHBgLG1keCgiZW0iLHtwYXJlbnROYW1lOiJwIn0sYHJgKSxgLCDlr7nlupTlnLDlnYDlh73mlbAgQShwYCxtZHgoImVtIix7cGFyZW50TmFtZToicCJ9LGByYCksYCnvvIzliJnmnInvvJpgKSxtZHgoInAiLG51bGwsYEEocGAsbWR4KCJlbSIse3BhcmVudE5hbWU6InAifSxgcmApLGApID0gQml0YCxtZHgoInN1YiIsbnVsbCxgMC4uMTYwYCksYChLZWNjYWsoRUNEU0FQVUJLRVkocGAsbWR4KCJlbSIse3BhcmVudE5hbWU6InAifSxgcmApLGApKSlgKSxtZHgoInAiLG51bGwsYE11dGEg55qE5Zyw5Z2A5a+55bqU5oiQ5LiA5LiqIDE2MGJpdCDnmoTlgLzvvIznlJ/miJDnmoTov4fnqIvor6bnu4bmj4/ov7DkuLrvvJpgKSxtZHgoIm9sIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LGDnp4HpkqUgLT4g5YWs6ZKl77ya56eB6ZKl6YCa6L+HIEVDRFNBIOWFrOmSpeeUn+aIkOeul+azlei9rOaNouS4uuWFrOmSpWApLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LGDlhazpkqUgLT4g5ZOI5biM77ya5YWs6ZKl6YCa6L+HIEtlY2NhayDlh73mlbDovazmjaLlk4jluIzlgLxgKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxg5ZOI5biMIC0+IOWcsOWdgO+8muaIquWPluWJjSAxNjBiaXQg5ZOI5biM5YC8YCkpLG1keCgiaDIiLHsiaWQiOiLlpoLkvZXnrb7lkI3kuqTmmJMifSxg5aaC5L2V562+5ZCN5Lqk5piTYCksbWR4KCJwIixudWxsLGDorrDnp4HpkqUgcGAsbWR4KCJlbSIse3BhcmVudE5hbWU6InAifSxgcmApLGDvvIzlvoXnrb7lkI3mtojmga8geO+8jOWvueW6lOacieetvuWQjeWHveaVsCBTKHgp77yM5YiZ5pyJ77yaYCksbWR4KCJwIixudWxsLGBTKHgpID0gRUNEU0FTSUdOKEtlY2NhayhSTFAoeCkpLCBwYCxtZHgoImVtIix7cGFyZW50TmFtZToicCJ9LGByYCksYClgKSxtZHgoInAiLG51bGwsYOeUseS6juS9v+eUqCBzcGVjMjU2azHvvIzlm6DmraTnrb7lkI3lr7nlupTmiJDkuIDkuKogNTEyYml0IOeahOWAvO+8jOetvuWQjei/h+eoi+a2iOaBr+aPj+i/sOS4uu+8mmApLG1keCgib2wiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYOa2iOaBryAtPiDluo/liJfljJbmtojmga/vvJrmtojmga/pgJrov4cgUkxQIOW6j+WIl+WMlu+8jOa2iOaBr+W6j+WIl+S4umAsbWR4KCJvbCIse3BhcmVudE5hbWU6ImxpIn0sbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYGNoYWluSURgKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxgY3ljbGVzTGltaXRgKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxgY3ljbGVzUHJpY2VgKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxgbm9uY2VgKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxgbWV0aG9kYCksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYHNlcnZpY2VgKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxgcGF5bG9hZGApLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LGB0aW1lb3V0YCkpKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxg5bqP5YiX5YyW5raI5oGvIC0+IOWTiOW4jO+8muW6j+WIl+WMlua2iOaBr+mAmui/hyBLZWNjYWsg5Ye95pWw6L2s5o2i5ZOI5biM5YC8YCksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYOWTiOW4jCAtPiDnrb7lkI3vvJrlk4jluIzlgLzpgJrov4cgRUNEU0Eg562+5ZCN566X5rOV55Sf5oiQ562+5ZCNYCkpLG1keCgicCIsbnVsbCxg5LiL6Z2i55qE5L6L5a2Q77yM5bCG5L2/55So5Lyq5Luj56CB5o+P6L+w562+5ZCN55qE6L+H56iLYCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS10eXBlc2NyaXB0In0pLGBpbXBvcnQgeyBlbmNvZGUgYXMgUkxQRW5jb2RlIH0gZnJvbSAncmxwJzsKaW1wb3J0IGNyZWF0ZUtlY2Nha0hhc2ggZnJvbSAna2VjY2FrJwppbXBvcnQgeyBzaWduIGFzIEVDRFNBU2lnbiB9IGZyb20gJ3NjZXAyNTZrMSc7Cgpjb25zdCB0eCA9IFsKICBjaGFpbklkLCAvLyAnMHhiNmE0ZDdkYTIxNDQzZjVlODE2ZTg3MDBlZWE4NzYxMGU2ZDc2OTY1N2Q2YjhlYzczMDI4NDU3YmYyY2E0MDM2JwogIGN5Y2xlc0xpbWl0LCAvLyAnMHhmZmZmJwogIGN5Y2xlc1ByaWNlLCAvLyAnMHhmZmZmJwogIG5vbmNlLCAvLyAnMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwJwogIG1ldGhvZCwgLy8gJ2Ffc2VydmljZV9tZXRob2QnIAogIHNlcnZpY2UsIC8vICdhX3NlcnZpY2VfbmFtZScKICBwYXlsb2FkLCAvLyAnYV9tZXRob2RfcGF5bG9hZCcKICB0aW1lb3V0LCAvLyAnMHhmZmZmJyAvLyA9PiBjdXJyZW50X2Jsb2NrX2hlaWdodCArIHRpbWVvdXRfZ2FwIC0gMQpdOwoKY29uc3QgZW5jb2RlZE1lc3NhZ2UgPSBSTFBFbmNvZGUodHgpOwpjb25zdCBoYXNoID0gY3JlYXRlS2VjY2FrSGFzaCgna2VjY2FrMjU2JykKICAgICAgICAudXBkYXRlKGVuY29kZWRNZXNzYWdlKQogICAgICAgIC5kaWdlc3QoKTsKY29uc3Qgc2lnbmF0dXJlID0gRUNEU0FTaWduKGhhc2gsIHByaXZhdGVLZXkpOwpgKSkpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/Yun/Desktop/vdocs/website/new-docs/docs/docs_zh/advanced/crypto.md"],"names":["React","mdx","frontMatter","title","metadata","rightToc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\ttitle: '密码学'\n};\nexport const metadata = {\n  \"id\": \"docs_zh/advanced/crypto\",\n  \"title\": \"密码学\",\n  \"description\": \"Muta 使用 secp256k1 参数以实现椭圆曲线数字签名算法(ECDSA) 的功能\",\n  \"source\": \"@site/docs/docs_zh/advanced/crypto.md\",\n  \"permalink\": \"/new-docs/docs/docs_zh/advanced/crypto\",\n  \"editUrl\": \"https://github.com/nervosnetwork/muta/edit/master/website/docs/docs_zh/advanced/crypto.md\",\n  \"sidebar\": \"docs_zh\",\n  \"previous\": {\n    \"title\": \"存储\",\n    \"permalink\": \"/new-docs/docs/docs_zh/advanced/core/storage\"\n  },\n  \"next\": {\n    \"title\": \"JS SDK\",\n    \"permalink\": \"/new-docs/docs/docs_zh/toolchain/sdk-js\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: '如何生成生成地址',\n  id: '如何生成生成地址',\n  children: []\n}, {\n  value: '如何签名交易',\n  id: '如何签名交易',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`Muta 使用 secp256k1 参数以实现椭圆曲线数字签名算法(ECDSA) 的功能`}</p>\n    <h2 {...{\n      \"id\": \"如何生成生成地址\"\n    }}>{`如何生成生成地址`}</h2>\n    <p>{`记私钥 p`}<em parentName=\"p\">{`r`}</em>{`, 对应地址函数 A(p`}<em parentName=\"p\">{`r`}</em>{`)，则有：`}</p>\n    <p>{`A(p`}<em parentName=\"p\">{`r`}</em>{`) = Bit`}<sub>{`0..160`}</sub>{`(Keccak(ECDSAPUBKEY(p`}<em parentName=\"p\">{`r`}</em>{`)))`}</p>\n    <p>{`Muta 的地址对应成一个 160bit 的值，生成的过程详细描述为：`}</p>\n    <ol>\n      <li parentName=\"ol\">{`私钥 -> 公钥：私钥通过 ECDSA 公钥生成算法转换为公钥`}</li>\n      <li parentName=\"ol\">{`公钥 -> 哈希：公钥通过 Keccak 函数转换哈希值`}</li>\n      <li parentName=\"ol\">{`哈希 -> 地址：截取前 160bit 哈希值`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"如何签名交易\"\n    }}>{`如何签名交易`}</h2>\n    <p>{`记私钥 p`}<em parentName=\"p\">{`r`}</em>{`，待签名消息 x，对应有签名函数 S(x)，则有：`}</p>\n    <p>{`S(x) = ECDSASIGN(Keccak(RLP(x)), p`}<em parentName=\"p\">{`r`}</em>{`)`}</p>\n    <p>{`由于使用 spec256k1，因此签名对应成一个 512bit 的值，签名过程消息描述为：`}</p>\n    <ol>\n      <li parentName=\"ol\">{`消息 -> 序列化消息：消息通过 RLP 序列化，消息序列为`}<ol parentName=\"li\">\n          <li parentName=\"ol\">{`chainID`}</li>\n          <li parentName=\"ol\">{`cyclesLimit`}</li>\n          <li parentName=\"ol\">{`cyclesPrice`}</li>\n          <li parentName=\"ol\">{`nonce`}</li>\n          <li parentName=\"ol\">{`method`}</li>\n          <li parentName=\"ol\">{`service`}</li>\n          <li parentName=\"ol\">{`payload`}</li>\n          <li parentName=\"ol\">{`timeout`}</li>\n        </ol></li>\n      <li parentName=\"ol\">{`序列化消息 -> 哈希：序列化消息通过 Keccak 函数转换哈希值`}</li>\n      <li parentName=\"ol\">{`哈希 -> 签名：哈希值通过 ECDSA 签名算法生成签名`}</li>\n    </ol>\n    <p>{`下面的例子，将使用伪代码描述签名的过程`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import { encode as RLPEncode } from 'rlp';\nimport createKeccakHash from 'keccak'\nimport { sign as ECDSASign } from 'scep256k1';\n\nconst tx = [\n  chainId, // '0xb6a4d7da21443f5e816e8700eea87610e6d769657d6b8ec73028457bf2ca4036'\n  cyclesLimit, // '0xffff'\n  cyclesPrice, // '0xffff'\n  nonce, // '0x0000000000000000000000000000000000000000000000000000000000000000'\n  method, // 'a_service_method' \n  service, // 'a_service_name'\n  payload, // 'a_method_payload'\n  timeout, // '0xffff' // => current_block_height + timeout_gap - 1\n];\n\nconst encodedMessage = RLPEncode(tx);\nconst hash = createKeccakHash('keccak256')\n        .update(encodedMessage)\n        .digest();\nconst signature = ECDSASign(hash, privateKey);\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}