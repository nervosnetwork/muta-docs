{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/Yun/Desktop/vdocs/website/new-docs/src/theme/CodeBlock/index.js","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/src/theme/CodeBlock/index.js","mtime":1594780808792},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js","mtime":1588759098876}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL1l1bi9EZXNrdG9wL3Zkb2NzL3dlYnNpdGUvbmV3LWRvY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCx7dXNlRWZmZWN0LHVzZVN0YXRlLHVzZVJlZn1mcm9tJ3JlYWN0JztpbXBvcnQgQ2xpcGJvYXJkIGZyb20nY2xpcGJvYXJkJztpbXBvcnQgSGlnaGxpZ2h0LHtkZWZhdWx0UHJvcHN9ZnJvbSdwcmlzbS1yZWFjdC1yZW5kZXJlcic7aW1wb3J0IFByaXNtIGZyb20ncHJpc20tcmVhY3QtcmVuZGVyZXIvcHJpc20nO2ltcG9ydCBjbGFzc25hbWVzIGZyb20nY2xhc3NuYW1lcyc7aW1wb3J0IGRlZmF1bHRUaGVtZSBmcm9tJ3ByaXNtLXJlYWN0LXJlbmRlcmVyL3RoZW1lcy9wYWxlbmlnaHQnO2ltcG9ydCByYW5nZVBhcnNlciBmcm9tJ3BhcnNlLW51bWVyaWMtcmFuZ2UnO2ltcG9ydCB1c2VEb2N1c2F1cnVzQ29udGV4dCBmcm9tJ0Bkb2N1c2F1cnVzL3VzZURvY3VzYXVydXNDb250ZXh0JztpbXBvcnQgdXNlVGhlbWVDb250ZXh0IGZyb20nQHRoZW1lL2hvb2tzL3VzZVRoZW1lQ29udGV4dCc7aW1wb3J0IHN0eWxlcyBmcm9tJy4vc3R5bGVzLm1vZHVsZS5jc3MnOyh0eXBlb2YgZ2xvYmFsIT09J3VuZGVmaW5lZCc/Z2xvYmFsOndpbmRvdykuUHJpc209UHJpc207cmVxdWlyZSgncHJpc21qcy9jb21wb25lbnRzL3ByaXNtLWh0dHAnKTtyZXF1aXJlKCdwcmlzbWpzL2NvbXBvbmVudHMvcHJpc20tbHVhJyk7cmVxdWlyZSgncHJpc21qcy9jb21wb25lbnRzL3ByaXNtLXBvd2Vyc2hlbGwnKTtyZXF1aXJlKCdwcmlzbWpzL2NvbXBvbmVudHMvcHJpc20tcHJvdG9idWYnKTtyZXF1aXJlKCdwcmlzbWpzL2NvbXBvbmVudHMvcHJpc20tcnVzdCcpO3JlcXVpcmUoJ3ByaXNtanMvY29tcG9uZW50cy9wcmlzbS10b21sJyk7Y29uc3QgaGlnaGxpZ2h0TGluZXNSYW5nZVJlZ2V4PS97KFtcZCwtXSspfS87Y29uc3QgY29kZUJsb2NrVGl0bGVSZWdleD0vdGl0bGU9Ii4qIi87ZXhwb3J0IGRlZmF1bHQoKHtjaGlsZHJlbixjbGFzc05hbWU6bGFuZ3VhZ2VDbGFzc05hbWUsbWV0YXN0cmluZ30pPT57Y29uc3R7c2l0ZUNvbmZpZzp7dGhlbWVDb25maWc6e3ByaXNtPXt9fX19PXVzZURvY3VzYXVydXNDb250ZXh0KCk7Y29uc3Rbc2hvd0NvcGllZCxzZXRTaG93Q29waWVkXT11c2VTdGF0ZShmYWxzZSk7Y29uc3RbbW91bnRlZCxzZXRNb3VudGVkXT11c2VTdGF0ZShmYWxzZSk7Ly8gVGhlIFByaXNtIHRoZW1lIG9uIFNTUiBpcyBhbHdheXMgdGhlIGRlZmF1bHQgdGhlbWUgYnV0IHRoZSBzaXRlIHRoZW1lCi8vIGNhbiBiZSBpbiBhIGRpZmZlcmVudCBtb2RlLiBSZWFjdCBoeWRyYXRpb24gZG9lc24ndCB1cGRhdGUgRE9NIHN0eWxlcwovLyB0aGF0IGNvbWUgZnJvbSBTU1IuIEhlbmNlIGZvcmNlIGEgcmUtcmVuZGVyIGFmdGVyIG1vdW50aW5nIHRvIGFwcGx5IHRoZQovLyBjdXJyZW50IHJlbGV2YW50IHN0eWxlcy4gVGhlcmUgd2lsbCBiZSBhIGZsYXNoIHNlZW4gb2YgdGhlIG9yaWdpbmFsCi8vIHN0eWxlcyBzZWVuIHVzaW5nIHRoaXMgY3VycmVudCBhcHByb2FjaCBidXQgdGhhdCdzIHByb2JhYmx5IG9rLiBGaXhpbmcKLy8gdGhlIGZsYXNoIHdpbGwgcmVxdWlyZSBjaGFuZ2luZyB0aGUgdGhlbWluZyBhcHByb2FjaCBhbmQgaXMgbm90IHdvcnRoIGl0Ci8vIGF0IHRoaXMgcG9pbnQuCnVzZUVmZmVjdCgoKT0+e3NldE1vdW50ZWQodHJ1ZSk7fSxbXSk7Y29uc3QgdGFyZ2V0PXVzZVJlZihudWxsKTtjb25zdCBidXR0b249dXNlUmVmKG51bGwpO2xldCBoaWdobGlnaHRMaW5lcz1bXTtsZXQgY29kZUJsb2NrVGl0bGU9Jyc7Y29uc3R7aXNEYXJrVGhlbWV9PXVzZVRoZW1lQ29udGV4dCgpO2NvbnN0IGxpZ2h0TW9kZVRoZW1lPXByaXNtLnRoZW1lfHxkZWZhdWx0VGhlbWU7Y29uc3QgZGFya01vZGVUaGVtZT1wcmlzbS5kYXJrVGhlbWV8fGxpZ2h0TW9kZVRoZW1lO2NvbnN0IHByaXNtVGhlbWU9aXNEYXJrVGhlbWU/ZGFya01vZGVUaGVtZTpsaWdodE1vZGVUaGVtZTtpZihtZXRhc3RyaW5nJiZoaWdobGlnaHRMaW5lc1JhbmdlUmVnZXgudGVzdChtZXRhc3RyaW5nKSl7Y29uc3QgaGlnaGxpZ2h0TGluZXNSYW5nZT1tZXRhc3RyaW5nLm1hdGNoKGhpZ2hsaWdodExpbmVzUmFuZ2VSZWdleClbMV07aGlnaGxpZ2h0TGluZXM9cmFuZ2VQYXJzZXIucGFyc2UoaGlnaGxpZ2h0TGluZXNSYW5nZSkuZmlsdGVyKG49Pm4+MCk7fWlmKG1ldGFzdHJpbmcmJmNvZGVCbG9ja1RpdGxlUmVnZXgudGVzdChtZXRhc3RyaW5nKSl7Y29kZUJsb2NrVGl0bGU9bWV0YXN0cmluZy5tYXRjaChjb2RlQmxvY2tUaXRsZVJlZ2V4KVswXS5zcGxpdCgndGl0bGU9JylbMV0ucmVwbGFjZSgvIisvZywnJyk7fXVzZUVmZmVjdCgoKT0+e2xldCBjbGlwYm9hcmQ7aWYoYnV0dG9uLmN1cnJlbnQpe2NsaXBib2FyZD1uZXcgQ2xpcGJvYXJkKGJ1dHRvbi5jdXJyZW50LHt0YXJnZXQ6KCk9PnRhcmdldC5jdXJyZW50fSk7fXJldHVybigpPT57aWYoY2xpcGJvYXJkKXtjbGlwYm9hcmQuZGVzdHJveSgpO319O30sW2J1dHRvbi5jdXJyZW50LHRhcmdldC5jdXJyZW50XSk7bGV0IGxhbmd1YWdlPWxhbmd1YWdlQ2xhc3NOYW1lJiZsYW5ndWFnZUNsYXNzTmFtZS5yZXBsYWNlKC9sYW5ndWFnZS0vLCcnKTtpZighbGFuZ3VhZ2UmJnByaXNtLmRlZmF1bHRMYW5ndWFnZSl7bGFuZ3VhZ2U9cHJpc20uZGVmYXVsdExhbmd1YWdlO31jb25zdCBoYW5kbGVDb3B5Q29kZT0oKT0+e3dpbmRvdy5nZXRTZWxlY3Rpb24oKS5lbXB0eSgpO3NldFNob3dDb3BpZWQodHJ1ZSk7c2V0VGltZW91dCgoKT0+c2V0U2hvd0NvcGllZChmYWxzZSksMjAwMCk7fTtyZXR1cm4vKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChIaWdobGlnaHQsX2V4dGVuZHMoe30sZGVmYXVsdFByb3BzLHtrZXk6bW91bnRlZCx0aGVtZTpwcmlzbVRoZW1lLGNvZGU6Y2hpbGRyZW4udHJpbSgpLGxhbmd1YWdlOmxhbmd1YWdlfSksKHtjbGFzc05hbWUsc3R5bGUsdG9rZW5zLGdldExpbmVQcm9wcyxnZXRUb2tlblByb3BzfSk9Pi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LG51bGwsY29kZUJsb2NrVGl0bGUmJi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtzdHlsZTpzdHlsZSxjbGFzc05hbWU6c3R5bGVzLmNvZGVCbG9ja1RpdGxlfSxjb2RlQmxvY2tUaXRsZSksLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZTpzdHlsZXMuY29kZUJsb2NrQ29udGVudH0sLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIse3JlZjpidXR0b24sdHlwZToiYnV0dG9uIiwiYXJpYS1sYWJlbCI6IkNvcHkgY29kZSB0byBjbGlwYm9hcmQiLGNsYXNzTmFtZTpjbGFzc25hbWVzKHN0eWxlcy5jb3B5QnV0dG9uLHtbc3R5bGVzLmNvcHlCdXR0b25XaXRoVGl0bGVdOmNvZGVCbG9ja1RpdGxlfSksb25DbGljazpoYW5kbGVDb3B5Q29kZX0sc2hvd0NvcGllZD8nQ29waWVkJzonQ29weScpLC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJwcmUiLHtjbGFzc05hbWU6Y2xhc3NuYW1lcyhjbGFzc05hbWUsc3R5bGVzLmNvZGVCbG9jayx7W3N0eWxlcy5jb2RlQmxvY2tXaXRoVGl0bGVdOmNvZGVCbG9ja1RpdGxlfSl9LC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtyZWY6dGFyZ2V0LGNsYXNzTmFtZTpzdHlsZXMuY29kZUJsb2NrTGluZXMsc3R5bGU6c3R5bGV9LHRva2Vucy5tYXAoKGxpbmUsaSk9PntpZihsaW5lLmxlbmd0aD09PTEmJmxpbmVbMF0uY29udGVudD09PScnKXtsaW5lWzBdLmNvbnRlbnQ9J1xuJzsvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXBhcmFtLXJlYXNzaWduCn1jb25zdCBsaW5lUHJvcHM9Z2V0TGluZVByb3BzKHtsaW5lLGtleTppfSk7aWYoaGlnaGxpZ2h0TGluZXMuaW5jbHVkZXMoaSsxKSl7bGluZVByb3BzLmNsYXNzTmFtZT1gJHtsaW5lUHJvcHMuY2xhc3NOYW1lfSBkb2N1c2F1cnVzLWhpZ2hsaWdodC1jb2RlLWxpbmVgO31yZXR1cm4vKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IixfZXh0ZW5kcyh7a2V5Oml9LGxpbmVQcm9wcyksbGluZS5tYXAoKHRva2VuLGtleSk9Pi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIixfZXh0ZW5kcyh7a2V5OmtleX0sZ2V0VG9rZW5Qcm9wcyh7dG9rZW4sa2V5fSkpKSkpO30pKSkpKSk7fSk7"},{"version":3,"sources":["/Users/Yun/Desktop/vdocs/website/new-docs/src/theme/CodeBlock/index.js"],"names":["React","useEffect","useState","useRef","Clipboard","Highlight","defaultProps","Prism","classnames","defaultTheme","rangeParser","useDocusaurusContext","useThemeContext","styles","global","window","require","highlightLinesRangeRegex","codeBlockTitleRegex","children","className","languageClassName","metastring","siteConfig","themeConfig","prism","showCopied","setShowCopied","mounted","setMounted","target","button","highlightLines","codeBlockTitle","isDarkTheme","lightModeTheme","theme","darkModeTheme","darkTheme","prismTheme","test","highlightLinesRange","match","parse","filter","n","split","replace","clipboard","current","destroy","language","defaultLanguage","handleCopyCode","getSelection","empty","setTimeout","trim","style","tokens","getLineProps","getTokenProps","codeBlockContent","copyButton","copyButtonWithTitle","codeBlock","codeBlockWithTitle","codeBlockLines","map","line","i","length","content","lineProps","key","includes","token"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef} from 'react';\n\nimport Clipboard from 'clipboard';\nimport Highlight, {defaultProps} from 'prism-react-renderer';\nimport Prism from 'prism-react-renderer/prism';\n\nimport classnames from 'classnames';\nimport defaultTheme from 'prism-react-renderer/themes/palenight';\nimport rangeParser from 'parse-numeric-range';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport useThemeContext from '@theme/hooks/useThemeContext';\n\nimport styles from './styles.module.css';\n\n(typeof global !== 'undefined' ? global : window).Prism = Prism;\nrequire('prismjs/components/prism-http');\nrequire('prismjs/components/prism-lua');\nrequire('prismjs/components/prism-powershell');\nrequire('prismjs/components/prism-protobuf');\nrequire('prismjs/components/prism-rust');\nrequire('prismjs/components/prism-toml');\n\nconst highlightLinesRangeRegex = /{([\\d,-]+)}/;\nconst codeBlockTitleRegex = /title=\".*\"/;\n\nexport default ({children, className: languageClassName, metastring}) => {\n  const {\n    siteConfig: {\n      themeConfig: {prism = {}},\n    },\n  } = useDocusaurusContext();\n\n  const [showCopied, setShowCopied] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  // The Prism theme on SSR is always the default theme but the site theme\n  // can be in a different mode. React hydration doesn't update DOM styles\n  // that come from SSR. Hence force a re-render after mounting to apply the\n  // current relevant styles. There will be a flash seen of the original\n  // styles seen using this current approach but that's probably ok. Fixing\n  // the flash will require changing the theming approach and is not worth it\n  // at this point.\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const target = useRef(null);\n  const button = useRef(null);\n  let highlightLines = [];\n  let codeBlockTitle = '';\n\n  const {isDarkTheme} = useThemeContext();\n  const lightModeTheme = prism.theme || defaultTheme;\n  const darkModeTheme = prism.darkTheme || lightModeTheme;\n  const prismTheme = isDarkTheme ? darkModeTheme : lightModeTheme;\n\n  if (metastring && highlightLinesRangeRegex.test(metastring)) {\n    const highlightLinesRange = metastring.match(highlightLinesRangeRegex)[1];\n    highlightLines = rangeParser.parse(highlightLinesRange).filter(n => n > 0);\n  }\n\n  if (metastring && codeBlockTitleRegex.test(metastring)) {\n    codeBlockTitle = metastring\n      .match(codeBlockTitleRegex)[0]\n      .split('title=')[1]\n      .replace(/\"+/g, '');\n  }\n\n  useEffect(() => {\n    let clipboard;\n\n    if (button.current) {\n      clipboard = new Clipboard(button.current, {\n        target: () => target.current,\n      });\n    }\n\n    return () => {\n      if (clipboard) {\n        clipboard.destroy();\n      }\n    };\n  }, [button.current, target.current]);\n\n  let language =\n    languageClassName && languageClassName.replace(/language-/, '');\n\n  if (!language && prism.defaultLanguage) {\n    language = prism.defaultLanguage;\n  }\n\n  const handleCopyCode = () => {\n    window.getSelection().empty();\n    setShowCopied(true);\n\n    setTimeout(() => setShowCopied(false), 2000);\n  };\n\n  return (\n    <Highlight\n      {...defaultProps}\n      key={mounted}\n      theme={prismTheme}\n      code={children.trim()}\n      language={language}>\n      {({className, style, tokens, getLineProps, getTokenProps}) => (\n        <>\n          {codeBlockTitle && (\n            <div style={style} className={styles.codeBlockTitle}>\n              {codeBlockTitle}\n            </div>\n          )}\n          <div className={styles.codeBlockContent}>\n            <button\n              ref={button}\n              type=\"button\"\n              aria-label=\"Copy code to clipboard\"\n              className={classnames(styles.copyButton, {\n                [styles.copyButtonWithTitle]: codeBlockTitle,\n              })}\n              onClick={handleCopyCode}>\n              {showCopied ? 'Copied' : 'Copy'}\n            </button>\n            <pre\n              className={classnames(className, styles.codeBlock, {\n                [styles.codeBlockWithTitle]: codeBlockTitle,\n              })}>\n              <div ref={target} className={styles.codeBlockLines} style={style}>\n                {tokens.map((line, i) => {\n                  if (line.length === 1 && line[0].content === '') {\n                    line[0].content = '\\n'; // eslint-disable-line no-param-reassign\n                  }\n\n                  const lineProps = getLineProps({line, key: i});\n\n                  if (highlightLines.includes(i + 1)) {\n                    lineProps.className = `${lineProps.className} docusaurus-highlight-code-line`;\n                  }\n\n                  return (\n                    <div key={i} {...lineProps}>\n                      {line.map((token, key) => (\n                        <span key={key} {...getTokenProps({token, key})} />\n                      ))}\n                    </div>\n                  );\n                })}\n              </div>\n            </pre>\n          </div>\n        </>\n      )}\n    </Highlight>\n  );\n};\n"]}]}