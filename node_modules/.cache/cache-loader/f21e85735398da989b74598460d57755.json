{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/Yun/Desktop/vdocs/website/new-docs/src/components/PerformanceTests/data.js","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/src/components/PerformanceTests/data.js","mtime":1594780808769},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js","mtime":1588759098876}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYnVpbGRSb3dzKHhBeGlzLHlBeGlzLG1ldHJpY3MsbWVhc3VyZW1lbnRzKXtyZXR1cm4geUF4aXMubWFwKHlBeGlzSXRlbT0+e2xldCByb3c9eEF4aXMubWFwKHhBeGlzSXRlbT0+e2xldCBtZWFzdXJlbWVudD1mZXRjaE1lYXN1cmVtZW50KG1lYXN1cmVtZW50cyx5QXhpc0l0ZW0seEF4aXNJdGVtKTtsZXQgbWV0cmljPW1lYXN1cmVtZW50P21ldHJpY3MuZmluZChtZXRyaWM9Pm1ldHJpYy5zbHVnPT1tZWFzdXJlbWVudC5tZXRyaWMpOm51bGw7cmV0dXJue190eXBlOidfX2NlbGwnLG1lYXN1cmVtZW50Om1lYXN1cmVtZW50LG1ldHJpYzptZXRyaWMseEF4aXNJdGVtOnhBeGlzSXRlbSx5QXhpc0l0ZW06eUF4aXNJdGVtfTt9KTtyZXR1cm4gYXNzaWduUmFua01ldGFkYXRhKHJvdyk7fSk7fWZ1bmN0aW9uIGZldGNoTWVhc3VyZW1lbnQobWVhc3VyZW1lbnRzLHlBeGlzSXRlbSx4QXhpc0l0ZW0pe2xldCB0ZXN0PXlBeGlzSXRlbS5fX3R5cGU9PSJ0ZXN0Ij95QXhpc0l0ZW06bnVsbDtsZXQgc3ViamVjdD14QXhpc0l0ZW0uX190eXBlPT0ic3ViamVjdCI/eEF4aXNJdGVtOm51bGw7bGV0IG1ldHJpYz15QXhpc0l0ZW0uX3R5cGU9PSJtZXRyaWMiP3lBeGlzSXRlbTpudWxsO2xldCB2ZXJzaW9ucz14QXhpc0l0ZW09PSJ2ZXJzaW9uIj9beEF4aXNJdGVtXTpzdWJqZWN0LnZlcnNpb25zLnJldmVyc2UoKTtmb3IobGV0IHZlcnNpb24gb2YgdmVyc2lvbnMpe2xldCBtZWFzdXJlbWVudD1tZWFzdXJlbWVudHMuZmluZChtZWFzdXJlbWVudD0+KCF0ZXN0fHxtZWFzdXJlbWVudC50ZXN0PT10ZXN0LnNsdWcpJiYoIXN1YmplY3R8fG1lYXN1cmVtZW50LnN1YmplY3Q9PXN1YmplY3Quc2x1ZykmJighbWV0cmljfHxtZWFzdXJlbWVudC5tZXRyaWM9PW1ldHJpYy5zbHVnKSYmKCF2ZXJzaW9ufHxtZWFzdXJlbWVudC52ZXJzaW9uPT12ZXJzaW9uLnNsdWcpKTtpZihtZWFzdXJlbWVudClyZXR1cm4gbWVhc3VyZW1lbnQ7fXJldHVybiBudWxsO31mdW5jdGlvbiBhc3NpZ25SYW5rTWV0YWRhdGEocm93KXtsZXQgc29ydGVkVmFsdWVzPXJvdy5maWx0ZXIoY2VsbD0+Y2VsbC5tZWFzdXJlbWVudCkubWFwKGNlbGw9PmNlbGwubWVhc3VyZW1lbnQudmFsdWUpLnNvcnQoKGEsYik9PmEtYik7bGV0IG1ldHJpYz1yb3cuZmluZChjZWxsPT5jZWxsLm1ldHJpYykubWV0cmljO2lmKG1ldHJpYy5zb3J0PT0iZGVzYyIpc29ydGVkVmFsdWVzPXNvcnRlZFZhbHVlcy5yZXZlcnNlKCk7bGV0IG1heFZhbHVlPU1hdGgubWF4KC4uLnNvcnRlZFZhbHVlcyk7cmV0dXJuIHJvdy5tYXAoY2VsbD0+e2lmKGNlbGwubWVhc3VyZW1lbnQpe2NlbGwucGVyY2VudD1jZWxsLm1lYXN1cmVtZW50LnZhbHVlL21heFZhbHVlO2NlbGwucGxhY2U9c29ydGVkVmFsdWVzLmluZGV4T2YoY2VsbC5tZWFzdXJlbWVudC52YWx1ZSkrMTt9cmV0dXJuIGNlbGw7fSk7fQ=="},{"version":3,"sources":["/Users/Yun/Desktop/vdocs/website/new-docs/src/components/PerformanceTests/data.js"],"names":["buildRows","xAxis","yAxis","metrics","measurements","map","yAxisItem","row","xAxisItem","measurement","fetchMeasurement","metric","find","slug","_type","assignRankMetadata","test","__type","subject","versions","reverse","version","sortedValues","filter","cell","value","sort","a","b","maxValue","Math","max","percent","place","indexOf"],"mappings":"AAAA,cAAe,SAASA,CAAAA,SAAT,CAAmBC,KAAnB,CAA0BC,KAA1B,CAAiCC,OAAjC,CAA0CC,YAA1C,CAAwD,CACrE,MAAOF,CAAAA,KAAK,CAACG,GAAN,CAAUC,SAAS,EAAI,CAC5B,GAAIC,CAAAA,GAAG,CAAGN,KAAK,CAACI,GAAN,CAAUG,SAAS,EAAI,CAC/B,GAAIC,CAAAA,WAAW,CAAGC,gBAAgB,CAACN,YAAD,CAAeE,SAAf,CAA0BE,SAA1B,CAAlC,CACA,GAAIG,CAAAA,MAAM,CAAGF,WAAW,CAAGN,OAAO,CAACS,IAAR,CAAaD,MAAM,EAAKA,MAAM,CAACE,IAAP,EAAeJ,WAAW,CAACE,MAAnD,CAAH,CAAiE,IAAzF,CAEA,MAAO,CACLG,KAAK,CAAE,QADF,CAELL,WAAW,CAAEA,WAFR,CAGLE,MAAM,CAAEA,MAHH,CAILH,SAAS,CAAEA,SAJN,CAKLF,SAAS,CAAEA,SALN,CAAP,CAOD,CAXS,CAAV,CAaA,MAAOS,CAAAA,kBAAkB,CAACR,GAAD,CAAzB,CACD,CAfM,CAAP,CAgBD,CAED,QAASG,CAAAA,gBAAT,CAA0BN,YAA1B,CAAwCE,SAAxC,CAAmDE,SAAnD,CAA8D,CAC5D,GAAIQ,CAAAA,IAAI,CAAGV,SAAS,CAACW,MAAV,EAAoB,MAApB,CAA6BX,SAA7B,CAAyC,IAApD,CACA,GAAIY,CAAAA,OAAO,CAAGV,SAAS,CAACS,MAAV,EAAoB,SAApB,CAAgCT,SAAhC,CAA4C,IAA1D,CACA,GAAIG,CAAAA,MAAM,CAAGL,SAAS,CAACQ,KAAV,EAAmB,QAAnB,CAA8BR,SAA9B,CAA0C,IAAvD,CACA,GAAIa,CAAAA,QAAQ,CAAGX,SAAS,EAAI,SAAb,CAAyB,CAACA,SAAD,CAAzB,CAAuCU,OAAO,CAACC,QAAR,CAAiBC,OAAjB,EAAtD,CAEA,IAAI,GAAIC,CAAAA,OAAR,GAAmBF,CAAAA,QAAnB,CAA6B,CAC3B,GAAIV,CAAAA,WAAW,CAAGL,YAAY,CAACQ,IAAb,CAAkBH,WAAW,EAC7C,CAAC,CAACO,IAAD,EAASP,WAAW,CAACO,IAAZ,EAAoBA,IAAI,CAACH,IAAnC,IACC,CAACK,OAAD,EAAYT,WAAW,CAACS,OAAZ,EAAuBA,OAAO,CAACL,IAD5C,IAEC,CAACF,MAAD,EAAWF,WAAW,CAACE,MAAZ,EAAsBA,MAAM,CAACE,IAFzC,IAGC,CAACQ,OAAD,EAAYZ,WAAW,CAACY,OAAZ,EAAuBA,OAAO,CAACR,IAH5C,CADgB,CAAlB,CAOA,GAAIJ,WAAJ,CACE,MAAOA,CAAAA,WAAP,CACH,CAED,MAAO,KAAP,CACD,CAED,QAASM,CAAAA,kBAAT,CAA4BR,GAA5B,CAAiC,CAC/B,GAAIe,CAAAA,YAAY,CAAGf,GAAG,CACpBgB,MADiB,CACVC,IAAI,EAAIA,IAAI,CAACf,WADH,EAEjBJ,GAFiB,CAEbmB,IAAI,EAAIA,IAAI,CAACf,WAAL,CAAiBgB,KAFZ,EAGjBC,IAHiB,CAGZ,CAACC,CAAD,CAAIC,CAAJ,GAAWD,CAAC,CAAGC,CAHH,CAAnB,CAKA,GAAIjB,CAAAA,MAAM,CAAGJ,GAAG,CAACK,IAAJ,CAASY,IAAI,EAAIA,IAAI,CAACb,MAAtB,EAA8BA,MAA3C,CAEA,GAAIA,MAAM,CAACe,IAAP,EAAe,MAAnB,CACEJ,YAAY,CAAGA,YAAY,CAACF,OAAb,EAAf,CAEF,GAAIS,CAAAA,QAAQ,CAAGC,IAAI,CAACC,GAAL,CAAS,GAAGT,YAAZ,CAAf,CAEA,MAAOf,CAAAA,GAAG,CAACF,GAAJ,CAAQmB,IAAI,EAAI,CACrB,GAAIA,IAAI,CAACf,WAAT,CAAsB,CACpBe,IAAI,CAACQ,OAAL,CAAeR,IAAI,CAACf,WAAL,CAAiBgB,KAAjB,CAAyBI,QAAxC,CACAL,IAAI,CAACS,KAAL,CAAaX,YAAY,CAACY,OAAb,CAAqBV,IAAI,CAACf,WAAL,CAAiBgB,KAAtC,EAA+C,CAA5D,CACD,CAED,MAAOD,CAAAA,IAAP,CACD,CAPM,CAAP,CAQD","sourcesContent":["export default function buildRows(xAxis, yAxis, metrics, measurements) {\n  return yAxis.map(yAxisItem => {\n    let row = xAxis.map(xAxisItem => {\n      let measurement = fetchMeasurement(measurements, yAxisItem, xAxisItem);\n      let metric = measurement ? metrics.find(metric => (metric.slug == measurement.metric)) : null;\n\n      return {\n        _type: '__cell',\n        measurement: measurement,\n        metric: metric,\n        xAxisItem: xAxisItem,\n        yAxisItem: yAxisItem\n      }\n    });\n\n    return assignRankMetadata(row);\n  });\n}\n\nfunction fetchMeasurement(measurements, yAxisItem, xAxisItem) {\n  let test = yAxisItem.__type == \"test\" ? yAxisItem : null;\n  let subject = xAxisItem.__type == \"subject\" ? xAxisItem : null;\n  let metric = yAxisItem._type == \"metric\" ? yAxisItem : null;\n  let versions = xAxisItem == \"version\" ? [xAxisItem] : subject.versions.reverse();\n\n  for(let version of versions) {\n    let measurement = measurements.find(measurement => (\n      (!test || measurement.test == test.slug) &&\n      (!subject || measurement.subject == subject.slug) &&\n      (!metric || measurement.metric == metric.slug) &&\n      (!version || measurement.version == version.slug)\n    ));\n\n    if (measurement)\n      return measurement;\n  }\n\n  return null;\n}\n\nfunction assignRankMetadata(row) {\n  let sortedValues = row.\n    filter(cell => cell.measurement).\n    map(cell => cell.measurement.value).\n    sort((a, b) => (a - b));\n\n  let metric = row.find(cell => cell.metric).metric;\n\n  if (metric.sort == \"desc\")\n    sortedValues = sortedValues.reverse();\n\n  let maxValue = Math.max(...sortedValues);\n\n  return row.map(cell => {\n    if (cell.measurement) {\n      cell.percent = cell.measurement.value / maxValue;\n      cell.place = sortedValues.indexOf(cell.measurement.value) + 1;\n    }\n\n    return cell;\n  });\n}\n"]}]}