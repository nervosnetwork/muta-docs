{"remainingRequest":"/Users/Yun/vector/website/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/Yun/vector/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--10-2!/Users/Yun/vector/website/plugins/highlights/markdownLoader.js??ref--10-3!/Users/Yun/vector/website/highlights/2020-02-24-swimlanes-transform.md","dependencies":[{"path":"/Users/Yun/vector/website/highlights/2020-02-24-swimlanes-transform.md","mtime":1594780808704},{"path":"/Users/Yun/vector/website/.docusaurus/highlights/site-highlights-2020-02-24-swimlanes-transform-md-279.json","mtime":1594781224000},{"path":"/Users/Yun/vector/website/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/vector/website/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/vector/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/vector/website/plugins/highlights/markdownLoader.js","mtime":1594780808733}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL1l1bi92ZWN0b3Ivd2Vic2l0ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgY29uc3QgZnJvbnRNYXR0ZXI9e2xhc3RfbW9kaWZpZWRfb246JzIwMjAtMDQtMTMnLCRzY2hlbWE6Jy8ubWV0YS8uc2NoZW1hcy9oaWdobGlnaHRzLmpzb24nLHRpdGxlOidOZXcgU3dpbWxhbmVzIFRyYW5zZm9ybScsZGVzY3JpcHRpb246J1NwbGl0IGxvZyBzdHJlYW1zIHdpdGggZWFzZScsYXV0aG9yX2dpdGh1YjonaHR0cHM6Ly9naXRodWIuY29tL2JpbmFyeWxvZ2ljJyxwcl9udW1iZXJzOlsxNzg1XSxyZWxlYXNlOicwLjguMCcsaGlkZV9vbl9yZWxlYXNlX25vdGVzOmZhbHNlLHRhZ3M6Wyd0eXBlOiBuZXcgZmVhdHVyZScsJ2RvbWFpbjogdHJhbnNmb3JtcycsJ3RyYW5zZm9ybTogc3dpbWxhbmVzJ119O2V4cG9ydCBjb25zdCBtZXRhZGF0YT17ImRhdGUiOiIyMDIwLTAyLTI0VDAwOjAwOjAwLjAwMFoiLCJkZXNjcmlwdGlvbiI6IlNwbGl0IGxvZyBzdHJlYW1zIHdpdGggZWFzZSIsInBlcm1hbGluayI6Ii9oaWdobGlnaHRzLzIwMjAtMDItMjQtc3dpbWxhbmVzLXRyYW5zZm9ybSIsInJlYWRpbmdUaW1lIjoiMSBtaW4gcmVhZCIsInNvdXJjZSI6IkBzaXRlL2hpZ2hsaWdodHMvMjAyMC0wMi0yNC1zd2ltbGFuZXMtdHJhbnNmb3JtLm1kIiwidGFncyI6W3sibGFiZWwiOiJ0eXBlOiBuZXcgZmVhdHVyZSIsInBlcm1hbGluayI6Ii9oaWdobGlnaHRzL3RhZ3MvdHlwZS1uZXctZmVhdHVyZSJ9LHsibGFiZWwiOiJkb21haW46IHRyYW5zZm9ybXMiLCJwZXJtYWxpbmsiOiIvaGlnaGxpZ2h0cy90YWdzL2RvbWFpbi10cmFuc2Zvcm1zIn0seyJsYWJlbCI6InRyYW5zZm9ybTogc3dpbWxhbmVzIiwicGVybWFsaW5rIjoiL2hpZ2hsaWdodHMvdGFncy90cmFuc2Zvcm0tc3dpbWxhbmVzIn1dLCJ0aXRsZSI6Ik5ldyBTd2ltbGFuZXMgVHJhbnNmb3JtIiwidHJ1bmNhdGVkIjpmYWxzZSwicHJldkl0ZW0iOnsidGl0bGUiOiJOZXcgUmVuYW1lIEZpZWxkcyBUcmFuc2Zvcm0iLCJwZXJtYWxpbmsiOiIvaGlnaGxpZ2h0cy8yMDIwLTAyLTI0LXJlbmFtZS1maWVsZHMtdHJhbnNmb3JtIn0sIm5leHRJdGVtIjp7InRpdGxlIjoiSW1wcm92ZWQgTXVsdGlsaW5lIFN1cHBvcnQgSW4gVGhlIEZpbGUgU291cmNlIiwicGVybWFsaW5rIjoiL2hpZ2hsaWdodHMvMjAyMC0wMi0yMS1maWxlLXNvdXJjZS1tdWx0aWxpbmUtc3VwcG9ydCJ9fTsvKiBAanN4IG1keCAqL2V4cG9ydCBjb25zdCByaWdodFRvYz1bXTtjb25zdCBtYWtlU2hvcnRjb2RlPW5hbWU9PmZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O2NvbnN0IGxheW91dFByb3BzPXtyaWdodFRvY307Y29uc3QgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtjb21wb25lbnRzLC4uLnByb3BzfSl7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJwIixudWxsLGBUaGUgbmV3IGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Ii9kb2NzL3JlZmVyZW5jZS90cmFuc2Zvcm1zL3N3aW1sYW5lcy8ifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LGBzd2ltbGFuZXNgKSxgIHRyYW5zZm9ybWApLGAgbWFrZXMgaXQgbXVjaCBlYXNpZXIKdG8gY29uZmlndXJlIGNvbmRpdGlvbmFsIGJyYW5jaGVzIG9mIHRyYW5zZm9ybXMgYW5kIHNpbmtzLiBGb3IgZXhhbXBsZSwgeW91IGNhbgplYXNpbHkgY3JlYXRlIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Ii9kb2NzL3JlZmVyZW5jZS90cmFuc2Zvcm1zL3N3aW1sYW5lcy8jZXhhbXBsZXMifSksYGlmL2Vsc2UgcGlwZWxpbmVzYCksYC5gKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXRvbWwiLCJtZXRhc3RyaW5nIjoidGl0bGU9XCJ2ZWN0b3IudG9tbFwiIiwidGl0bGUiOiJcInZlY3Rvci50b21sXCIifSksYFt0cmFuc2Zvcm1zLmxhbmVzXQogIHR5cGVzID0gInN3aW1sYW5lcyIKCiAgW3RyYW5zZm9ybXMubXlfdHJhbnNmb3JtX2lkLmxhbmVzLmVycm9yc10KICAgICJsZXZlbC5lcSIgPSAiZXJyb3IiCgogIFt0cmFuc2Zvcm1zLm15X3RyYW5zZm9ybV9pZC5sYW5lcy5ub3RfZXJyb3JzXQogICAgImxldmVsLm5lcSIgPSAiZXJyb3IiCmApKSxtZHgoInAiLG51bGwsYFJlbWVtYmVyIHRvIG9jY2FzaW9uYWxseSBsZXQgeW91ciBicmFuY2hlcyBtaW5nbGUgc28gdGhhdCB0aGV5IGRvbid0IGNvbXBsZXRlbHkKbG9zZSB0b3VjaC5gKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/Yun/vector/website/highlights/2020-02-24-swimlanes-transform.md"],"names":["React","mdx","frontMatter","last_modified_on","$schema","title","description","author_github","pr_numbers","release","hide_on_release_notes","tags","metadata","rightToc","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"gGACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,gBAAgB,CAAE,YADU,CAE5BC,OAAO,CAAE,iCAFmB,CAG5BC,KAAK,CAAE,yBAHqB,CAI5BC,WAAW,CAAE,6BAJe,CAK5BC,aAAa,CAAE,gCALa,CAM5BC,UAAU,CAAE,CACX,IADW,CANgB,CAS5BC,OAAO,CAAE,OATmB,CAU5BC,qBAAqB,CAAE,KAVK,CAW5BC,IAAI,CAAE,CACL,mBADK,CAEL,oBAFK,CAGL,sBAHK,CAXsB,CAApB,CAiBT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,OAAQ,0BADc,CAEtB,cAAe,6BAFO,CAGtB,YAAa,4CAHS,CAItB,cAAe,YAJO,CAKtB,SAAU,oDALY,CAMtB,OAAQ,CACN,CACE,QAAS,mBADX,CAEE,YAAa,mCAFf,CADM,CAKN,CACE,QAAS,oBADX,CAEE,YAAa,oCAFf,CALM,CASN,CACE,QAAS,sBADX,CAEE,YAAa,sCAFf,CATM,CANc,CAoBtB,QAAS,yBApBa,CAqBtB,YAAa,KArBS,CAsBtB,WAAY,CACV,QAAS,6BADC,CAEV,YAAa,gDAFH,CAtBU,CA0BtB,WAAY,CACV,QAAS,+CADC,CAEV,YAAa,sDAFH,CA1BU,CAAjB,CA+BL,cAEF,MAAO,MAAMC,CAAAA,QAAQ,CAAG,EAAjB,CACP,KAAMC,CAAAA,aAAa,CAAGC,IAAI,EAAI,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHD,CAKA,KAAMG,CAAAA,WAAW,CAAG,CAClBP,QADkB,CAApB,CAGA,KAAMQ,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGN,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,aAAK,UAAL,CAAe,kBAAG,UAAU,CAAC,GAAd,EAAsB,CACjC,OAAQ,uCADyB,CAAtB,EAEV,kBAAY,UAAU,CAAC,GAAvB,EAA6B,WAA7B,CAFU,CAE6C,YAF7C,CAAf,CAE8E;;eAF9E,CAIY,kBAAG,UAAU,CAAC,GAAd,EAAsB,CAC9B,OAAQ,gDADsB,CAAtB,EAEL,mBAFK,CAJZ,CAMgC,GANhC,CAFK,CASL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAE5B,aAAc,uBAFc,CAG5B,QAAS,iBAHmB,CAA3B,EAIE;;;;;;;;CAJF,CAAL,CATK,CAsBL,aAAK;YAAL,CAtBK,CAAP,CAyBD,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tlast_modified_on: '2020-04-13',\n\t$schema: '/.meta/.schemas/highlights.json',\n\ttitle: 'New Swimlanes Transform',\n\tdescription: 'Split log streams with ease',\n\tauthor_github: 'https://github.com/binarylogic',\n\tpr_numbers: [\n\t\t1785\n\t],\n\trelease: '0.8.0',\n\thide_on_release_notes: false,\n\ttags: [\n\t\t'type: new feature',\n\t\t'domain: transforms',\n\t\t'transform: swimlanes'\n\t]\n};\nexport const metadata = {\n  \"date\": \"2020-02-24T00:00:00.000Z\",\n  \"description\": \"Split log streams with ease\",\n  \"permalink\": \"/highlights/2020-02-24-swimlanes-transform\",\n  \"readingTime\": \"1 min read\",\n  \"source\": \"@site/highlights/2020-02-24-swimlanes-transform.md\",\n  \"tags\": [\n    {\n      \"label\": \"type: new feature\",\n      \"permalink\": \"/highlights/tags/type-new-feature\"\n    },\n    {\n      \"label\": \"domain: transforms\",\n      \"permalink\": \"/highlights/tags/domain-transforms\"\n    },\n    {\n      \"label\": \"transform: swimlanes\",\n      \"permalink\": \"/highlights/tags/transform-swimlanes\"\n    }\n  ],\n  \"title\": \"New Swimlanes Transform\",\n  \"truncated\": false,\n  \"prevItem\": {\n    \"title\": \"New Rename Fields Transform\",\n    \"permalink\": \"/highlights/2020-02-24-rename-fields-transform\"\n  },\n  \"nextItem\": {\n    \"title\": \"Improved Multiline Support In The File Source\",\n    \"permalink\": \"/highlights/2020-02-21-file-source-multiline-support\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`The new `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/reference/transforms/swimlanes/\"\n      }}><inlineCode parentName=\"a\">{`swimlanes`}</inlineCode>{` transform`}</a>{` makes it much easier\nto configure conditional branches of transforms and sinks. For example, you can\neasily create `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/reference/transforms/swimlanes/#examples\"\n      }}>{`if/else pipelines`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-toml\",\n        \"metastring\": \"title=\\\"vector.toml\\\"\",\n        \"title\": \"\\\"vector.toml\\\"\"\n      }}>{`[transforms.lanes]\n  types = \"swimlanes\"\n\n  [transforms.my_transform_id.lanes.errors]\n    \"level.eq\" = \"error\"\n\n  [transforms.my_transform_id.lanes.not_errors]\n    \"level.neq\" = \"error\"\n`}</code></pre>\n    <p>{`Remember to occasionally let your branches mingle so that they don't completely\nlose touch.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}