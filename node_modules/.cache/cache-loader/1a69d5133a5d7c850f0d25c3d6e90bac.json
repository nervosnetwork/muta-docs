{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--10-2!/Users/Yun/Desktop/vdocs/website/plugins/highlights/markdownLoader.js??ref--10-3!/Users/Yun/Desktop/vdocs/website/highlights/2020-02-05-merge-partial-docker-events.md?truncated=true","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/highlights/2020-02-05-merge-partial-docker-events.md","mtime":1594780808691},{"path":"/Users/Yun/Desktop/vdocs/website/.docusaurus/highlights/site-highlights-2020-02-05-merge-partial-docker-events-md-142.json","mtime":1594984776050},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/Desktop/vdocs/website/plugins/highlights/markdownLoader.js","mtime":1594780808733}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL1l1bi9EZXNrdG9wL3Zkb2NzL3dlYnNpdGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXtsYXN0X21vZGlmaWVkX29uOicyMDIwLTA3LTEzJywkc2NoZW1hOicvLm1ldGEvLnNjaGVtYXMvaGlnaGxpZ2h0cy5qc29uJyx0aXRsZTonQXV0b21hdGljYWxseSBtZXJnZSBwYXJ0aWFsIERvY2tlciBldmVudHMnLGRlc2NyaXB0aW9uOidEb2NrZXIgc3BsaXRzIGxvbmcgbWVzc2FnZXMgYnkgZGVmYXVsdCwgYW5kIG5vdyBWZWN0b3IgbWVyZ2VzIHRoZW0gYmFjayBmb3IgeW91JyxhdXRob3JfZ2l0aHViOidodHRwczovL2dpdGh1Yi5jb20vYmluYXJ5bG9naWMnLHByX251bWJlcnM6WzE0NTddLHJlbGVhc2U6JzAuOC4wJyxoaWRlX29uX3JlbGVhc2Vfbm90ZXM6ZmFsc2UsdGFnczpbJ3R5cGU6IGVuaGFuY2VtZW50JywnZG9tYWluOiBzb3VyY2VzJywnc291cmNlOiBkb2NrZXInLCdwbGF0Zm9ybTogZG9ja2VyJ119O2V4cG9ydCBjb25zdCBtZXRhZGF0YT17ImRhdGUiOiIyMDIwLTAyLTA1VDAwOjAwOjAwLjAwMFoiLCJkZXNjcmlwdGlvbiI6IkRvY2tlciBzcGxpdHMgbG9uZyBtZXNzYWdlcyBieSBkZWZhdWx0LCBhbmQgbm93IFZlY3RvciBtZXJnZXMgdGhlbSBiYWNrIGZvciB5b3UiLCJwZXJtYWxpbmsiOiIvaGlnaGxpZ2h0cy8yMDIwLTAyLTA1LW1lcmdlLXBhcnRpYWwtZG9ja2VyLWV2ZW50cyIsInJlYWRpbmdUaW1lIjoiMSBtaW4gcmVhZCIsInNvdXJjZSI6IkBzaXRlL2hpZ2hsaWdodHMvMjAyMC0wMi0wNS1tZXJnZS1wYXJ0aWFsLWRvY2tlci1ldmVudHMubWQiLCJ0YWdzIjpbeyJsYWJlbCI6InR5cGU6IGVuaGFuY2VtZW50IiwicGVybWFsaW5rIjoiL2hpZ2hsaWdodHMvdGFncy90eXBlLWVuaGFuY2VtZW50In0seyJsYWJlbCI6ImRvbWFpbjogc291cmNlcyIsInBlcm1hbGluayI6Ii9oaWdobGlnaHRzL3RhZ3MvZG9tYWluLXNvdXJjZXMifSx7ImxhYmVsIjoic291cmNlOiBkb2NrZXIiLCJwZXJtYWxpbmsiOiIvaGlnaGxpZ2h0cy90YWdzL3NvdXJjZS1kb2NrZXIifSx7ImxhYmVsIjoicGxhdGZvcm06IGRvY2tlciIsInBlcm1hbGluayI6Ii9oaWdobGlnaHRzL3RhZ3MvcGxhdGZvcm0tZG9ja2VyIn1dLCJ0aXRsZSI6IkF1dG9tYXRpY2FsbHkgbWVyZ2UgcGFydGlhbCBEb2NrZXIgZXZlbnRzIiwidHJ1bmNhdGVkIjpmYWxzZSwicHJldkl0ZW0iOnsidGl0bGUiOiJBV1Mgc3BlY2lmaWMgb3B0aW9ucyBoYXZlIGJlZW4gZHJvcHBlZCBpbiB0aGUgRWxhc3RpY3NlYXJjaCBzaW5rIiwicGVybWFsaW5rIjoiL2hpZ2hsaWdodHMvMjAyMC0wMi0wNS1kcm9wLWF3cy1vcHRpb25zIn0sIm5leHRJdGVtIjp7InRpdGxlIjoiVGhlIGBzcGx1bmtfaGVjYCBzaW5rIGRvZXMgbm90IGluZGV4IGZpZWxkcyBieSBkZWZhdWx0IiwicGVybWFsaW5rIjoiL2hpZ2hsaWdodHMvMjAyMC0wMS0yMC1zcGx1bmstaGVjLXNwZWNpZnktaW5kZXhlZC1maWVsZHMifX07LyogQGpzeCBtZHggKi9leHBvcnQgY29uc3QgcmlnaHRUb2M9W107Y29uc3QgbWFrZVNob3J0Y29kZT1uYW1lPT5mdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTtjb25zdCBsYXlvdXRQcm9wcz17cmlnaHRUb2N9O2NvbnN0IE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7Y29tcG9uZW50cywuLi5wcm9wc30pe3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgicCIsbnVsbCxgQW55b25lIHRoYXQgd2FzIHdvcmtlZCB3aXRoIERvY2tlciBsb2dzIGtub3dzIGhvdyBmcnVzdHJhdGluZyB0aGlzIHByb2JsZW0KY2FuIGJlLiBEb2NrZXIsIGJ5IGRlZmF1bHQsIHNwbGl0cyBsb2cgbWVzc2FnZXMgdGhhdCBleGNlZWQgMTZrYi4gV2hpbGUgMTZrYgpzZWVtcyBsaWtlIGEgbG90LCBpdCBjYW4gZWFzaWx5IGJlIGV4Y2VlZGVkIGlmIHlvdSdyZSBsb2dnaW5nIHJpY2ggc3RydWN0dXJlZApldmVudHMuIFRoaXMgY2FuIGJlIGEgdmVyeSBkaWZmaWN1bHQgYW5kIGZydXN0cmF0aW5nIHByb2JsZW0gdG8gc29sdmUgd2l0aApvdGhlciB0b29scyAod2Ugc3BlYWsgZnJvbSBleHBlcmllbmNlKS4gSW4gdGhpcyByZWxlYXNlIFZlY3RvciBzb2x2ZXMgdGhpcwphdXRvbWF0aWNhbGx5IHdpdGggYSBuZXcgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYGF1dG9fcGFydGlhbF9tZXJnZWApLGAgb3B0aW9uIGluIHRoZSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgZG9ja2VyYCksYCBzb3VyY2UuYCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS10b21sIiwibWV0YXN0cmluZyI6InRpdGxlPVwidmVjdG9yLnRvbWxcIiIsInRpdGxlIjoiXCJ2ZWN0b3IudG9tbFwiIn0pLGBbc291cmNlcy5teV9zb3VyY2VfaWRdCiAgdHlwZSA9ICJkb2NrZXIiCiAgYXV0b19wYXJ0aWFsX21lcmdlID0gdHJ1ZQpgKSksbWR4KCJwIixudWxsLGBXZSBsb3ZlIGFzc2ltaWxhdGlvbiBhbmQgbG9vayBmb3J3YXJkIHRvIGEgZnV0dXJlIHdoZXJlIG91ciBpbmRpdmlkdWFsaXN0aWMKaHVtYW4gcGVyc29uYWxpdGllcyBjYW4gYWxzbyBiZSBtZXJnZWQgaW50byBhIHNvY2lldGFsIGhpdmUgbWluZC5gKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/Yun/Desktop/vdocs/website/highlights/2020-02-05-merge-partial-docker-events.md"],"names":["React","mdx","frontMatter","last_modified_on","$schema","title","description","author_github","pr_numbers","release","hide_on_release_notes","tags","metadata","rightToc","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"uGACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,gBAAgB,CAAE,YADU,CAE5BC,OAAO,CAAE,iCAFmB,CAG5BC,KAAK,CAAE,2CAHqB,CAI5BC,WAAW,CAAE,iFAJe,CAK5BC,aAAa,CAAE,gCALa,CAM5BC,UAAU,CAAE,CACX,IADW,CANgB,CAS5BC,OAAO,CAAE,OATmB,CAU5BC,qBAAqB,CAAE,KAVK,CAW5BC,IAAI,CAAE,CACL,mBADK,CAEL,iBAFK,CAGL,gBAHK,CAIL,kBAJK,CAXsB,CAApB,CAkBT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,OAAQ,0BADc,CAEtB,cAAe,iFAFO,CAGtB,YAAa,oDAHS,CAItB,cAAe,YAJO,CAKtB,SAAU,4DALY,CAMtB,OAAQ,CACN,CACE,QAAS,mBADX,CAEE,YAAa,mCAFf,CADM,CAKN,CACE,QAAS,iBADX,CAEE,YAAa,iCAFf,CALM,CASN,CACE,QAAS,gBADX,CAEE,YAAa,gCAFf,CATM,CAaN,CACE,QAAS,kBADX,CAEE,YAAa,kCAFf,CAbM,CANc,CAwBtB,QAAS,2CAxBa,CAyBtB,YAAa,KAzBS,CA0BtB,WAAY,CACV,QAAS,kEADC,CAEV,YAAa,yCAFH,CA1BU,CA8BtB,WAAY,CACV,QAAS,wDADC,CAEV,YAAa,0DAFH,CA9BU,CAAjB,CAmCL,cAEF,MAAO,MAAMC,CAAAA,QAAQ,CAAG,EAAjB,CACP,KAAMC,CAAAA,aAAa,CAAGC,IAAI,EAAI,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHD,CAKA,KAAMG,CAAAA,WAAW,CAAG,CAClBP,QADkB,CAApB,CAGA,KAAMQ,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGN,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,aAAK;;;;;0BAAL,CAKuB,kBAAY,UAAU,CAAC,GAAvB,EAA6B,oBAA7B,CALvB,CAKuF,iBALvF,CAKwG,kBAAY,UAAU,CAAC,GAAvB,EAA6B,QAA7B,CALxG,CAK4J,UAL5J,CAFK,CAQL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAE5B,aAAc,uBAFc,CAG5B,QAAS,iBAHmB,CAA3B,EAIE;;;CAJF,CAAL,CARK,CAgBL,aAAK;kEAAL,CAhBK,CAAP,CAmBD,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tlast_modified_on: '2020-07-13',\n\t$schema: '/.meta/.schemas/highlights.json',\n\ttitle: 'Automatically merge partial Docker events',\n\tdescription: 'Docker splits long messages by default, and now Vector merges them back for you',\n\tauthor_github: 'https://github.com/binarylogic',\n\tpr_numbers: [\n\t\t1457\n\t],\n\trelease: '0.8.0',\n\thide_on_release_notes: false,\n\ttags: [\n\t\t'type: enhancement',\n\t\t'domain: sources',\n\t\t'source: docker',\n\t\t'platform: docker'\n\t]\n};\nexport const metadata = {\n  \"date\": \"2020-02-05T00:00:00.000Z\",\n  \"description\": \"Docker splits long messages by default, and now Vector merges them back for you\",\n  \"permalink\": \"/highlights/2020-02-05-merge-partial-docker-events\",\n  \"readingTime\": \"1 min read\",\n  \"source\": \"@site/highlights/2020-02-05-merge-partial-docker-events.md\",\n  \"tags\": [\n    {\n      \"label\": \"type: enhancement\",\n      \"permalink\": \"/highlights/tags/type-enhancement\"\n    },\n    {\n      \"label\": \"domain: sources\",\n      \"permalink\": \"/highlights/tags/domain-sources\"\n    },\n    {\n      \"label\": \"source: docker\",\n      \"permalink\": \"/highlights/tags/source-docker\"\n    },\n    {\n      \"label\": \"platform: docker\",\n      \"permalink\": \"/highlights/tags/platform-docker\"\n    }\n  ],\n  \"title\": \"Automatically merge partial Docker events\",\n  \"truncated\": false,\n  \"prevItem\": {\n    \"title\": \"AWS specific options have been dropped in the Elasticsearch sink\",\n    \"permalink\": \"/highlights/2020-02-05-drop-aws-options\"\n  },\n  \"nextItem\": {\n    \"title\": \"The `splunk_hec` sink does not index fields by default\",\n    \"permalink\": \"/highlights/2020-01-20-splunk-hec-specify-indexed-fields\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`Anyone that was worked with Docker logs knows how frustrating this problem\ncan be. Docker, by default, splits log messages that exceed 16kb. While 16kb\nseems like a lot, it can easily be exceeded if you're logging rich structured\nevents. This can be a very difficult and frustrating problem to solve with\nother tools (we speak from experience). In this release Vector solves this\nautomatically with a new `}<inlineCode parentName=\"p\">{`auto_partial_merge`}</inlineCode>{` option in the `}<inlineCode parentName=\"p\">{`docker`}</inlineCode>{` source.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-toml\",\n        \"metastring\": \"title=\\\"vector.toml\\\"\",\n        \"title\": \"\\\"vector.toml\\\"\"\n      }}>{`[sources.my_source_id]\n  type = \"docker\"\n  auto_partial_merge = true\n`}</code></pre>\n    <p>{`We love assimilation and look forward to a future where our individualistic\nhuman personalities can also be merged into a societal hive mind.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}