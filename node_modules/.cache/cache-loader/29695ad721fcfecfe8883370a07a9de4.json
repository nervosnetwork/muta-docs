{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--10-2!/Users/Yun/Desktop/vdocs/website/plugins/highlights/markdownLoader.js??ref--10-3!/Users/Yun/Desktop/vdocs/website/highlights/2020-02-21-file-source-multiline-support.md","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/highlights/2020-02-21-file-source-multiline-support.md","mtime":1594780808702},{"path":"/Users/Yun/Desktop/vdocs/website/.docusaurus/highlights/site-highlights-2020-02-21-file-source-multiline-support-md-fc5.json","mtime":1594985066005},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/Desktop/vdocs/website/plugins/highlights/markdownLoader.js","mtime":1594780808733}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL1l1bi9EZXNrdG9wL3Zkb2NzL3dlYnNpdGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXtsYXN0X21vZGlmaWVkX29uOicyMDIwLTA0LTE0Jywkc2NoZW1hOicvLm1ldGEvLnNjaGVtYXMvaGlnaGxpZ2h0cy5qc29uJyx0aXRsZTonSW1wcm92ZWQgTXVsdGlsaW5lIFN1cHBvcnQgSW4gVGhlIEZpbGUgU291cmNlJyxkZXNjcmlwdGlvbjonTWVyZ2UgbXVsdGlwbGUgbGluZXMgdG9nZXRoZXIgYmFzZWQgb24gcnVsZXMnLGF1dGhvcl9naXRodWI6J2h0dHBzOi8vZ2l0aHViLmNvbS9iaW5hcnlsb2dpYycscHJfbnVtYmVyczpbMTg1Ml0scmVsZWFzZTonMC44LjAnLGhpZGVfb25fcmVsZWFzZV9ub3RlczpmYWxzZSx0YWdzOlsndHlwZTogZW5oYW5jZW1lbnQnLCdkb21haW46IHNvdXJjZXMnLCdzb3VyY2U6IGZpbGUnXX07ZXhwb3J0IGNvbnN0IG1ldGFkYXRhPXsiZGF0ZSI6IjIwMjAtMDItMjFUMDA6MDA6MDAuMDAwWiIsImRlc2NyaXB0aW9uIjoiTWVyZ2UgbXVsdGlwbGUgbGluZXMgdG9nZXRoZXIgYmFzZWQgb24gcnVsZXMiLCJwZXJtYWxpbmsiOiIvaGlnaGxpZ2h0cy8yMDIwLTAyLTIxLWZpbGUtc291cmNlLW11bHRpbGluZS1zdXBwb3J0IiwicmVhZGluZ1RpbWUiOiIxIG1pbiByZWFkIiwic291cmNlIjoiQHNpdGUvaGlnaGxpZ2h0cy8yMDIwLTAyLTIxLWZpbGUtc291cmNlLW11bHRpbGluZS1zdXBwb3J0Lm1kIiwidGFncyI6W3sibGFiZWwiOiJ0eXBlOiBlbmhhbmNlbWVudCIsInBlcm1hbGluayI6Ii9oaWdobGlnaHRzL3RhZ3MvdHlwZS1lbmhhbmNlbWVudCJ9LHsibGFiZWwiOiJkb21haW46IHNvdXJjZXMiLCJwZXJtYWxpbmsiOiIvaGlnaGxpZ2h0cy90YWdzL2RvbWFpbi1zb3VyY2VzIn0seyJsYWJlbCI6InNvdXJjZTogZmlsZSIsInBlcm1hbGluayI6Ii9oaWdobGlnaHRzL3RhZ3Mvc291cmNlLWZpbGUifV0sInRpdGxlIjoiSW1wcm92ZWQgTXVsdGlsaW5lIFN1cHBvcnQgSW4gVGhlIEZpbGUgU291cmNlIiwidHJ1bmNhdGVkIjpmYWxzZSwicHJldkl0ZW0iOnsidGl0bGUiOiJOZXcgU3dpbWxhbmVzIFRyYW5zZm9ybSIsInBlcm1hbGluayI6Ii9oaWdobGlnaHRzLzIwMjAtMDItMjQtc3dpbWxhbmVzLXRyYW5zZm9ybSJ9LCJuZXh0SXRlbSI6eyJ0aXRsZSI6IkxvdHMgb2YgTmV3IFNpbmtzISIsInBlcm1hbGluayI6Ii9oaWdobGlnaHRzLzIwMjAtMDItMjAtbmV3LXNpbmtzIn19Oy8qIEBqc3ggbWR4ICovZXhwb3J0IGNvbnN0IHJpZ2h0VG9jPVtdO2NvbnN0IG1ha2VTaG9ydGNvZGU9bmFtZT0+ZnVuY3Rpb24gTURYRGVmYXVsdFNob3J0Y29kZShwcm9wcyl7Y29uc29sZS53YXJuKCJDb21wb25lbnQgIituYW1lKyIgd2FzIG5vdCBpbXBvcnRlZCwgZXhwb3J0ZWQsIG9yIHByb3ZpZGVkIGJ5IE1EWFByb3ZpZGVyIGFzIGdsb2JhbCBzY29wZSIpO3JldHVybiBtZHgoImRpdiIscHJvcHMpO307Y29uc3QgbGF5b3V0UHJvcHM9e3JpZ2h0VG9jfTtjb25zdCBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe2NvbXBvbmVudHMsLi4ucHJvcHN9KXtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoInAiLG51bGwsYE9uZSBvZiB0aGUgYmlnZ2VzdCBmcnVzdHJhdGlvbnMgd2UndmUgaGVhcmQgZnJvbSB1c2VycyBpbiB0aGlzIHNwYWNlIGlzIHRoZQppbmFiaWxpdHkgdG8gbWVyZ2UgbGluZXMgdG9nZXRoZXIuIFN1Y2ggYSBzaW1wbGUgdGFzayBjYW4gYmUgaW5jcmVkaWJseQpjb21wbGV4IGFuZCBoYXJkLiBGZWFyIG5vdCEgV2UgcGxhbiB0byBhZGQgZmlyc3QtY2xhc3Mgc3VwcG9ydCBmb3Igc29sdmluZwp0aGlzIHByb2JsZW0uYCksbWR4KCJwIixudWxsLGBJbiBhZGRpdGlvbiB0byB0aGUgcmVjZW50bHkgYWRkZWQgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiL2RvY3MvcmVmZXJlbmNlL3NvdXJjZXMvZG9ja2VyLyNhdXRvX3BhcnRpYWxfbWVyZ2UifSksYGF1dG9tYXRpYyBtZXJnaW5nIG9mIERvY2tlcgpsb2dzYCksYCwgd2UgYWxzbyBhZGRlZCBbYmV0dGVyIG11bHRpbGluZQpgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIvZG9jcy9yZWZlcmVuY2Uvc291cmNlcy9maWxlLyNtdWx0aWxpbmUifSksYHN1cHBvcnRgKSxgIHRvIG91ciBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIvZG9jcy9yZWZlcmVuY2Uvc291cmNlcy9maWxlLyJ9KSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJhIn0sYGZpbGVgKSxgIHNvdXJjZWApLGAuClRoZXNlIG9wdGlvbnMgYXJlIHZlcnkgZXhwcmVzc2l2ZSBhbmQgc2hvdWxkIHNvbHZlIHRoZSB2YXN0IG1ham9yaXR5IG9mCm11bHRpbGluZSBtZXJnaW5nIHByb2JsZW1zLmApLG1keCgicCIsbnVsbCxgRm9yIGV4YW1wbGUuIEdpdmVuIHRoZSBmb2xsb3dpbmcgbGluZXM6YCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS10ZXh0In0pLGBmb29iYXIucmI6NjppbiBcYC8nOiBkaXZpZGVkIGJ5IDAgKFplcm9EaXZpc2lvbkVycm9yKQogIGZyb20gZm9vYmFyLnJiOjY6aW4gXGBiYXInCiAgZnJvbSBmb29iYXIucmI6MjppbiBcYGZvbycKICBmcm9tIGZvb2Jhci5yYjo5OmluIFxgPG1haW4+JwpgKSksbWR4KCJwIixudWxsLGBZb3UgY2FuIG1lcmdlIHRoZW0gd2l0aCB0aGUgZm9sbG93aW5nIGNvbmZpZzpgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXRvbWwiLCJtZXRhc3RyaW5nIjoidGl0bGU9XCJ2ZWN0b3IudG9tbFwiIiwidGl0bGUiOiJcInZlY3Rvci50b21sXCIifSksYFtzb3VyY2VzLm15X2ZpbGVfc291cmNlXQogIHR5cGUgPSAiZmlsZSIKICAjIC4uLgoKICBbc291cmNlcy5teV9maWxlX3NvdXJjZS5tdWx0aWxpbmVdCiAgICBzdGFydF9wYXR0ZXJuID0gIl5bXlxcXFxzXSIKICAgIG1vZGUgPSAiY29udGludWVfdGhyb3VnaCIKICAgIGNvbmRpdGlvbl9wYXR0ZXJuID0gIl5bXFxcXHNdK2Zyb20iCiAgICB0aW1lb3V0X21zID0gMTAwMApgKSksbWR4KCJwIixudWxsLGBBbmQgaWYgdGhpcyBkb2Vzbid0IGRvIGl0LCB5b3UgY2FuIGFsd2F5cyBmYWxsYmFjawp0byBvdXIgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiL2RvY3MvcmVmZXJlbmNlL3RyYW5zZm9ybXMvbHVhLyJ9KSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJhIn0sYGx1YWApLGAgdHJhbnNmb3JtYCksYC5gKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/Yun/Desktop/vdocs/website/highlights/2020-02-21-file-source-multiline-support.md"],"names":["React","mdx","frontMatter","last_modified_on","$schema","title","description","author_github","pr_numbers","release","hide_on_release_notes","tags","metadata","rightToc","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tlast_modified_on: '2020-04-14',\n\t$schema: '/.meta/.schemas/highlights.json',\n\ttitle: 'Improved Multiline Support In The File Source',\n\tdescription: 'Merge multiple lines together based on rules',\n\tauthor_github: 'https://github.com/binarylogic',\n\tpr_numbers: [\n\t\t1852\n\t],\n\trelease: '0.8.0',\n\thide_on_release_notes: false,\n\ttags: [\n\t\t'type: enhancement',\n\t\t'domain: sources',\n\t\t'source: file'\n\t]\n};\nexport const metadata = {\n  \"date\": \"2020-02-21T00:00:00.000Z\",\n  \"description\": \"Merge multiple lines together based on rules\",\n  \"permalink\": \"/highlights/2020-02-21-file-source-multiline-support\",\n  \"readingTime\": \"1 min read\",\n  \"source\": \"@site/highlights/2020-02-21-file-source-multiline-support.md\",\n  \"tags\": [\n    {\n      \"label\": \"type: enhancement\",\n      \"permalink\": \"/highlights/tags/type-enhancement\"\n    },\n    {\n      \"label\": \"domain: sources\",\n      \"permalink\": \"/highlights/tags/domain-sources\"\n    },\n    {\n      \"label\": \"source: file\",\n      \"permalink\": \"/highlights/tags/source-file\"\n    }\n  ],\n  \"title\": \"Improved Multiline Support In The File Source\",\n  \"truncated\": false,\n  \"prevItem\": {\n    \"title\": \"New Swimlanes Transform\",\n    \"permalink\": \"/highlights/2020-02-24-swimlanes-transform\"\n  },\n  \"nextItem\": {\n    \"title\": \"Lots of New Sinks!\",\n    \"permalink\": \"/highlights/2020-02-20-new-sinks\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`One of the biggest frustrations we've heard from users in this space is the\ninability to merge lines together. Such a simple task can be incredibly\ncomplex and hard. Fear not! We plan to add first-class support for solving\nthis problem.`}</p>\n    <p>{`In addition to the recently added `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/reference/sources/docker/#auto_partial_merge\"\n      }}>{`automatic merging of Docker\nlogs`}</a>{`, we also added [better multiline\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/reference/sources/file/#multiline\"\n      }}>{`support`}</a>{` to our `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/reference/sources/file/\"\n      }}><inlineCode parentName=\"a\">{`file`}</inlineCode>{` source`}</a>{`.\nThese options are very expressive and should solve the vast majority of\nmultiline merging problems.`}</p>\n    <p>{`For example. Given the following lines:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`foobar.rb:6:in \\`/': divided by 0 (ZeroDivisionError)\n  from foobar.rb:6:in \\`bar'\n  from foobar.rb:2:in \\`foo'\n  from foobar.rb:9:in \\`<main>'\n`}</code></pre>\n    <p>{`You can merge them with the following config:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-toml\",\n        \"metastring\": \"title=\\\"vector.toml\\\"\",\n        \"title\": \"\\\"vector.toml\\\"\"\n      }}>{`[sources.my_file_source]\n  type = \"file\"\n  # ...\n\n  [sources.my_file_source.multiline]\n    start_pattern = \"^[^\\\\\\\\s]\"\n    mode = \"continue_through\"\n    condition_pattern = \"^[\\\\\\\\s]+from\"\n    timeout_ms = 1000\n`}</code></pre>\n    <p>{`And if this doesn't do it, you can always fallback\nto our `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/reference/transforms/lua/\"\n      }}><inlineCode parentName=\"a\">{`lua`}</inlineCode>{` transform`}</a>{`.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}