{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/node_modules/babel-loader/lib/index.js??ref--9-1!/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--9-2!/Users/Yun/Desktop/vdocs/website/plugins/guides/markdownLoader.js??ref--9-3!/Users/Yun/Desktop/vdocs/website/guides/advanced/1parsing-csv-logs-with-lua.md","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/guides/advanced/1parsing-csv-logs-with-lua.md","mtime":1594983873340},{"path":"/Users/Yun/Desktop/vdocs/website/.docusaurus/guides/site-guides-advanced-1-parsing-csv-logs-with-lua-md-128.json","mtime":1594983878227},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/Desktop/vdocs/website/plugins/guides/markdownLoader.js","mtime":1594780808724}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Yun/Desktop/vdocs/website/guides/advanced/1parsing-csv-logs-with-lua.md"],"names":["React","mdx","frontMatter","last_modified_on","$schema","title","description","author_github","tags","metadata","Assumptions","rightToc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tlast_modified_on: '2020-07-13',\n\t$schema: '/.meta/.schemas/guides.json',\n\ttitle: 'Parsing CSV logs with Lua',\n\tdescription: 'Parse structured application logs in CSV format using Lua transform',\n\tauthor_github: 'https://github.com/a-rodin',\n\ttags: [\n\t\t'type: guide',\n\t\t'domain: transforms',\n\t\t'transform: lua'\n\t]\n};\nexport const metadata = {\n  \"categories\": [\n    {\n      \"name\": \"advanced\",\n      \"title\": \"Advanced\",\n      \"description\": \"Go the basics, become a Vector pro, and extract the full potential of Vector.\",\n      \"permalink\": \"/guides/advanced\"\n    }\n  ],\n  \"coverLabel\": \"Parsing CSV logs with Lua\",\n  \"description\": \"Parse structured application logs in CSV format using Lua transform\",\n  \"permalink\": \"/guides/advanced/1parsing-csv-logs-with-lua\",\n  \"readingTime\": \"6 min read\",\n  \"source\": \"@site/guides/advanced/1parsing-csv-logs-with-lua.md\",\n  \"tags\": [\n    {\n      \"label\": \"type: guide\",\n      \"permalink\": \"/guides/tags/type-guide\"\n    },\n    {\n      \"label\": \"domain: transforms\",\n      \"permalink\": \"/guides/tags/domain-transforms\"\n    },\n    {\n      \"label\": \"transform: lua\",\n      \"permalink\": \"/guides/tags/transform-lua\"\n    }\n  ],\n  \"title\": \"Parsing CSV logs with Lua\",\n  \"truncated\": false,\n  \"prevItem\": {\n    \"title\": \"Merge multi-line logs with Lua\",\n    \"permalink\": \"/guides/advanced/merge-multiline-logs-with-lua\"\n  },\n  \"nextItem\": {\n    \"title\": \"Troubleshooting\",\n    \"permalink\": \"/guides/advanced/troubleshooting\"\n  }\n};\n  /* @jsx mdx */\nimport Assumptions from '@site/src/components/Assumptions';\nexport const rightToc = [{\n  value: 'Getting Started',\n  id: 'getting-started',\n  children: []\n}, {\n  value: 'Adding the CSV Module',\n  id: 'adding-the-csv-module',\n  children: []\n}, {\n  value: 'Implementing Custom Parsing',\n  id: 'implementing-custom-parsing',\n  children: []\n}, {\n  value: 'Further Improvements',\n  id: 'further-improvements',\n  children: [{\n    value: 'Support for Multi-line Strings',\n    id: 'support-for-multi-line-strings',\n    children: []\n  }, {\n    value: 'Change Fields Types',\n    id: 'change-fields-types',\n    children: []\n  }]\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Assumptions mdxType=\"Assumptions\">\n      <ul>\n        <li parentName=\"ul\">{`You understand the `}<a parentName=\"li\" {...{\n            \"href\": \"/docs/reference/transforms/lua/\"\n          }}>{`basic Lua concepts`}</a>{`.`}</li>\n        <li parentName=\"ul\">{`You understand the `}<a parentName=\"li\" {...{\n            \"href\": \"/docs/about/concepts/\"\n          }}>{`basic Vector concepts`}</a>{` and understand `}<a parentName=\"li\" {...{\n            \"href\": \"/guides/getting-started/your-first-pipeline/\"\n          }}>{`how to set up a pipeline`}</a>{`.`}</li>\n      </ul>\n    </Assumptions>\n    <p>{`Vector has many built-in `}<a parentName=\"p\" {...{\n        \"href\": \"/components/?functions%5B%5D=parse/\"\n      }}>{`parsers`}</a>{` for structured logs formats. However, when you need to ship\nlogs in a custom or application-specific format, `}<a parentName=\"p\" {...{\n        \"href\": \"/components/?functions%5B%5D=program/\"\n      }}>{`programmable transforms`}</a>{` have got you\ncovered.`}</p>\n    <p>{`This guide walks through reading CSV logs using `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/reference/sources/file/\"\n      }}><inlineCode parentName=\"a\">{`file`}</inlineCode></a>{` source and parsing them using\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/reference/transforms/lua/\"\n      }}><inlineCode parentName=\"a\">{`lua`}</inlineCode></a>{` transform with a loadable Lua module.`}</p>\n    {\n      /*\n          THIS FILE IS AUTOGENERATED!\n           To make changes please edit the template located at:\n           website/guides/advanced/parsing-csv-logs-with-lua.md.erb\n      */\n    }\n    <h2 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h2>\n    <p>{`For certainty, it is assumed in the following that the logs to be read are produced by\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.postgresql.org/docs/current/runtime-config-logging.html#RUNTIME-CONFIG-LOGGING-CSVLOG\"\n      }}><inlineCode parentName=\"a\">{`csvlog`}</inlineCode></a>{` in PostgreSQL. For example, there might be the following\nlog file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csv\",\n        \"metastring\": \"title=\\\"log.csv\\\"\",\n        \"title\": \"\\\"log.csv\\\"\"\n      }}>{`2020-04-09 12:48:49.661 UTC,,,1,,localhost.1,1,,2020-04-09 12:48:49 UTC,,0,LOG,00000,\"ending log output to stderr\",,\"Future log output will go to log destination \"\"csvlog\"\".\",,,,,,,\"\"\n2020-04-09 12:48:49.669 UTC,,,27,,localhost.1b,1,,2020-04-09 12:48:49 UTC,,0,LOG,00000,\"database system was shut down at 2020-04-09 12:48:25 UTC\",,,,,,,,,\"\"\n2020-04-09 12:48:49.683 UTC,,,1,,localhost.1,2,,2020-04-09 12:48:49 UTC,,0,LOG,00000,\"database system is ready to accept connections\",,,,,,,,,\"\"\n`}</code></pre>\n    <p>{`Let us draft an initial version of the Vector's configuration file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-toml\",\n        \"metastring\": \"title=\\\"vector.toml\\\"\",\n        \"title\": \"\\\"vector.toml\\\"\"\n      }}>{`data_dir = \".\"\n\n[sources.file]\n  type = \"file\"\n  include = [\"*.csv\"]\n  start_at_beginning = true\n\n[transforms.lua]\n  inputs = [\"file\"]\n  type = \"lua\"\n  version = \"2\"\n  hooks.process = \"\"\"\n    function (event, emit)\n      -- to be expanded\n      emit(event)\n    end\n  \"\"\"\n\n[sinks.console]\n  inputs = [\"lua\"]\n  type = \"console\"\n  encoding = \"json\"\n`}</code></pre>\n    <p>{`This config sets up a `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/meta/glossary/#pipeline\"\n      }}>{`pipeline`}</a>{` that reads log files, pipes them through the parsing\ntransform (which currently is configured to just pass the events through), and displays the produced log events using\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/reference/sinks/console/\"\n      }}><inlineCode parentName=\"a\">{`console`}</inlineCode></a>{` sink.`}</p>\n    <p>{`At this point, running `}<inlineCode parentName=\"p\">{`vector --config vector.toml`}</inlineCode>{` results in the following output:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\"file\":\"log.csv\",\"host\":\"localhost\",\"message\":\"2020-04-09 12:48:49.661 UTC,,,1,,localhost.1,1,,2020-04-09 12:48:49 UTC,,0,LOG,00000,\\\\\"ending log output to stderr\\\\\",,\\\\\"Future log output will go to log destination \\\\\"\\\\\"csvlog\\\\\"\\\\\".\\\\\",,,,,,,\\\\\"\\\\\"\",\"timestamp\":\"2020-04-09T14:33:28Z\"}\n{\"file\":\"log.csv\",\"host\":\"localhost\",\"message\":\"2020-04-09 12:48:49.669 UTC,,,27,,localhost.1b,1,,2020-04-09 12:48:49 UTC,,0,LOG,00000,\\\\\"database system was shut down at 2020-04-09 12:48:25 UTC\\\\\",,,,,,,,,\\\\\"\\\\\"\",\"timestamp\":\"2020-04-09T14:33:28Z\"}\n{\"file\":\"log.csv\",\"host\":\"localhost\",\"message\":\"2020-04-09 12:48:49.683 UTC,,,1,,localhost.1,2,,2020-04-09 12:48:49 UTC,,0,LOG,00000,\\\\\"database system is ready to accept connections\\\\\",,,,,,,,,\\\\\"\\\\\"\",\"timestamp\":\"2020-04-09T14:33:28Z\"}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"adding-the-csv-module\"\n    }}>{`Adding the CSV Module`}</h2>\n    <p>{`In order to perform actual parsing, it is possible to leverage `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/geoffleyland/lua-csv\"\n      }}><inlineCode parentName=\"a\">{`lua-csv`}</inlineCode></a>{`.\nBecause it consists of a `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/geoffleyland/lua-csv/blob/09557e4608b02d136b9ae39a8fa0f36328fa1cec/lua/csv.lua\"\n      }}>{`single file`}</a>{`, it is possible to just download it to the same\ndirectory where `}<inlineCode parentName=\"p\">{`vector.toml`}</inlineCode>{` is stored:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl -o csv.lua https://raw.githubusercontent.com/geoffleyland/lua-csv/d20cd42d61dc52e7f6bcb13b596ac7a7d4282fbf/lua/csv.lua\n`}</code></pre>\n    <p>{`Then it would be possible to load it by calling `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.lua.org/manual/5.3/manual.html#pdf-require\"\n      }}><inlineCode parentName=\"a\">{`require`}</inlineCode></a>{` Lua function in the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/reference/transforms/lua/#source\"\n      }}><inlineCode parentName=\"a\">{`source`}</inlineCode></a>{` configuration section:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-toml\"\n      }}>{`source = \"\"\"\n  csv = require(\"csv\")\n\"\"\"\n`}</code></pre>\n    <p>{`With this `}<inlineCode parentName=\"p\">{`source`}</inlineCode>{` the `}<inlineCode parentName=\"p\">{`csv`}</inlineCode>{` module is loaded when Vector is started up (or if the `}<inlineCode parentName=\"p\">{`lua`}</inlineCode>{` transform is added later and the\nconfig is `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/administration/process-management/#automatic-reload-on-changes\"\n      }}>{`automatically reloaded`}</a>{`) and can\nbe used through the global variable `}<inlineCode parentName=\"p\">{`csv`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"implementing-custom-parsing\"\n    }}>{`Implementing Custom Parsing`}</h2>\n    <p>{`With the `}<inlineCode parentName=\"p\">{`csv`}</inlineCode>{` module, the `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/reference/transforms/lua/#process\"\n      }}><inlineCode parentName=\"a\">{`hooks.process`}</inlineCode></a>{` can be changed to the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-toml\"\n      }}>{`hooks.process = \"\"\"\n  function (event, emit)\n    fields = csv.openstring(event.log.message):lines()() -- parse the \\`message\\` field\n    event.log.message = nil -- drop the \\`message\\` field\n\n    column_names = {  -- a sequence containing CSV column names\n      -- ...\n    }\n\n    for column, value in ipairs(fields) do -- iterate over CSV columns\n      column_name = column_names[column] -- get column name\n      event.log[column_name] = value -- set the corresponding field in the event\n    end\n\n    emit(event) -- emit the transformed event\n  end\n\"\"\"\n`}</code></pre>\n    <p>{`Note that the `}<inlineCode parentName=\"p\">{`column_names`}</inlineCode>{` can be created just once, in the `}<inlineCode parentName=\"p\">{`source`}</inlineCode>{` section instead to speed up processing.\nPutting it there and using the column names from the PostgreSQL documentation results in the following definition of\nthe whole transform:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-toml\",\n        \"metastring\": \"title=\\\"vector.toml\\\"\",\n        \"title\": \"\\\"vector.toml\\\"\"\n      }}>{`# ...\n[transforms.lua]\n  inputs = [\"file\"]\n  type = \"lua\"\n  version = \"2\"\n  source = \"\"\"\n    csv = require(\"csv\") -- load external module for parsing CSV\n    column_names = {  -- a sequence containing CSV column names\n      \"log_time\",\n      \"user_name\",\n      \"database_name\",\n      \"process_id\",\n      \"connection_from\",\n      \"session_id\",\n      \"session_line_num\",\n      \"command_tag\",\n      \"session_start_time\",\n      \"virtual_transaction_id\",\n      \"transaction_id\",\n      \"error_severity\",\n      \"sql_state_code\",\n      \"message\",\n      \"detail\",\n      \"hint\",\n      \"internal_query\",\n      \"internal_query_pos\",\n      \"context\",\n      \"query\",\n      \"query_pos\",\n      \"location\",\n      \"application_name\",\n    }\n  \"\"\"\n  hooks.process = \"\"\"\n    function (event, emit)\n      fields = csv.openstring(event.log.message):lines()() -- parse the \\`message\\` field\n      event.log.message = nil -- drop the \\`message\\` field\n\n      for column, value in ipairs(fields) do -- iterate over CSV columns\n        column_name = column_names[column] -- get column name\n        event.log[column_name] = value -- set the corresponding field in the event\n      end\n\n      emit(event) -- emit the transformed event\n    end\n    \"\"\"\n#...\n`}</code></pre>\n    <p>{`Trying to run `}<inlineCode parentName=\"p\">{`vector --config vector.toml`}</inlineCode>{` with the same input file results in structured events being output:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\"application_name\":\"\",\"command_tag\":\"\",\"connection_from\":\"\",\"context\":\"\",\"database_name\":\"\",\"detail\":\"\",\"error_severity\":\"LOG\",\"file\":\"log.csv\",\"hint\":\"Future log output will go to log destination \\\\\"csvlog\\\\\".\",\"host\":\"localhost\",\"internal_query\":\"\",\"internal_query_pos\":\"\",\"location\":\"\",\"log_time\":\"2020-04-09 12:48:49.661 UTC\",\"message\":\"ending log output to stderr\",\"process_id\":\"1\",\"query\":\"\",\"query_pos\":\"\",\"session_id\":\"localhost.1\",\"session_line_num\":\"1\",\"session_start_time\":\"2020-04-09 12:48:49 UTC\",\"sql_state_code\":\"00000\",\"timestamp\":\"2020-04-09T19:49:07Z\",\"transaction_id\":\"0\",\"user_name\":\"\",\"virtual_transaction_id\":\"\"}\n{\"application_name\":\"\",\"command_tag\":\"\",\"connection_from\":\"\",\"context\":\"\",\"database_name\":\"\",\"detail\":\"\",\"error_severity\":\"LOG\",\"file\":\"log.csv\",\"hint\":\"\",\"host\":\"localhost\",\"internal_query\":\"\",\"internal_query_pos\":\"\",\"location\":\"\",\"log_time\":\"2020-04-09 12:48:49.669 UTC\",\"message\":\"database system was shut down at 2020-04-09 12:48:25 UTC\",\"process_id\":\"27\",\"query\":\"\",\"query_pos\":\"\",\"session_id\":\"localhost.1b\",\"session_line_num\":\"1\",\"session_start_time\":\"2020-04-09 12:48:49 UTC\",\"sql_state_code\":\"00000\",\"timestamp\":\"2020-04-09T19:49:07Z\",\"transaction_id\":\"0\",\"user_name\":\"\",\"virtual_transaction_id\":\"\"}\n{\"application_name\":\"\",\"command_tag\":\"\",\"connection_from\":\"\",\"context\":\"\",\"database_name\":\"\",\"detail\":\"\",\"error_severity\":\"LOG\",\"file\":\"log.csv\",\"hint\":\"\",\"host\":\"localhost\",\"internal_query\":\"\",\"internal_query_pos\":\"\",\"location\":\"\",\"log_time\":\"2020-04-09 12:48:49.683 UTC\",\"message\":\"database system is ready to accept connections\",\"process_id\":\"1\",\"query\":\"\",\"query_pos\":\"\",\"session_id\":\"localhost.1\",\"session_line_num\":\"2\",\"session_start_time\":\"2020-04-09 12:48:49 UTC\",\"sql_state_code\":\"00000\",\"timestamp\":\"2020-04-09T19:49:07Z\",\"transaction_id\":\"0\",\"user_name\":\"\",\"virtual_transaction_id\":\"\"}\n`}</code></pre>\n    <p>{`Or, applying pretty formatting to one of the output events:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"application_name\": \"\",\n  \"command_tag\": \"\",\n  \"connection_from\": \"\",\n  \"context\": \"\",\n  \"database_name\": \"\",\n  \"detail\": \"\",\n  \"error_severity\": \"LOG\",\n  \"file\": \"log.csv\",\n  \"hint\": \"Future log output will go to log destination \\\\\"csvlog\\\\\".\",\n  \"host\": \"localhost\",\n  \"internal_query\": \"\",\n  \"internal_query_pos\": \"\",\n  \"location\": \"\",\n  \"log_time\": \"2020-04-09 12:48:49.661 UTC\",\n  \"message\": \"ending log output to stderr\",\n  \"process_id\": \"1\",\n  \"query\": \"\",\n  \"query_pos\": \"\",\n  \"session_id\": \"localhost.1\",\n  \"session_line_num\": \"1\",\n  \"session_start_time\": \"2020-04-09 12:48:49 UTC\",\n  \"sql_state_code\": \"00000\",\n  \"timestamp\": \"2020-04-09T19:49:07Z\",\n  \"transaction_id\": \"0\",\n  \"user_name\": \"\",\n  \"virtual_transaction_id\": \"\"\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"further-improvements\"\n    }}>{`Further Improvements`}</h2>\n    <p>{`After the task of parsing the CSV logs is accomplished, the following improvements can take place.`}</p>\n    <h3 {...{\n      \"id\": \"support-for-multi-line-strings\"\n    }}>{`Support for Multi-line Strings`}</h3>\n    <p>{`CSV supports line breaks in strings. However, by default `}<inlineCode parentName=\"p\">{`file`}</inlineCode>{` source creates a separate event from each line.`}</p>\n    <p>{`There are two options to deal with this:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`For simple cases it might be possible to use the `}<a parentName=\"li\" {...{\n          \"href\": \"/docs/reference/sources/file/#multiline\"\n        }}><inlineCode parentName=\"a\">{`multiline`}</inlineCode></a>{` configuration\noption in the `}<inlineCode parentName=\"li\">{`file`}</inlineCode>{` source.`}</li>\n      <li parentName=\"ol\">{`For more complex cases the messages from multiple events can be conditionally concatenated in the Lua code. See\n`}<a parentName=\"li\" {...{\n          \"href\": \"/guides/advanced/custom-aggregations-with-lua/\"\n        }}>{`the aggregations guide`}</a>{` for more details on this.`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"change-fields-types\"\n    }}>{`Change Fields Types`}</h3>\n    <p>{`By default, all columns are parsed as strings. It is possible to convert them to other\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/reference/transforms/lua/#data-types\"\n      }}>{`data types`}</a>{` right in the Lua code using\nbuilt-in functions, such as `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.lua.org/manual/5.3/manual.html#pdf-tonumber\"\n      }}><inlineCode parentName=\"a\">{`tonumber`}</inlineCode></a>{`. Alternatively, it is possible to add the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/reference/transforms/coercer/\"\n      }}><inlineCode parentName=\"a\">{`coercer`}</inlineCode></a>{` transform after the `}<inlineCode parentName=\"p\">{`lua`}</inlineCode>{` transform, for example, to\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/reference/transforms/coercer/#timestamps\"\n      }}>{`parse timestamps`}</a>{`.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}