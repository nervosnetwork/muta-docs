{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/Desktop/vdocs/website/docs/reference/transforms/log_to_metric.md","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/docs/reference/transforms/log_to_metric.md","mtime":1594780808411},{"path":"/Users/Yun/Desktop/vdocs/website/.docusaurus/docusaurus-plugin-content-docs/site-docs-reference-transforms-log-to-metric-md-d35.json","mtime":1595086435139},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1588759133114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Yun/Desktop/vdocs/website/docs/reference/transforms/log_to_metric.md"],"names":["React","mdx","frontMatter","last_modified_on","component_title","description","event_types","function_category","issues_url","operating_systems","sidebar_label","source_url","status","title","unsupported_operating_systems","metadata","Fields","Field","Tabs","TabItem","rightToc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tlast_modified_on: '2020-07-13',\n\tcomponent_title: 'Log to Metric',\n\tdescription: 'The Vector `log_to_metric` transform accepts `log` events, but outputs [`metric`](#metric) events, allowing you to convert logs into one or more metrics.',\n\tevent_types: [\n\t\t'log',\n\t\t'metric'\n\t],\n\tfunction_category: 'convert',\n\tissues_url: 'https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22transform%3A+log_to_metric%22',\n\toperating_systems: [\n\t\t'Linux',\n\t\t'MacOS',\n\t\t'Windows'\n\t],\n\tsidebar_label: 'log_to_metric|[\"log\",\"metric\"]',\n\tsource_url: 'https://github.com/timberio/vector/tree/master/src/transforms/log_to_metric.rs',\n\tstatus: 'prod-ready',\n\ttitle: 'Log to Metric Transform',\n\tunsupported_operating_systems: []\n};\nexport const metadata = {\n  \"id\": \"reference/transforms/log_to_metric\",\n  \"title\": \"Log to Metric Transform\",\n  \"description\": \"The Vector `log_to_metric` transform accepts `log` events, but outputs [`metric`](#metric) events, allowing you to convert logs into one or more metrics.\",\n  \"source\": \"@site/docs/reference/transforms/log_to_metric.md\",\n  \"permalink\": \"/docs/reference/transforms/log_to_metric\",\n  \"editUrl\": \"https://github.com/nervosnetwork/muta/edit/master/website/docs/reference/transforms/log_to_metric.md\",\n  \"sidebar_label\": \"log_to_metric|[\\\"log\\\",\\\"metric\\\"]\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"JSON Parser Transform\",\n    \"permalink\": \"/docs/reference/transforms/json_parser\"\n  },\n  \"next\": {\n    \"title\": \"Logfmt Parser Transform\",\n    \"permalink\": \"/docs/reference/transforms/logfmt_parser\"\n  }\n};\n  /* @jsx mdx */\nimport Fields from '@site/src/components/Fields';\nimport Field from '@site/src/components/Field';\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nexport const rightToc = [{\n  value: 'Configuration',\n  id: 'configuration',\n  children: [{\n    value: 'metrics',\n    id: 'metrics',\n    children: []\n  }]\n}, {\n  value: 'Examples',\n  id: 'examples',\n  children: []\n}, {\n  value: 'How It Works',\n  id: 'how-it-works',\n  children: [{\n    value: 'Complex Processing',\n    id: 'complex-processing',\n    children: []\n  }, {\n    value: 'Environment Variables',\n    id: 'environment-variables',\n    children: []\n  }, {\n    value: 'Multiple Metrics',\n    id: 'multiple-metrics',\n    children: []\n  }, {\n    value: 'Null Fields',\n    id: 'null-fields',\n    children: []\n  }, {\n    value: 'Reducing',\n    id: 'reducing',\n    children: []\n  }]\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`The Vector `}<inlineCode parentName=\"p\">{`log_to_metric`}</inlineCode>{` transform\naccepts `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/about/data-model/log/\"\n      }}><inlineCode parentName=\"a\">{`log`}</inlineCode></a>{` events, but outputs\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/about/data-model/metric/\"\n      }}><inlineCode parentName=\"a\">{`metric`}</inlineCode></a>{` events, allowing you to convert logs into\none or more metrics.`}</p>\n    {\n      /*\n          THIS FILE IS AUTOGENERATED!\n           To make changes please edit the template located at:\n           website/docs/reference/transforms/log_to_metric.md.erb\n      */\n    }\n    <h2 {...{\n      \"id\": \"configuration\"\n    }}>{`Configuration`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-toml\",\n        \"metastring\": \"title=\\\"vector.toml\\\"\",\n        \"title\": \"\\\"vector.toml\\\"\"\n      }}>{`[transforms.log_to_metric]\n  type = \"log_to_metric\"\n\n  [[transforms.log_to_metric.metrics]]\n    type = \"histogram\"\n    field = \"time\"\n    name = \"time_ms\" # optional\n    tags.status = \"{{status}}\" # optional\n    tags.host = \"{{host}}\" # optional\n    tags.env = \"\\${ENV}\" # optional\n`}</code></pre>\n    <Fields filters={true} mdxType=\"Fields\">\n      <Field common={true} defaultValue={null} enumValues={null} examples={[]} groups={[]} name={\"metrics\"} path={null} relevantWhen={null} required={true} templateable={false} type={\"[table]\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"metrics\"\n        }}>{`metrics`}</h3>\n        <p>{`A table of key/value pairs representing the keys to be added to the event.`}</p>\n        <Fields filters={false} mdxType=\"Fields\">\n          <Field common={true} defaultValue={null} enumValues={null} examples={[\"duration\", \"parent.child\"]} groups={[]} name={\"field\"} path={\"metrics\"} relevantWhen={null} required={true} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field\"\n            }}>{`field`}</h4>\n            <p>{`The log field to use as the metric.\nSee `}<a parentName=\"p\" {...{\n                \"href\": \"#null-fields\"\n              }}>{`Null Fields`}</a>{` for more info.`}</p>\n          </Field>\n          <Field common={false} defaultValue={false} enumValues={null} examples={[false, true]} groups={[]} name={\"increment_by_value\"} path={\"metrics\"} relevantWhen={{\n            \"type\": \"counter\"\n          }} required={false} templateable={false} type={\"bool\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"increment_by_value\"\n            }}>{`increment_by_value`}</h4>\n            <p>{`If `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` the metric will be incremented by the `}<a parentName=\"p\" {...{\n                \"href\": \"#field\"\n              }}><inlineCode parentName=\"a\">{`field`}</inlineCode></a>{` value. If `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{` the\nmetric will be incremented by 1 regardless of the `}<a parentName=\"p\" {...{\n                \"href\": \"#field\"\n              }}><inlineCode parentName=\"a\">{`field`}</inlineCode></a>{` value.`}</p>\n          </Field>\n          <Field common={true} defaultValue={null} enumValues={null} examples={[\"duration_total\"]} groups={[]} name={\"name\"} path={\"metrics\"} relevantWhen={null} required={true} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"name\"\n            }}>{`name`}</h4>\n            <p>{`The name of the metric. Defaults to `}<inlineCode parentName=\"p\">{`<field>_total`}</inlineCode>{` for `}<inlineCode parentName=\"p\">{`counter`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<field>`}</inlineCode>{`\nfor `}<inlineCode parentName=\"p\">{`gauge`}</inlineCode>{`.`}</p>\n          </Field>\n          <Field common={true} defaultValue={null} enumValues={null} examples={[]} groups={[]} name={\"tags\"} path={\"metrics\"} relevantWhen={null} required={false} templateable={false} type={\"table\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"tags\"\n            }}>{`tags`}</h4>\n            <p>{`Key/value pairs representing `}<a parentName=\"p\" {...{\n                \"href\": \"/docs/about/data-model/metric/#tags\"\n              }}>{`metric tags`}</a>{`.`}</p>\n            <Fields filters={false} mdxType=\"Fields\">\n              <Field common={true} defaultValue={null} enumValues={null} examples={[{\n                \"host\": \"${HOSTNAME}\"\n              }, {\n                \"region\": \"us-east-1\"\n              }, {\n                \"status\": \"{{status}}\"\n              }]} groups={[]} name={\"`[tag-name]`\"} path={\"metrics.tags\"} relevantWhen={null} required={true} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n                <h5 {...{\n                  \"id\": \"tag-name\"\n                }}><inlineCode parentName=\"h5\">{`[tag-name]`}</inlineCode></h5>\n                <p>{`Key/value pairs representing `}<a parentName=\"p\" {...{\n                    \"href\": \"/docs/about/data-model/metric/#tags\"\n                  }}>{`metric tags`}</a>{`.\nEnvironment variables and field interpolation is allowed.`}</p>\n              </Field>\n            </Fields>\n          </Field>\n          <Field common={true} defaultValue={null} enumValues={{\n            \"counter\": \"A [counter metric type][docs.data-model.metric#counter].\",\n            \"gauge\": \"A [gauge metric type][docs.data-model.metric#gauge].\",\n            \"histogram\": \"A [distribution metric type][docs.data-model.metric#distribution].\",\n            \"set\": \"A [set metric type][docs.data-model.metric#set].\"\n          }} examples={[\"counter\", \"gauge\", \"histogram\", \"set\"]} groups={[]} name={\"type\"} path={\"metrics\"} relevantWhen={null} required={true} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"type\"\n            }}>{`type`}</h4>\n            <p>{`The metric type.`}</p>\n          </Field>\n        </Fields>\n      </Field>\n    </Fields>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Tabs block={true} defaultValue=\"histograms\" select={false} values={[{\n      \"label\": \"Histograms\",\n      \"value\": \"histograms\"\n    }, {\n      \"label\": \"Counts\",\n      \"value\": \"counts\"\n    }, {\n      \"label\": \"Sums\",\n      \"value\": \"sums\"\n    }, {\n      \"label\": \"Gauges\",\n      \"value\": \"gauges\"\n    }, {\n      \"label\": \"Set\",\n      \"value\": \"set\"\n    }]} mdxType=\"Tabs\">\n      <TabItem value=\"histograms\" mdxType=\"TabItem\">\n        <p>{`This example demonstrates capturing timings in your logs.`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-json\",\n            \"metastring\": \"title=\\\"log event\\\"\",\n            \"title\": \"\\\"log\",\n            \"event\\\"\": true\n          }}>{`{\n  \"host\": \"10.22.11.222\",\n  \"message\": \"Sent 200 in 54.2ms\",\n  \"status\": 200,\n  \"time\": 54.2,\n}\n`}</code></pre>\n        <p>{`You can convert the `}<inlineCode parentName=\"p\">{`time`}</inlineCode>{` field into a `}<inlineCode parentName=\"p\">{`distribution`}</inlineCode>{` metric:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"tite=\\\"vector.toml\\\"\",\n            \"tite\": \"\\\"vector.toml\\\"\"\n          }}>{`[transforms.log_to_metric]\n  type = \"log_to_metric\"\n\n  [[transforms.log_to_metric.metrics]]\n    type = \"histogram\"\n    field = \"time\"\n    name = \"time_ms\" # optional\n    tags.status = \"{{status}}\" # optional\n    tags.host = \"{{host}}\" # optional\n`}</code></pre>\n        <p>{`A `}<a parentName=\"p\" {...{\n            \"href\": \"/docs/about/data-model/metric/\"\n          }}><inlineCode parentName=\"a\">{`metric`}</inlineCode>{` event`}</a>{` will be output with the following\nstructure:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\",\n            \"metastring\": \"title=\\\"metric event\\\"\",\n            \"title\": \"\\\"metric\",\n            \"event\\\"\": true\n          }}>{`{\n  \"name\": \"time_ms\",\n  \"kind\": \"incremental\",\n  \"tags\": {\n    \"status\": \"200\",\n    \"host\": \"10.22.11.222\"\n  }\n  \"distribution\": {\n    \"values\": [54.2],\n    \"sample_rates\": [1.0]\n  }\n}\n`}</code></pre>\n        <p>{`This metric will then proceed down the pipeline, and depending on the sink,\nwill be aggregated in Vector (such is the case for the `}<a parentName=\"p\" {...{\n            \"href\": \"/docs/reference/sinks/prometheus/\"\n          }}><inlineCode parentName=\"a\">{`prometheus`}</inlineCode>{` sink`}</a>{`) or will be aggregated in the store itself.`}</p>\n      </TabItem>\n      <TabItem value=\"counts\" mdxType=\"TabItem\">\n        <p>{`This example demonstrates counting HTTP status codes.`}</p>\n        <p>{`Given the following log line:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-json\",\n            \"metastring\": \"title=\\\"log event\\\"\",\n            \"title\": \"\\\"log\",\n            \"event\\\"\": true\n          }}>{`{\n  \"host\": \"10.22.11.222\",\n  \"message\": \"Sent 200 in 54.2ms\",\n  \"status\": 200\n}\n`}</code></pre>\n        <p>{`You can count the number of responses by status code:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"title=\\\"vector.toml\\\"\",\n            \"title\": \"\\\"vector.toml\\\"\"\n          }}>{`[transforms.log_to_metric]\n  type = \"log_to_metric\"\n\n  [[transforms.log_to_metric.metrics]]\n    type = \"counter\"\n    field = \"status\"\n    name = \"response_total\" # optional\n    tags.status = \"{{status}}\"\n    tags.host = \"{{host}}\"\n`}</code></pre>\n        <p>{`A `}<a parentName=\"p\" {...{\n            \"href\": \"/docs/about/data-model/metric/\"\n          }}><inlineCode parentName=\"a\">{`metric`}</inlineCode>{` event`}</a>{` will be output with the following\nstructure:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\",\n            \"metastring\": \"title=\\\"metric event\\\"\",\n            \"title\": \"\\\"metric\",\n            \"event\\\"\": true\n          }}>{`{\n  \"name\": \"response_total\",\n  \"kind\": \"incremental\",\n  \"tags\": {\n    \"status\": \"200\",\n    \"host\": \"10.22.11.222\"\n  }\n  \"counter\": {\n    \"value\": 1.0,\n  }\n}\n`}</code></pre>\n        <p>{`This metric will then proceed down the pipeline, and depending on the sink,\nwill be aggregated in Vector (such is the case for the `}<a parentName=\"p\" {...{\n            \"href\": \"/docs/reference/sinks/prometheus/\"\n          }}><inlineCode parentName=\"a\">{`prometheus`}</inlineCode>{` sink`}</a>{`) or will be aggregated in the store itself.`}</p>\n      </TabItem>\n      <TabItem value=\"sums\" mdxType=\"TabItem\">\n        <p>{`In this example we'll demonstrate computing a sum. The scenario we've chosen\nis to compute the total of orders placed.`}</p>\n        <p>{`Given the following log line:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-json\",\n            \"metastring\": \"title=\\\"log event\\\"\",\n            \"title\": \"\\\"log\",\n            \"event\\\"\": true\n          }}>{`{\n  \"host\": \"10.22.11.222\",\n  \"message\": \"Order placed for $122.20\",\n  \"total\": 122.2\n}\n`}</code></pre>\n        <p>{`You can reduce this log into a `}<inlineCode parentName=\"p\">{`counter`}</inlineCode>{` metric that increases by the\nfield's value:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"title=\\\"vector.toml\\\"\",\n            \"title\": \"\\\"vector.toml\\\"\"\n          }}>{`[transforms.log_to_metric]\n  type = \"log_to_metric\"\n\n  [[transforms.log_to_metric.metrics]]\n    type = \"counter\"\n    field = \"total\"\n    name = \"order_total\" # optional\n    increment_by_value = true # optional\n    tags.host = \"{{host}}\" # optional\n`}</code></pre>\n        <p>{`A `}<a parentName=\"p\" {...{\n            \"href\": \"/docs/about/data-model/metric/\"\n          }}><inlineCode parentName=\"a\">{`metric`}</inlineCode>{` event`}</a>{` will be output with the following\nstructure:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\",\n            \"metastring\": \"title=\\\"metric event\\\"\",\n            \"title\": \"\\\"metric\",\n            \"event\\\"\": true\n          }}>{`{\n  \"name\": \"order_total\",\n  \"kind\": \"incremental\",\n  \"tags\": {\n    \"status\": \"200\",\n    \"host\": \"10.22.11.222\"\n  }\n  \"counter\": {\n    \"value\": 122.20,\n  }\n}\n`}</code></pre>\n        <p>{`This metric will then proceed down the pipeline, and depending on the sink,\nwill be aggregated in Vector (such is the case for the `}<a parentName=\"p\" {...{\n            \"href\": \"/docs/reference/sinks/prometheus/\"\n          }}><inlineCode parentName=\"a\">{`prometheus`}</inlineCode>{` sink`}</a>{`) or will be aggregated in the store itself.`}</p>\n      </TabItem>\n      <TabItem value=\"gauges\" mdxType=\"TabItem\">\n        <p>{`In this example we'll demonstrate creating a gauge that represents the current\nCPU load verages.`}</p>\n        <p>{`Given the following log line:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-json\",\n            \"metastring\": \"title=\\\"log event\\\"\",\n            \"title\": \"\\\"log\",\n            \"event\\\"\": true\n          }}>{`{\n  \"host\": \"10.22.11.222\",\n  \"message\": \"CPU activity sample\",\n  \"1m_load_avg\": 78.2,\n  \"5m_load_avg\": 56.2,\n  \"15m_load_avg\": 48.7\n}\n`}</code></pre>\n        <p>{`You can reduce this logs into multiple `}<inlineCode parentName=\"p\">{`gauge`}</inlineCode>{` metrics:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"title=\\\"vector.toml\\\"\",\n            \"title\": \"\\\"vector.toml\\\"\"\n          }}>{`[transforms.log_to_metric]\n  type = \"log_to_metric\"\n\n  [[transforms.log_to_metric.metrics]]\n    type = \"gauge\"\n    field = \"1m_load_avg\"\n    tags.host = \"{{host}}\" # optional\n\n  [[transforms.log_to_metric.metrics]]\n    type = \"gauge\"\n    field = \"5m_load_avg\"\n    tags.host = \"{{host}}\" # optional\n\n  [[transforms.log_to_metric.metrics]]\n    type = \"gauge\"\n    field = \"15m_load_avg\"\n    tags.host = \"{{host}}\" # optional\n`}</code></pre>\n        <p>{`Multiple `}<a parentName=\"p\" {...{\n            \"href\": \"/docs/about/data-model/metric/\"\n          }}><inlineCode parentName=\"a\">{`metric`}</inlineCode>{` events`}</a>{` will be output with the following\nstructure:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\",\n            \"metastring\": \"title=\\\"Metric event 1\\\"\",\n            \"title\": \"\\\"Metric\",\n            \"event\": true,\n            \"1\\\"\": true\n          }}>{`{\n  \"name\": \"1m_load_avg\",\n  \"kind\": \"absolute\",\n  \"tags\": {\n    \"host\": \"10.22.11.222\"\n  },\n  \"gauge\": {\n    \"value\": 78.2\n  }\n}\n`}</code></pre>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\",\n            \"metastring\": \"title=\\\"Metric event 2\\\"\",\n            \"title\": \"\\\"Metric\",\n            \"event\": true,\n            \"2\\\"\": true\n          }}>{`{\n  \"name\": \"5m_load_avg\",\n  \"kind\": \"absolute\",\n  \"tags\": {\n    \"host\": \"10.22.11.222\"\n  },\n  \"gauge\": {\n    \"value\": 56.2\n  }\n}\n`}</code></pre>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\",\n            \"metastring\": \"title=\\\"Metric event 3\\\"\",\n            \"title\": \"\\\"Metric\",\n            \"event\": true,\n            \"3\\\"\": true\n          }}>{`{\n  \"name\": \"15m_load_avg\",\n  \"kind\": \"absolute\",\n  \"tags\": {\n    \"host\": \"10.22.11.222\"\n  },\n  \"gauge\": {\n    \"value\": 48.7\n  }\n}\n`}</code></pre>\n        <p>{`This metric will then proceed down the pipeline, and depending on the sink,\nwill be aggregated in Vector (such is the case for the `}<a parentName=\"p\" {...{\n            \"href\": \"/docs/reference/sinks/prometheus/\"\n          }}><inlineCode parentName=\"a\">{`prometheus`}</inlineCode>{` sink`}</a>{`) or will be aggregated in the store itself.`}</p>\n      </TabItem>\n      <TabItem value=\"set\" mdxType=\"TabItem\">\n        <p>{`In this example we'll demonstrate how to use sets. Sets are primarly a Statsd\nconcept that represent the number of unique values seens for a given metric.\nThe idea is that you pass the unique/high-cardinality value as the metric value\nand the metric store will count the number of unique values seen.`}</p>\n        <p>{`For example, given the following log line:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-json\",\n            \"metastring\": \"title=\\\"log event\\\"\",\n            \"title\": \"\\\"log\",\n            \"event\\\"\": true\n          }}>{`{\n  \"host\": \"10.22.11.222\",\n  \"message\": \"Sent 200 in 54.2ms\",\n  \"remote_addr\": \"233.221.232.22\"\n}\n`}</code></pre>\n        <p>{`You can count the number of unique `}<inlineCode parentName=\"p\">{`remote_addr`}</inlineCode>{` values by using a set:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"title=\\\"vector.toml\\\"\",\n            \"title\": \"\\\"vector.toml\\\"\"\n          }}>{`[transforms.log_to_metric]\n  type = \"log_to_metric\"\n\n  [[transforms.log_to_metric.metrics]]\n    type = \"set\"\n    field = \"remote_addr\"\n    tags.host = \"{{host}}\" # optional\n`}</code></pre>\n        <p>{`A `}<a parentName=\"p\" {...{\n            \"href\": \"/docs/about/data-model/metric/\"\n          }}><inlineCode parentName=\"a\">{`metric`}</inlineCode>{` event`}</a>{` will be output with the following\nstructure:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\",\n            \"metastring\": \"title=\\\"metric event\\\"\",\n            \"title\": \"\\\"metric\",\n            \"event\\\"\": true\n          }}>{`{\n  \"name\": \"remote_addr\",\n  \"kind\": \"incremental\",\n  \"tags\": {\n    \"host\": \"10.22.11.222\"\n  },\n  \"set\": {\n    \"values\": [\"233.221.232.22\"]\n  }\n}\n`}</code></pre>\n        <p>{`This metric will then proceed down the pipeline, and depending on the sink,\nwill be aggregated in Vector (such is the case for the `}<a parentName=\"p\" {...{\n            \"href\": \"/docs/reference/sinks/prometheus/\"\n          }}><inlineCode parentName=\"a\">{`prometheus`}</inlineCode>{` sink`}</a>{`) or will be aggregated in the store itself.`}</p>\n      </TabItem>\n    </Tabs>\n    <h2 {...{\n      \"id\": \"how-it-works\"\n    }}>{`How It Works`}</h2>\n    <h3 {...{\n      \"id\": \"complex-processing\"\n    }}>{`Complex Processing`}</h3>\n    <p>{`If you encounter limitations with the `}<inlineCode parentName=\"p\">{`log_to_metric`}</inlineCode>{`\ntransform then we recommend using a `}<a parentName=\"p\" {...{\n        \"href\": \"https://vector.dev/components/?functions%5B%5D=program\"\n      }}>{`runtime transform`}</a>{`.\nThese transforms are designed for complex processing and give you the power of\nfull programming runtime.`}</p>\n    <h3 {...{\n      \"id\": \"environment-variables\"\n    }}>{`Environment Variables`}</h3>\n    <p>{`Environment variables are supported through all of Vector's configuration.\nSimply add `}<inlineCode parentName=\"p\">{`\\${MY_ENV_VAR}`}</inlineCode>{` in your Vector configuration file and the variable\nwill be replaced before being evaluated.`}</p>\n    <p>{`You can learn more in the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/setup/configuration/#environment-variables\"\n      }}>{`Environment Variables`}</a>{` section.`}</p>\n    <h3 {...{\n      \"id\": \"multiple-metrics\"\n    }}>{`Multiple Metrics`}</h3>\n    <p>{`For clarification, when you convert a single `}<inlineCode parentName=\"p\">{`log`}</inlineCode>{` event into multiple `}<a parentName=\"p\" {...{\n        \"href\": \"#metric\"\n      }}><inlineCode parentName=\"a\">{`metric`}</inlineCode></a>{`\nevents, the `}<a parentName=\"p\" {...{\n        \"href\": \"#metric\"\n      }}><inlineCode parentName=\"a\">{`metric`}</inlineCode></a>{` events are not emitted as a single array. They are emitted\nindividually, and the downstream components treat them as individual events.\nDownstream components are not aware they were derived from a single log event.`}</p>\n    <h3 {...{\n      \"id\": \"null-fields\"\n    }}>{`Null Fields`}</h3>\n    <p>{`If the target log `}<a parentName=\"p\" {...{\n        \"href\": \"#field\"\n      }}><inlineCode parentName=\"a\">{`field`}</inlineCode></a>{` contains a `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{` value it will ignored, and a metric\nwill not be emitted.`}</p>\n    <h3 {...{\n      \"id\": \"reducing\"\n    }}>{`Reducing`}</h3>\n    <p>{`It's important to understand that this transform does not reduce multiple logs\ninto a single metric. Instead, this transform converts logs into granular\nindividual metrics that can then be reduced at the edge. Where the reduction\nhappens depends on your metrics storage. For example, the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/reference/sinks/prometheus/\"\n      }}><inlineCode parentName=\"a\">{`prometheus`}</inlineCode>{` sink`}</a>{` will reduce logs in the sink itself\nfor the next scrape, while other metrics sinks will proceed to forward the\nindividual metrics for reduction in the metrics storage itself.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}