{"remainingRequest":"/Users/Yun/vector/website/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/Yun/vector/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--10-2!/Users/Yun/vector/website/plugins/highlights/markdownLoader.js??ref--10-3!/Users/Yun/vector/website/highlights/2020-02-21-file-source-multiline-support.md?truncated=true","dependencies":[{"path":"/Users/Yun/vector/website/highlights/2020-02-21-file-source-multiline-support.md","mtime":1594780808702},{"path":"/Users/Yun/vector/website/.docusaurus/highlights/site-highlights-2020-02-21-file-source-multiline-support-md-fc5.json","mtime":1594781224000},{"path":"/Users/Yun/vector/website/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/vector/website/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/vector/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/vector/website/plugins/highlights/markdownLoader.js","mtime":1594780808733}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL1l1bi92ZWN0b3Ivd2Vic2l0ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgY29uc3QgZnJvbnRNYXR0ZXI9e2xhc3RfbW9kaWZpZWRfb246JzIwMjAtMDQtMTQnLCRzY2hlbWE6Jy8ubWV0YS8uc2NoZW1hcy9oaWdobGlnaHRzLmpzb24nLHRpdGxlOidJbXByb3ZlZCBNdWx0aWxpbmUgU3VwcG9ydCBJbiBUaGUgRmlsZSBTb3VyY2UnLGRlc2NyaXB0aW9uOidNZXJnZSBtdWx0aXBsZSBsaW5lcyB0b2dldGhlciBiYXNlZCBvbiBydWxlcycsYXV0aG9yX2dpdGh1YjonaHR0cHM6Ly9naXRodWIuY29tL2JpbmFyeWxvZ2ljJyxwcl9udW1iZXJzOlsxODUyXSxyZWxlYXNlOicwLjguMCcsaGlkZV9vbl9yZWxlYXNlX25vdGVzOmZhbHNlLHRhZ3M6Wyd0eXBlOiBlbmhhbmNlbWVudCcsJ2RvbWFpbjogc291cmNlcycsJ3NvdXJjZTogZmlsZSddfTtleHBvcnQgY29uc3QgbWV0YWRhdGE9eyJkYXRlIjoiMjAyMC0wMi0yMVQwMDowMDowMC4wMDBaIiwiZGVzY3JpcHRpb24iOiJNZXJnZSBtdWx0aXBsZSBsaW5lcyB0b2dldGhlciBiYXNlZCBvbiBydWxlcyIsInBlcm1hbGluayI6Ii9oaWdobGlnaHRzLzIwMjAtMDItMjEtZmlsZS1zb3VyY2UtbXVsdGlsaW5lLXN1cHBvcnQiLCJyZWFkaW5nVGltZSI6IjEgbWluIHJlYWQiLCJzb3VyY2UiOiJAc2l0ZS9oaWdobGlnaHRzLzIwMjAtMDItMjEtZmlsZS1zb3VyY2UtbXVsdGlsaW5lLXN1cHBvcnQubWQiLCJ0YWdzIjpbeyJsYWJlbCI6InR5cGU6IGVuaGFuY2VtZW50IiwicGVybWFsaW5rIjoiL2hpZ2hsaWdodHMvdGFncy90eXBlLWVuaGFuY2VtZW50In0seyJsYWJlbCI6ImRvbWFpbjogc291cmNlcyIsInBlcm1hbGluayI6Ii9oaWdobGlnaHRzL3RhZ3MvZG9tYWluLXNvdXJjZXMifSx7ImxhYmVsIjoic291cmNlOiBmaWxlIiwicGVybWFsaW5rIjoiL2hpZ2hsaWdodHMvdGFncy9zb3VyY2UtZmlsZSJ9XSwidGl0bGUiOiJJbXByb3ZlZCBNdWx0aWxpbmUgU3VwcG9ydCBJbiBUaGUgRmlsZSBTb3VyY2UiLCJ0cnVuY2F0ZWQiOmZhbHNlLCJwcmV2SXRlbSI6eyJ0aXRsZSI6Ik5ldyBTd2ltbGFuZXMgVHJhbnNmb3JtIiwicGVybWFsaW5rIjoiL2hpZ2hsaWdodHMvMjAyMC0wMi0yNC1zd2ltbGFuZXMtdHJhbnNmb3JtIn0sIm5leHRJdGVtIjp7InRpdGxlIjoiTG90cyBvZiBOZXcgU2lua3MhIiwicGVybWFsaW5rIjoiL2hpZ2hsaWdodHMvMjAyMC0wMi0yMC1uZXctc2lua3MifX07LyogQGpzeCBtZHggKi9leHBvcnQgY29uc3QgcmlnaHRUb2M9W107Y29uc3QgbWFrZVNob3J0Y29kZT1uYW1lPT5mdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTtjb25zdCBsYXlvdXRQcm9wcz17cmlnaHRUb2N9O2NvbnN0IE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7Y29tcG9uZW50cywuLi5wcm9wc30pe3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgicCIsbnVsbCxgT25lIG9mIHRoZSBiaWdnZXN0IGZydXN0cmF0aW9ucyB3ZSd2ZSBoZWFyZCBmcm9tIHVzZXJzIGluIHRoaXMgc3BhY2UgaXMgdGhlCmluYWJpbGl0eSB0byBtZXJnZSBsaW5lcyB0b2dldGhlci4gU3VjaCBhIHNpbXBsZSB0YXNrIGNhbiBiZSBpbmNyZWRpYmx5CmNvbXBsZXggYW5kIGhhcmQuIEZlYXIgbm90ISBXZSBwbGFuIHRvIGFkZCBmaXJzdC1jbGFzcyBzdXBwb3J0IGZvciBzb2x2aW5nCnRoaXMgcHJvYmxlbS5gKSxtZHgoInAiLG51bGwsYEluIGFkZGl0aW9uIHRvIHRoZSByZWNlbnRseSBhZGRlZCBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIvZG9jcy9yZWZlcmVuY2Uvc291cmNlcy9kb2NrZXIvI2F1dG9fcGFydGlhbF9tZXJnZSJ9KSxgYXV0b21hdGljIG1lcmdpbmcgb2YgRG9ja2VyCmxvZ3NgKSxgLCB3ZSBhbHNvIGFkZGVkIFtiZXR0ZXIgbXVsdGlsaW5lCmAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Ii9kb2NzL3JlZmVyZW5jZS9zb3VyY2VzL2ZpbGUvI211bHRpbGluZSJ9KSxgc3VwcG9ydGApLGAgdG8gb3VyIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Ii9kb2NzL3JlZmVyZW5jZS9zb3VyY2VzL2ZpbGUvIn0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSxgZmlsZWApLGAgc291cmNlYCksYC4KVGhlc2Ugb3B0aW9ucyBhcmUgdmVyeSBleHByZXNzaXZlIGFuZCBzaG91bGQgc29sdmUgdGhlIHZhc3QgbWFqb3JpdHkgb2YKbXVsdGlsaW5lIG1lcmdpbmcgcHJvYmxlbXMuYCksbWR4KCJwIixudWxsLGBGb3IgZXhhbXBsZS4gR2l2ZW4gdGhlIGZvbGxvd2luZyBsaW5lczpgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXRleHQifSksYGZvb2Jhci5yYjo2OmluIFxgLyc6IGRpdmlkZWQgYnkgMCAoWmVyb0RpdmlzaW9uRXJyb3IpCiAgZnJvbSBmb29iYXIucmI6NjppbiBcYGJhcicKICBmcm9tIGZvb2Jhci5yYjoyOmluIFxgZm9vJwogIGZyb20gZm9vYmFyLnJiOjk6aW4gXGA8bWFpbj4nCmApKSxtZHgoInAiLG51bGwsYFlvdSBjYW4gbWVyZ2UgdGhlbSB3aXRoIHRoZSBmb2xsb3dpbmcgY29uZmlnOmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtdG9tbCIsIm1ldGFzdHJpbmciOiJ0aXRsZT1cInZlY3Rvci50b21sXCIiLCJ0aXRsZSI6IlwidmVjdG9yLnRvbWxcIiJ9KSxgW3NvdXJjZXMubXlfZmlsZV9zb3VyY2VdCiAgdHlwZSA9ICJmaWxlIgogICMgLi4uCgogIFtzb3VyY2VzLm15X2ZpbGVfc291cmNlLm11bHRpbGluZV0KICAgIHN0YXJ0X3BhdHRlcm4gPSAiXlteXFxcXHNdIgogICAgbW9kZSA9ICJjb250aW51ZV90aHJvdWdoIgogICAgY29uZGl0aW9uX3BhdHRlcm4gPSAiXltcXFxcc10rZnJvbSIKICAgIHRpbWVvdXRfbXMgPSAxMDAwCmApKSxtZHgoInAiLG51bGwsYEFuZCBpZiB0aGlzIGRvZXNuJ3QgZG8gaXQsIHlvdSBjYW4gYWx3YXlzIGZhbGxiYWNrCnRvIG91ciBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIvZG9jcy9yZWZlcmVuY2UvdHJhbnNmb3Jtcy9sdWEvIn0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSxgbHVhYCksYCB0cmFuc2Zvcm1gKSxgLmApKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/Yun/vector/website/highlights/2020-02-21-file-source-multiline-support.md"],"names":["React","mdx","frontMatter","last_modified_on","$schema","title","description","author_github","pr_numbers","release","hide_on_release_notes","tags","metadata","rightToc","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tlast_modified_on: '2020-04-14',\n\t$schema: '/.meta/.schemas/highlights.json',\n\ttitle: 'Improved Multiline Support In The File Source',\n\tdescription: 'Merge multiple lines together based on rules',\n\tauthor_github: 'https://github.com/binarylogic',\n\tpr_numbers: [\n\t\t1852\n\t],\n\trelease: '0.8.0',\n\thide_on_release_notes: false,\n\ttags: [\n\t\t'type: enhancement',\n\t\t'domain: sources',\n\t\t'source: file'\n\t]\n};\nexport const metadata = {\n  \"date\": \"2020-02-21T00:00:00.000Z\",\n  \"description\": \"Merge multiple lines together based on rules\",\n  \"permalink\": \"/highlights/2020-02-21-file-source-multiline-support\",\n  \"readingTime\": \"1 min read\",\n  \"source\": \"@site/highlights/2020-02-21-file-source-multiline-support.md\",\n  \"tags\": [\n    {\n      \"label\": \"type: enhancement\",\n      \"permalink\": \"/highlights/tags/type-enhancement\"\n    },\n    {\n      \"label\": \"domain: sources\",\n      \"permalink\": \"/highlights/tags/domain-sources\"\n    },\n    {\n      \"label\": \"source: file\",\n      \"permalink\": \"/highlights/tags/source-file\"\n    }\n  ],\n  \"title\": \"Improved Multiline Support In The File Source\",\n  \"truncated\": false,\n  \"prevItem\": {\n    \"title\": \"New Swimlanes Transform\",\n    \"permalink\": \"/highlights/2020-02-24-swimlanes-transform\"\n  },\n  \"nextItem\": {\n    \"title\": \"Lots of New Sinks!\",\n    \"permalink\": \"/highlights/2020-02-20-new-sinks\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`One of the biggest frustrations we've heard from users in this space is the\ninability to merge lines together. Such a simple task can be incredibly\ncomplex and hard. Fear not! We plan to add first-class support for solving\nthis problem.`}</p>\n    <p>{`In addition to the recently added `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/reference/sources/docker/#auto_partial_merge\"\n      }}>{`automatic merging of Docker\nlogs`}</a>{`, we also added [better multiline\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/reference/sources/file/#multiline\"\n      }}>{`support`}</a>{` to our `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/reference/sources/file/\"\n      }}><inlineCode parentName=\"a\">{`file`}</inlineCode>{` source`}</a>{`.\nThese options are very expressive and should solve the vast majority of\nmultiline merging problems.`}</p>\n    <p>{`For example. Given the following lines:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`foobar.rb:6:in \\`/': divided by 0 (ZeroDivisionError)\n  from foobar.rb:6:in \\`bar'\n  from foobar.rb:2:in \\`foo'\n  from foobar.rb:9:in \\`<main>'\n`}</code></pre>\n    <p>{`You can merge them with the following config:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-toml\",\n        \"metastring\": \"title=\\\"vector.toml\\\"\",\n        \"title\": \"\\\"vector.toml\\\"\"\n      }}>{`[sources.my_file_source]\n  type = \"file\"\n  # ...\n\n  [sources.my_file_source.multiline]\n    start_pattern = \"^[^\\\\\\\\s]\"\n    mode = \"continue_through\"\n    condition_pattern = \"^[\\\\\\\\s]+from\"\n    timeout_ms = 1000\n`}</code></pre>\n    <p>{`And if this doesn't do it, you can always fallback\nto our `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/reference/transforms/lua/\"\n      }}><inlineCode parentName=\"a\">{`lua`}</inlineCode>{` transform`}</a>{`.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}