{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/Desktop/vdocs/website/new-docs/docs/reference/sources/file.md","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/docs/reference/sources/file.md","mtime":1595397619856},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-reference-sources-file-md-b85.json","mtime":1595398498314},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1588759133114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL1l1bi9EZXNrdG9wL3Zkb2NzL3dlYnNpdGUvbmV3LWRvY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIi9Vc2Vycy9ZdW4vRGVza3RvcC92ZG9jcy93ZWJzaXRlL25ldy1kb2NzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIjtpbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7aW1wb3J0e21keH1mcm9tJ0BtZHgtanMvcmVhY3QnO2V4cG9ydCB2YXIgZnJvbnRNYXR0ZXI9e2xhc3RfbW9kaWZpZWRfb246JzIwMjAtMDctMTMnLGRlbGl2ZXJ5X2d1YXJhbnRlZTonYmVzdF9lZmZvcnQnLGNvbXBvbmVudF90aXRsZTonRmlsZScsZGVzY3JpcHRpb246J1RoZSBWZWN0b3IgW2BmaWxlYF0oI2ZpbGUpIHNvdXJjZSBpbmdlc3RzIGRhdGEgdGhyb3VnaCBvbmUgb3IgbW9yZSBsb2NhbCBmaWxlcyBhbmQgb3V0cHV0cyBgbG9nYCBldmVudHMuJyxldmVudF90eXBlczpbJ2xvZyddLGZ1bmN0aW9uX2NhdGVnb3J5Oidjb2xsZWN0Jyxpc3N1ZXNfdXJsOidodHRwczovL2dpdGh1Yi5jb20vdGltYmVyaW8vdmVjdG9yL2lzc3Vlcz9xPWlzJTNBb3BlbitpcyUzQWlzc3VlK2xhYmVsJTNBJTIyc291cmNlJTNBK2ZpbGUlMjInLG9wZXJhdGluZ19zeXN0ZW1zOlsnTGludXgnLCdNYWNPUycsJ1dpbmRvd3MnXSxzaWRlYmFyX2xhYmVsOidmaWxlfFsibG9nIl0nLHNvdXJjZV91cmw6J2h0dHBzOi8vZ2l0aHViLmNvbS90aW1iZXJpby92ZWN0b3IvdHJlZS9tYXN0ZXIvc3JjL3NvdXJjZXMvZmlsZScsc3RhdHVzOidwcm9kLXJlYWR5Jyx0aXRsZTonRmlsZSBTb3VyY2UnLHVuc3VwcG9ydGVkX29wZXJhdGluZ19zeXN0ZW1zOltdfTtleHBvcnQgdmFyIG1ldGFkYXRhPXsiaWQiOiJyZWZlcmVuY2Uvc291cmNlcy9maWxlIiwidGl0bGUiOiJGaWxlIFNvdXJjZSIsImRlc2NyaXB0aW9uIjoiVGhlIFZlY3RvciBbYGZpbGVgXSgjZmlsZSkgc291cmNlIGluZ2VzdHMgZGF0YSB0aHJvdWdoIG9uZSBvciBtb3JlIGxvY2FsIGZpbGVzIGFuZCBvdXRwdXRzIGBsb2dgIGV2ZW50cy4iLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL3JlZmVyZW5jZS9zb3VyY2VzL2ZpbGUubWQiLCJwZXJtYWxpbmsiOiIvZG9jcy9yZWZlcmVuY2Uvc291cmNlcy9maWxlIiwiZWRpdFVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9uZXJ2b3NuZXR3b3JrL211dGEvZWRpdC9tYXN0ZXIvd2Vic2l0ZS9kb2NzL3JlZmVyZW5jZS9zb3VyY2VzL2ZpbGUubWQiLCJzaWRlYmFyX2xhYmVsIjoiZmlsZXxbXCJsb2dcIl0ifTsvKiBAanN4IG1keCAqL2ltcG9ydCBBbGVydCBmcm9tJ0BzaXRlL3NyYy9jb21wb25lbnRzL0FsZXJ0JztpbXBvcnQgRmllbGRzIGZyb20nQHNpdGUvc3JjL2NvbXBvbmVudHMvRmllbGRzJztpbXBvcnQgRmllbGQgZnJvbSdAc2l0ZS9zcmMvY29tcG9uZW50cy9GaWVsZCc7aW1wb3J0IFRhYnMgZnJvbSdAdGhlbWUvVGFicyc7aW1wb3J0IFRhYkl0ZW0gZnJvbSdAdGhlbWUvVGFiSXRlbSc7ZXhwb3J0IHZhciByaWdodFRvYz1be3ZhbHVlOidSZXF1aXJlbWVudHMnLGlkOidyZXF1aXJlbWVudHMnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0NvbmZpZ3VyYXRpb24nLGlkOidjb25maWd1cmF0aW9uJyxjaGlsZHJlbjpbe3ZhbHVlOidkYXRhX2RpcicsaWQ6J2RhdGFfZGlyJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidleGNsdWRlJyxpZDonZXhjbHVkZScsY2hpbGRyZW46W119LHt2YWx1ZTonZmlsZV9rZXknLGlkOidmaWxlX2tleScsY2hpbGRyZW46W119LHt2YWx1ZTonZmluZ2VycHJpbnRpbmcnLGlkOidmaW5nZXJwcmludGluZycsY2hpbGRyZW46W119LHt2YWx1ZTonZ2xvYl9taW5pbXVtX2Nvb2xkb3duJyxpZDonZ2xvYl9taW5pbXVtX2Nvb2xkb3duJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidob3N0X2tleScsaWQ6J2hvc3Rfa2V5JyxjaGlsZHJlbjpbXX0se3ZhbHVlOidpZ25vcmVfb2xkZXInLGlkOidpZ25vcmVfb2xkZXInLGNoaWxkcmVuOltdfSx7dmFsdWU6J2luY2x1ZGUnLGlkOidpbmNsdWRlJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidtYXhfbGluZV9ieXRlcycsaWQ6J21heF9saW5lX2J5dGVzJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidtYXhfcmVhZF9ieXRlcycsaWQ6J21heF9yZWFkX2J5dGVzJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidtdWx0aWxpbmUnLGlkOidtdWx0aWxpbmUnLGNoaWxkcmVuOltdfSx7dmFsdWU6J29sZGVzdF9maXJzdCcsaWQ6J29sZGVzdF9maXJzdCcsY2hpbGRyZW46W119LHt2YWx1ZToncmVtb3ZlX2FmdGVyJyxpZDoncmVtb3ZlX2FmdGVyJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidzdGFydF9hdF9iZWdpbm5pbmcnLGlkOidzdGFydF9hdF9iZWdpbm5pbmcnLGNoaWxkcmVuOltdfV19LHt2YWx1ZTonRmllbGRzJyxpZDonZmllbGRzJyxjaGlsZHJlbjpbe3ZhbHVlOidmaWxlJyxpZDonZmlsZScsY2hpbGRyZW46W119LHt2YWx1ZTonaG9zdCcsaWQ6J2hvc3QnLGNoaWxkcmVuOltdfSx7dmFsdWU6J21lc3NhZ2UnLGlkOidtZXNzYWdlJyxjaGlsZHJlbjpbXX0se3ZhbHVlOid0aW1lc3RhbXAnLGlkOid0aW1lc3RhbXAnLGNoaWxkcmVuOltdfV19LHt2YWx1ZTonSG93IEl0IFdvcmtzJyxpZDonaG93LWl0LXdvcmtzJyxjaGlsZHJlbjpbe3ZhbHVlOidBdXRvIERpc2NvdmVyeScsaWQ6J2F1dG8tZGlzY292ZXJ5JyxjaGlsZHJlbjpbXX0se3ZhbHVlOidDaGVja3BvaW50aW5nJyxpZDonY2hlY2twb2ludGluZycsY2hpbGRyZW46W119LHt2YWx1ZTonQ29tcHJlc3NlZCBGaWxlcycsaWQ6J2NvbXByZXNzZWQtZmlsZXMnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0NvbnRleHQnLGlkOidjb250ZXh0JyxjaGlsZHJlbjpbXX0se3ZhbHVlOidFbnZpcm9ubWVudCBWYXJpYWJsZXMnLGlkOidlbnZpcm9ubWVudC12YXJpYWJsZXMnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0ZpbGUgRGVsZXRpb24nLGlkOidmaWxlLWRlbGV0aW9uJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidGaWxlIFJlYWQgT3JkZXInLGlkOidmaWxlLXJlYWQtb3JkZXInLGNoaWxkcmVuOltdfSx7dmFsdWU6J0ZpbGUgUm90YXRpb24nLGlkOidmaWxlLXJvdGF0aW9uJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidGaW5nZXJwcmludGluZycsaWQ6J2ZpbmdlcnByaW50aW5nLTEnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0dsb2JiaW5nJyxpZDonZ2xvYmJpbmcnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0xpbmUgRGVsaW1pdGVycycsaWQ6J2xpbmUtZGVsaW1pdGVycycsY2hpbGRyZW46W119LHt2YWx1ZTonTXVsdGktTGluZSBNZXNzYWdlcycsaWQ6J211bHRpLWxpbmUtbWVzc2FnZXMnLGNoaWxkcmVuOltdfSx7dmFsdWU6J1JlYWQgUG9zaXRpb24nLGlkOidyZWFkLXBvc2l0aW9uJyxjaGlsZHJlbjpbXX1dfV07dmFyIG1ha2VTaG9ydGNvZGU9ZnVuY3Rpb24gbWFrZVNob3J0Y29kZShuYW1lKXtyZXR1cm4gZnVuY3Rpb24gTURYRGVmYXVsdFNob3J0Y29kZShwcm9wcyl7Y29uc29sZS53YXJuKCJDb21wb25lbnQgIituYW1lKyIgd2FzIG5vdCBpbXBvcnRlZCwgZXhwb3J0ZWQsIG9yIHByb3ZpZGVkIGJ5IE1EWFByb3ZpZGVyIGFzIGdsb2JhbCBzY29wZSIpO3JldHVybiBtZHgoImRpdiIscHJvcHMpO307fTt2YXIgbGF5b3V0UHJvcHM9e3JpZ2h0VG9jOnJpZ2h0VG9jfTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoInAiLG51bGwsIlRoZSBWZWN0b3IgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2ZpbGUifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LCJmaWxlIikpLCIgc291cmNlXG5pbmdlc3RzIGRhdGEgdGhyb3VnaCBvbmUgb3IgbW9yZSBsb2NhbCBmaWxlcyBhbmQgb3V0cHV0c1xuIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiL2RvY3MvYWJvdXQvZGF0YS1tb2RlbC9sb2cvIn0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSwibG9nIikpLCIgZXZlbnRzLiIpLG1keCgiaDIiLHsiaWQiOiJyZXF1aXJlbWVudHMifSwiUmVxdWlyZW1lbnRzIiksbWR4KEFsZXJ0LHtpY29uOmZhbHNlLHR5cGU6ImRhbmdlciIsY2xhc3NOYW1lOiJsaXN0LS1pY29ucyBsaXN0LS1pY29ucy0td2FybmluZ3MiLG1keFR5cGU6IkFsZXJ0In0sbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiVGhpcyBjb21wb25lbnQgbXVzdCBiZSBwcm92aWRlZCBhY2Nlc3MgdG8gdGhlIGNvbmZpZ3VyZWQgZmlsZSBzeXN0ZW0uIikpKSxtZHgoImgyIix7ImlkIjoiY29uZmlndXJhdGlvbiJ9LCJDb25maWd1cmF0aW9uIiksbWR4KFRhYnMse2Jsb2NrOnRydWUsZGVmYXVsdFZhbHVlOiJjb21tb24iLHZhbHVlczpbeyJsYWJlbCI6IkNvbW1vbiIsInZhbHVlIjoiY29tbW9uIn0seyJsYWJlbCI6IkFkdmFuY2VkIiwidmFsdWUiOiJhZHZhbmNlZCJ9XSxtZHhUeXBlOiJUYWJzIn0sbWR4KFRhYkl0ZW0se3ZhbHVlOiJjb21tb24iLG1keFR5cGU6IlRhYkl0ZW0ifSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXRvbWwiLCJtZXRhc3RyaW5nIjoidGl0bGU9XCJ2ZWN0b3IudG9tbFwiIiwidGl0bGUiOiJcInZlY3Rvci50b21sXCIifSksIltzb3VyY2VzLm15X3NvdXJjZV9pZF1cbiAgIyBHZW5lcmFsXG4gIHR5cGUgPSBcImZpbGVcIiAjIHJlcXVpcmVkXG4gIGlnbm9yZV9vbGRlciA9IDg2NDAwICMgb3B0aW9uYWwsIG5vIGRlZmF1bHQsIHNlY29uZHNcbiAgaW5jbHVkZSA9IFtcIi92YXIvbG9nL25naW54LyoubG9nXCJdICMgcmVxdWlyZWRcbiAgc3RhcnRfYXRfYmVnaW5uaW5nID0gZmFsc2UgIyBvcHRpb25hbCwgZGVmYXVsdFxuXG4gICMgUHJpb3JpdHlcbiAgb2xkZXN0X2ZpcnN0ID0gZmFsc2UgIyBvcHRpb25hbCwgZGVmYXVsdFxuIikpKSxtZHgoVGFiSXRlbSx7dmFsdWU6ImFkdmFuY2VkIixtZHhUeXBlOiJUYWJJdGVtIn0sbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS10b21sIiwibWV0YXN0cmluZyI6InRpdGxlPVwidmVjdG9yLnRvbWxcIiIsInRpdGxlIjoiXCJ2ZWN0b3IudG9tbFwiIn0pLCJbc291cmNlcy5teV9zb3VyY2VfaWRdXG4gICMgR2VuZXJhbFxuICB0eXBlID0gXCJmaWxlXCIgIyByZXF1aXJlZFxuICBkYXRhX2RpciA9IFwiL3Zhci9saWIvdmVjdG9yXCIgIyBvcHRpb25hbCwgbm8gZGVmYXVsdFxuICBleGNsdWRlID0gW1wiL3Zhci9sb2cvbmdpbngvKi5bMC05XSoubG9nXCJdICMgb3B0aW9uYWwsIG5vIGRlZmF1bHRcbiAgZ2xvYl9taW5pbXVtX2Nvb2xkb3duID0gMTAwMCAjIG9wdGlvbmFsLCBkZWZhdWx0LCBtaWxsaXNlY29uZHNcbiAgaWdub3JlX29sZGVyID0gODY0MDAgIyBvcHRpb25hbCwgbm8gZGVmYXVsdCwgc2Vjb25kc1xuICBpbmNsdWRlID0gW1wiL3Zhci9sb2cvbmdpbngvKi5sb2dcIl0gIyByZXF1aXJlZFxuICBtYXhfbGluZV9ieXRlcyA9IDEwMjQwMCAjIG9wdGlvbmFsLCBkZWZhdWx0LCBieXRlc1xuICByZW1vdmVfYWZ0ZXIgPSAwICMgb3B0aW9uYWwsIG5vIGRlZmF1bHQsIHNlY29uZHNcbiAgc3RhcnRfYXRfYmVnaW5uaW5nID0gZmFsc2UgIyBvcHRpb25hbCwgZGVmYXVsdFxuXG4gICMgQ29udGV4dFxuICBmaWxlX2tleSA9IFwiZmlsZVwiICMgb3B0aW9uYWwsIGRlZmF1bHRcbiAgaG9zdF9rZXkgPSBcImhvc3RcIiAjIG9wdGlvbmFsLCBkZWZhdWx0XG5cbiAgIyBGaW5nZXJwcmludGluZ1xuICBmaW5nZXJwcmludGluZy5maW5nZXJwcmludF9ieXRlcyA9IDI1NiAjIG9wdGlvbmFsLCBkZWZhdWx0LCBieXRlcywgcmVsZXZhbnQgd2hlbiBzdHJhdGVneSA9IFwiY2hlY2tzdW1cIlxuICBmaW5nZXJwcmludGluZy5pZ25vcmVkX2hlYWRlcl9ieXRlcyA9IDAgIyBvcHRpb25hbCwgZGVmYXVsdCwgYnl0ZXMsIHJlbGV2YW50IHdoZW4gc3RyYXRlZ3kgPSBcImNoZWNrc3VtXCJcbiAgZmluZ2VycHJpbnRpbmcuc3RyYXRlZ3kgPSBcImNoZWNrc3VtXCIgIyBvcHRpb25hbCwgZGVmYXVsdFxuXG4gICMgTXVsdGlsaW5lXG4gIG11bHRpbGluZS5jb25kaXRpb25fcGF0dGVybiA9IFwiXltcXFxcc10rXCIgIyByZXF1aXJlZFxuICBtdWx0aWxpbmUubW9kZSA9IFwiY29udGludWVfdGhyb3VnaFwiICMgcmVxdWlyZWRcbiAgbXVsdGlsaW5lLnN0YXJ0X3BhdHRlcm4gPSBcIl5bXlxcXFxzXVwiICMgcmVxdWlyZWRcbiAgbXVsdGlsaW5lLnRpbWVvdXRfbXMgPSAxMDAwICMgcmVxdWlyZWQsIG1pbGxpc2Vjb25kc1xuXG4gICMgUHJpb3JpdHlcbiAgbWF4X3JlYWRfYnl0ZXMgPSAyMDQ4ICMgb3B0aW9uYWwsIGRlZmF1bHQsIGJ5dGVzXG4gIG9sZGVzdF9maXJzdCA9IGZhbHNlICMgb3B0aW9uYWwsIGRlZmF1bHRcbiIpKSkpLG1keChGaWVsZHMse2ZpbHRlcnM6dHJ1ZSxtZHhUeXBlOiJGaWVsZHMifSxtZHgoRmllbGQse2NvbW1vbjpmYWxzZSxkZWZhdWx0VmFsdWU6bnVsbCxlbnVtVmFsdWVzOm51bGwsZXhhbXBsZXM6WyIvdmFyL2xpYi92ZWN0b3IiXSxncm91cHM6W10sbmFtZToiZGF0YV9kaXIiLHBhdGg6bnVsbCxyZWxldmFudFdoZW46bnVsbCxyZXF1aXJlZDpmYWxzZSx0ZW1wbGF0ZWFibGU6ZmFsc2UsdHlwZToic3RyaW5nIix1bml0Om51bGwsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImgzIix7ImlkIjoiZGF0YV9kaXIifSwiZGF0YV9kaXIiKSxtZHgoInAiLG51bGwsIlRoZSBkaXJlY3RvcnkgdXNlZCB0byBwZXJzaXN0IGZpbGUgY2hlY2twb2ludCBwb3NpdGlvbnMuIEJ5IGRlZmF1bHQsIHRoZVxuIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiL2RvY3MvcmVmZXJlbmNlL2dsb2JhbC1vcHRpb25zLyNkYXRhX2RpciJ9KSwiZ2xvYmFsIFsiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSwiZGF0YV9kaXIiKSwiXSgjZGF0YV9kaXIpIG9wdGlvbiIpLCIgaXMgdXNlZC4gUGxlYXNlIG1ha2VcbnN1cmUgdGhlIFZlY3RvciBwcm9qZWN0IGhhcyB3cml0ZSBwZXJtaXNzaW9ucyB0byB0aGlzIGRpci5cblNlZSAiLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIjY2hlY2twb2ludGluZyJ9KSwiQ2hlY2twb2ludGluZyIpLCIgZm9yIG1vcmUgaW5mby4iKSksbWR4KEZpZWxkLHtjb21tb246ZmFsc2UsZGVmYXVsdFZhbHVlOm51bGwsZW51bVZhbHVlczpudWxsLGV4YW1wbGVzOltbIi92YXIvbG9nL25naW54LyouWzAtOV0qLmxvZyJdXSxncm91cHM6W10sbmFtZToiZXhjbHVkZSIscGF0aDpudWxsLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJbc3RyaW5nXSIsdW5pdDpudWxsLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoMyIseyJpZCI6ImV4Y2x1ZGUifSwiZXhjbHVkZSIpLG1keCgicCIsbnVsbCwiQXJyYXkgb2YgZmlsZSBwYXR0ZXJucyB0byBleGNsdWRlLiAiLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIjZ2xvYmJpbmcifSksIkdsb2JiaW5nIiksIiBpcyBzdXBwb3J0ZWQuIixtZHgoImVtIix7cGFyZW50TmFtZToicCJ9LCJUYWtlc1xucHJlY2VkZW5jZSBvdmVyIHRoZSAiLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6ImVtIn0seyJocmVmIjoiI2luY2x1ZGUifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LCJpbmNsdWRlIiksIiBvcHRpb24iKSwiLiIpKSksbWR4KEZpZWxkLHtjb21tb246ZmFsc2UsZGVmYXVsdFZhbHVlOiJmaWxlIixlbnVtVmFsdWVzOm51bGwsZXhhbXBsZXM6WyJmaWxlIl0sZ3JvdXBzOltdLG5hbWU6ImZpbGVfa2V5IixwYXRoOm51bGwscmVsZXZhbnRXaGVuOm51bGwscmVxdWlyZWQ6ZmFsc2UsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6InN0cmluZyIsdW5pdDpudWxsLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoMyIseyJpZCI6ImZpbGVfa2V5In0sImZpbGVfa2V5IiksbWR4KCJwIixudWxsLCJUaGUga2V5IG5hbWUgYWRkZWQgdG8gZWFjaCBldmVudCB3aXRoIHRoZSBmdWxsIHBhdGggb2YgdGhlIGZpbGUuXG5TZWUgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2NvbnRleHQifSksIkNvbnRleHQiKSwiIGZvciBtb3JlIGluZm8uIikpLG1keChGaWVsZCx7Y29tbW9uOmZhbHNlLGRlZmF1bHRWYWx1ZTpudWxsLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbXSxncm91cHM6W10sbmFtZToiZmluZ2VycHJpbnRpbmciLHBhdGg6bnVsbCxyZWxldmFudFdoZW46bnVsbCxyZXF1aXJlZDpmYWxzZSx0ZW1wbGF0ZWFibGU6ZmFsc2UsdHlwZToidGFibGUiLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDMiLHsiaWQiOiJmaW5nZXJwcmludGluZyJ9LCJmaW5nZXJwcmludGluZyIpLG1keCgicCIsbnVsbCwiQ29uZmlndXJhdGlvbiBmb3IgaG93IHRoZSBmaWxlIHNvdXJjZSBzaG91bGQgaWRlbnRpZnkgZmlsZXMuIiksbWR4KEZpZWxkcyx7ZmlsdGVyczpmYWxzZSxtZHhUeXBlOiJGaWVsZHMifSxtZHgoRmllbGQse2NvbW1vbjpmYWxzZSxkZWZhdWx0VmFsdWU6MjU2LGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbMjU2XSxncm91cHM6W10sbmFtZToiZmluZ2VycHJpbnRfYnl0ZXMiLHBhdGg6ImZpbmdlcnByaW50aW5nIixyZWxldmFudFdoZW46eyJzdHJhdGVneSI6ImNoZWNrc3VtIn0scmVxdWlyZWQ6ZmFsc2UsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6InVpbnQiLHVuaXQ6ImJ5dGVzIix3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDQiLHsiaWQiOiJmaW5nZXJwcmludF9ieXRlcyJ9LCJmaW5nZXJwcmludF9ieXRlcyIpLG1keCgicCIsbnVsbCwiVGhlIG51bWJlciBvZiBieXRlcyByZWFkIG9mZiB0aGUgaGVhZCBvZiB0aGUgZmlsZSB0byBnZW5lcmF0ZSBhIHVuaXF1ZVxuZmluZ2VycHJpbnQuXG5TZWUgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2ZpbmdlcnByaW50aW5nIn0pLCJGaW5nZXJwcmludGluZyIpLCIgZm9yIG1vcmUgaW5mby4iKSksbWR4KEZpZWxkLHtjb21tb246ZmFsc2UsZGVmYXVsdFZhbHVlOjAsZW51bVZhbHVlczpudWxsLGV4YW1wbGVzOlswXSxncm91cHM6W10sbmFtZToiaWdub3JlZF9oZWFkZXJfYnl0ZXMiLHBhdGg6ImZpbmdlcnByaW50aW5nIixyZWxldmFudFdoZW46eyJzdHJhdGVneSI6ImNoZWNrc3VtIn0scmVxdWlyZWQ6ZmFsc2UsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6InVpbnQiLHVuaXQ6ImJ5dGVzIix3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDQiLHsiaWQiOiJpZ25vcmVkX2hlYWRlcl9ieXRlcyJ9LCJpZ25vcmVkX2hlYWRlcl9ieXRlcyIpLG1keCgicCIsbnVsbCwiVGhlIG51bWJlciBvZiBieXRlcyB0byBza2lwIGFoZWFkIChvciBpZ25vcmUpIHdoZW4gZ2VuZXJhdGluZyBhIHVuaXF1ZVxuZmluZ2VycHJpbnQuIFRoaXMgaXMgaGVscGZ1bCBpZiBhbGwgZmlsZXMgc2hhcmUgYSBjb21tb24gaGVhZGVyLlxuU2VlICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNmaW5nZXJwcmludGluZyJ9KSwiRmluZ2VycHJpbnRpbmciKSwiIGZvciBtb3JlIGluZm8uIikpLG1keChGaWVsZCx7Y29tbW9uOmZhbHNlLGRlZmF1bHRWYWx1ZToiY2hlY2tzdW0iLGVudW1WYWx1ZXM6eyJjaGVja3N1bSI6IlJlYWQgW2BmaW5nZXJwcmludF9ieXRlc2BdKCNmaW5nZXJwcmludF9ieXRlcykgYnl0ZXMgZnJvbSB0aGUgaGVhZCBvZiB0aGUgZmlsZSB0byB1bmlxdWVseSBpZGVudGlmeSBmaWxlcyB2aWEgYSBjaGVja3N1bS4iLCJkZXZpY2VfYW5kX2lub2RlIjoiVXNlcyB0aGUgW2RldmljZSBhbmQgaW5vZGVdW3VybHMuaW5vZGVdIHRvIHVuaXF1ZSBpZGVudGlmeSBmaWxlcy4ifSxleGFtcGxlczpbImNoZWNrc3VtIiwiZGV2aWNlX2FuZF9pbm9kZSJdLGdyb3VwczpbXSxuYW1lOiJzdHJhdGVneSIscGF0aDoiZmluZ2VycHJpbnRpbmciLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJzdHJpbmciLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDQiLHsiaWQiOiJzdHJhdGVneSJ9LCJzdHJhdGVneSIpLG1keCgicCIsbnVsbCwiVGhlIHN0cmF0ZWd5IHVzZWQgdG8gdW5pcXVlbHkgaWRlbnRpZnkgZmlsZXMuIFRoaXMgaXMgaW1wb3J0YW50IGZvclxuIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2NoZWNrcG9pbnRpbmcifSksImNoZWNrcG9pbnRpbmciKSwiIHdoZW4gZmlsZSByb3RhdGlvbiBpcyB1c2VkLiIpKSkpLG1keChGaWVsZCx7Y29tbW9uOmZhbHNlLGRlZmF1bHRWYWx1ZToxMDAwLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbMTAwMF0sZ3JvdXBzOltdLG5hbWU6Imdsb2JfbWluaW11bV9jb29sZG93biIscGF0aDpudWxsLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ1aW50Iix1bml0OiJtaWxsaXNlY29uZHMiLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoMyIseyJpZCI6Imdsb2JfbWluaW11bV9jb29sZG93biJ9LCJnbG9iX21pbmltdW1fY29vbGRvd24iKSxtZHgoInAiLG51bGwsIkRlbGF5IGJldHdlZW4gZmlsZSBkaXNjb3ZlcnkgY2FsbHMuIFRoaXMgY29udHJvbHMgdGhlIGludGVydmFsIGF0IHdoaWNoIFZlY3Rvclxuc2VhcmNoZXMgZm9yIGZpbGVzLlxuU2VlICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNhdXRvLWRpc2NvdmVyeSJ9KSwiQXV0byBEaXNjb3ZlcnkiKSwiIGFuZCAiLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIjZ2xvYmJpbmcifSksIkdsb2JiaW5nIiksIiBmb3IgbW9yZSBpbmZvLiIpKSxtZHgoRmllbGQse2NvbW1vbjpmYWxzZSxkZWZhdWx0VmFsdWU6Imhvc3QiLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbImhvc3QiXSxncm91cHM6W10sbmFtZToiaG9zdF9rZXkiLHBhdGg6bnVsbCxyZWxldmFudFdoZW46bnVsbCxyZXF1aXJlZDpmYWxzZSx0ZW1wbGF0ZWFibGU6ZmFsc2UsdHlwZToic3RyaW5nIix1bml0Om51bGwsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImgzIix7ImlkIjoiaG9zdF9rZXkifSwiaG9zdF9rZXkiKSxtZHgoInAiLG51bGwsIlRoZSBrZXkgbmFtZSBhZGRlZCB0byBlYWNoIGV2ZW50IHJlcHJlc2VudGluZyB0aGUgY3VycmVudCBob3N0LiBUaGlzIGNhbiBhbHNvXG5iZSBnbG9iYWxseSBzZXQgdmlhIHRoZSAiLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIvZG9jcy9yZWZlcmVuY2UvZ2xvYmFsLW9wdGlvbnMvI2hvc3Rfa2V5In0pLCJnbG9iYWwgWyIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LCJob3N0X2tleSIpLCJdKCNob3N0X2tleSlcbm9wdGlvbiIpLCIuXG5TZWUgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2NvbnRleHQifSksIkNvbnRleHQiKSwiIGZvciBtb3JlIGluZm8uIikpLG1keChGaWVsZCx7Y29tbW9uOnRydWUsZGVmYXVsdFZhbHVlOm51bGwsZW51bVZhbHVlczpudWxsLGV4YW1wbGVzOls4NjQwMF0sZ3JvdXBzOltdLG5hbWU6Imlnbm9yZV9vbGRlciIscGF0aDpudWxsLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ1aW50Iix1bml0OiJzZWNvbmRzIix3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDMiLHsiaWQiOiJpZ25vcmVfb2xkZXIifSwiaWdub3JlX29sZGVyIiksbWR4KCJwIixudWxsLCJJZ25vcmUgZmlsZXMgd2l0aCBhIGRhdGEgbW9kaWZpY2F0aW9uIGRhdGUgdGhhdCBkb2VzIG5vdCBleGNlZWQgdGhpcyBhZ2UuIikpLG1keChGaWVsZCx7Y29tbW9uOnRydWUsZGVmYXVsdFZhbHVlOm51bGwsZW51bVZhbHVlczpudWxsLGV4YW1wbGVzOltbIi92YXIvbG9nL25naW54LyoubG9nIl1dLGdyb3VwczpbXSxuYW1lOiJpbmNsdWRlIixwYXRoOm51bGwscmVsZXZhbnRXaGVuOm51bGwscmVxdWlyZWQ6dHJ1ZSx0ZW1wbGF0ZWFibGU6ZmFsc2UsdHlwZToiW3N0cmluZ10iLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDMiLHsiaWQiOiJpbmNsdWRlIn0sImluY2x1ZGUiKSxtZHgoInAiLG51bGwsIkFycmF5IG9mIGZpbGUgcGF0dGVybnMgdG8gaW5jbHVkZS4gIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2dsb2JiaW5nIn0pLCJHbG9iYmluZyIpLCIgaXMgc3VwcG9ydGVkLlxuU2VlICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNmaWxlLXJlYWQtb3JkZXIifSksIkZpbGUgUmVhZCBPcmRlciIpLCIgYW5kICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNmaWxlLXJvdGF0aW9uIn0pLCJGaWxlIFJvdGF0aW9uIiksIiBmb3IgbW9yZSBpbmZvLiIpKSxtZHgoRmllbGQse2NvbW1vbjpmYWxzZSxkZWZhdWx0VmFsdWU6MTAyNDAwLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbMTAyNDAwXSxncm91cHM6W10sbmFtZToibWF4X2xpbmVfYnl0ZXMiLHBhdGg6bnVsbCxyZWxldmFudFdoZW46bnVsbCxyZXF1aXJlZDpmYWxzZSx0ZW1wbGF0ZWFibGU6ZmFsc2UsdHlwZToidWludCIsdW5pdDoiYnl0ZXMiLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoMyIseyJpZCI6Im1heF9saW5lX2J5dGVzIn0sIm1heF9saW5lX2J5dGVzIiksbWR4KCJwIixudWxsLCJUaGUgbWF4aW11bSBudW1iZXIgb2YgYSBieXRlcyBhIGxpbmUgY2FuIGNvbnRhaW4gYmVmb3JlIGJlaW5nIGRpc2NhcmRlZC4gVGhpc1xucHJvdGVjdHMgYWdhaW5zdCBtYWxmb3JtZWQgbGluZXMgb3IgdGFpbGluZyBpbmNvcnJlY3QgZmlsZXMuIikpLG1keChGaWVsZCx7Y29tbW9uOmZhbHNlLGRlZmF1bHRWYWx1ZToyMDQ4LGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbMjA0OF0sZ3JvdXBzOltdLG5hbWU6Im1heF9yZWFkX2J5dGVzIixwYXRoOm51bGwscmVsZXZhbnRXaGVuOm51bGwscmVxdWlyZWQ6ZmFsc2UsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6InVpbnQiLHVuaXQ6ImJ5dGVzIix3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDMiLHsiaWQiOiJtYXhfcmVhZF9ieXRlcyJ9LCJtYXhfcmVhZF9ieXRlcyIpLG1keCgicCIsbnVsbCwiQW4gYXBwcm94aW1hdGUgbGltaXQgb24gdGhlIGFtb3VudCBvZiBkYXRhIHJlYWQgZnJvbSBhIHNpbmdsZSBmaWxlIGF0IGEgZ2l2ZW5cbnRpbWUuIikpLG1keChGaWVsZCx7Y29tbW9uOmZhbHNlLGRlZmF1bHRWYWx1ZTpudWxsLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbXSxncm91cHM6W10sbmFtZToibXVsdGlsaW5lIixwYXRoOm51bGwscmVsZXZhbnRXaGVuOm51bGwscmVxdWlyZWQ6ZmFsc2UsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6InRhYmxlIix1bml0Om51bGwsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImgzIix7ImlkIjoibXVsdGlsaW5lIn0sIm11bHRpbGluZSIpLG1keCgicCIsbnVsbCwiTXVsdGlsaW5lIHBhcnNpbmcgY29uZmlndXJhdGlvbiAocGVyIGZpbGUpLlxuSWYgbm90IHNwZWljaWZpZWQsIG11bHRpbGluZSBwYXJzaW5nIGlzIGRpc2FibGVkLlxuU2VlICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNtdWx0aS1saW5lLW1lc3NhZ2VzIn0pLCJNdWx0aS1MaW5lIE1lc3NhZ2VzIiksIiBmb3IgbW9yZSBpbmZvLiIpLG1keChGaWVsZHMse2ZpbHRlcnM6ZmFsc2UsbWR4VHlwZToiRmllbGRzIn0sbWR4KEZpZWxkLHtjb21tb246dHJ1ZSxkZWZhdWx0VmFsdWU6bnVsbCxlbnVtVmFsdWVzOm51bGwsZXhhbXBsZXM6WyJeW1xcc10rIiwiXFxcXCQiLCJeKElORk98RVJST1IpICIsIjskIl0sZ3JvdXBzOltdLG5hbWU6ImNvbmRpdGlvbl9wYXR0ZXJuIixwYXRoOiJtdWx0aWxpbmUiLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOnRydWUsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6InN0cmluZyIsdW5pdDpudWxsLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoNCIseyJpZCI6ImNvbmRpdGlvbl9wYXR0ZXJuIn0sImNvbmRpdGlvbl9wYXR0ZXJuIiksbWR4KCJwIixudWxsLCJDb25kaXRpb24gcmVnZXggcGF0dGVybiB0byBsb29rIGZvci4gRXhhY3QgYmVoYXZpb3IgaXMgY29uZmlndXJlZCB2aWEgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI21vZGUifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LCJtb2RlIikpLCIuXG5TZWUgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI211bHRpLWxpbmUtbWVzc2FnZXMifSksIk11bHRpLUxpbmUgTWVzc2FnZXMiKSwiIGZvciBtb3JlIGluZm8uIikpLG1keChGaWVsZCx7Y29tbW9uOnRydWUsZGVmYXVsdFZhbHVlOm51bGwsZW51bVZhbHVlczp7ImNvbnRpbnVlX3Rocm91Z2giOiJBbGwgY29uc2VjdXRpdmUgbGluZXMgbWF0Y2hpbmcgdGhpcyBwYXR0ZXJuIGFyZSBpbmNsdWRlZCBpbiB0aGUgZ3JvdXAuIFRoZSBmaXJzdCBsaW5lICh0aGUgbGluZSB0aGF0IG1hdGNoZWQgdGhlIHN0YXJ0IHBhdHRlcm4pIGRvZXMgbm90IG5lZWQgdG8gbWF0Y2ggdGhlIGBDb250aW51ZVRocm91Z2hgIHBhdHRlcm4uIFRoaXMgaXMgdXNlZnVsIGluIGNhc2VzIHN1Y2ggYXMgYSBKYXZhIHN0YWNrIHRyYWNlLCB3aGVyZSBzb21lIGluZGljYXRvciBpbiB0aGUgbGluZSAoc3VjaCBhcyBsZWFkaW5nIHdoaXRlc3BhY2UpIGluZGljYXRlcyB0aGF0IGl0IGlzIGFuIGV4dGVuc2lvbiBvZiB0aGUgcHJlY2VlZGluZyBsaW5lLiIsImNvbnRpbnVlX3Bhc3QiOiJBbGwgY29uc2VjdXRpdmUgbGluZXMgbWF0Y2hpbmcgdGhpcyBwYXR0ZXJuLCBwbHVzIG9uZSBhZGRpdGlvbmFsIGxpbmUsIGFyZSBpbmNsdWRlZCBpbiB0aGUgZ3JvdXAuIFRoaXMgaXMgdXNlZnVsIGluIGNhc2VzIHdoZXJlIGEgbG9nIG1lc3NhZ2UgZW5kcyB3aXRoIGEgY29udGludWF0aW9uIG1hcmtlciwgc3VjaCBhcyBhIGJhY2tzbGFzaCwgaW5kaWNhdGluZyB0aGF0IHRoZSBmb2xsb3dpbmcgbGluZSBpcyBwYXJ0IG9mIHRoZSBzYW1lIG1lc3NhZ2UuIiwiaGFsdF9iZWZvcmUiOiJBbGwgY29uc2VjdXRpdmUgbGluZXMgbm90IG1hdGNoaW5nIHRoaXMgcGF0dGVybiBhcmUgaW5jbHVkZWQgaW4gdGhlIGdyb3VwLiBUaGlzIGlzIHVzZWZ1bCB3aGVyZSBhIGxvZyBsaW5lIGNvbnRhaW5zIGEgbWFya2VyIGluZGljYXRpbmcgdGhhdCBpdCBiZWdpbnMgYSBuZXcgbWVzc2FnZS4iLCJoYWx0X3dpdGgiOiJBbGwgY29uc2VjdXRpdmUgbGluZXMsIHVwIHRvIGFuZCBpbmNsdWRpbmcgdGhlIGZpcnN0IGxpbmUgbWF0Y2hpbmcgdGhpcyBwYXR0ZXJuLCBhcmUgaW5jbHVkZWQgaW4gdGhlIGdyb3VwLiBUaGlzIGlzIHVzZWZ1bCB3aGVyZSBhIGxvZyBsaW5lIGVuZHMgd2l0aCBhIHRlcm1pbmF0aW9uIG1hcmtlciwgc3VjaCBhcyBhIHNlbWljb2xvbi4ifSxleGFtcGxlczpbImNvbnRpbnVlX3Rocm91Z2giLCJjb250aW51ZV9wYXN0IiwiaGFsdF9iZWZvcmUiLCJoYWx0X3dpdGgiXSxncm91cHM6W10sbmFtZToibW9kZSIscGF0aDoibXVsdGlsaW5lIixyZWxldmFudFdoZW46bnVsbCxyZXF1aXJlZDp0cnVlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJzdHJpbmciLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDQiLHsiaWQiOiJtb2RlIn0sIm1vZGUiKSxtZHgoInAiLG51bGwsIk1vZGUgb2Ygb3BlcmF0aW9uLCBzcGVjaWZpZXMgaG93IHRoZSAiLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIjY29uZGl0aW9uX3BhdHRlcm4ifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LCJjb25kaXRpb25fcGF0dGVybiIpKSwiIGlzIGludGVycHJldGVkLlxuU2VlICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNtdWx0aS1saW5lLW1lc3NhZ2VzIn0pLCJNdWx0aS1MaW5lIE1lc3NhZ2VzIiksIiBmb3IgbW9yZSBpbmZvLiIpKSxtZHgoRmllbGQse2NvbW1vbjp0cnVlLGRlZmF1bHRWYWx1ZTpudWxsLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbIl5bXlxcc10iLCJcXFxcJCIsIl4oSU5GT3xFUlJPUikgIiwiW147XSQiXSxncm91cHM6W10sbmFtZToic3RhcnRfcGF0dGVybiIscGF0aDoibXVsdGlsaW5lIixyZWxldmFudFdoZW46bnVsbCxyZXF1aXJlZDp0cnVlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJzdHJpbmciLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDQiLHsiaWQiOiJzdGFydF9wYXR0ZXJuIn0sInN0YXJ0X3BhdHRlcm4iKSxtZHgoInAiLG51bGwsIlN0YXJ0IHJlZ2V4IHBhdHRlcm4gdG8gbG9vayBmb3IgYXMgYSBiZWdpbm5pbmcgb2YgdGhlIG1lc3NhZ2UuXG5TZWUgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI211bHRpLWxpbmUtbWVzc2FnZXMifSksIk11bHRpLUxpbmUgTWVzc2FnZXMiKSwiIGZvciBtb3JlIGluZm8uIikpLG1keChGaWVsZCx7Y29tbW9uOnRydWUsZGVmYXVsdFZhbHVlOm51bGwsZW51bVZhbHVlczpudWxsLGV4YW1wbGVzOlsxMDAwLDYwMDAwMF0sZ3JvdXBzOltdLG5hbWU6InRpbWVvdXRfbXMiLHBhdGg6Im11bHRpbGluZSIscmVsZXZhbnRXaGVuOm51bGwscmVxdWlyZWQ6dHJ1ZSx0ZW1wbGF0ZWFibGU6ZmFsc2UsdHlwZToidWludCIsdW5pdDoibWlsbGlzZWNvbmRzIix3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDQiLHsiaWQiOiJ0aW1lb3V0X21zIn0sInRpbWVvdXRfbXMiKSxtZHgoInAiLG51bGwsIlRoZSBtYXhpbXVtIHRpbWUgdG8gd2FpdCBmb3IgdGhlIGNvbnRpbnVhdGlvbi4gT25jZSB0aGlzIHRpbWVvdXQgaXMgcmVhY2hlZCxcbnRoZSBidWZmZXJlZCBtZXNzYWdlIGlzIGd1YXJhbmVlZCB0byBiZSBmbHVzaGVkLCBldmVuIGlmIGluY29tcGxldGUuIikpKSksbWR4KEZpZWxkLHtjb21tb246dHJ1ZSxkZWZhdWx0VmFsdWU6ZmFsc2UsZW51bVZhbHVlczpudWxsLGV4YW1wbGVzOltmYWxzZSx0cnVlXSxncm91cHM6W10sbmFtZToib2xkZXN0X2ZpcnN0IixwYXRoOm51bGwscmVsZXZhbnRXaGVuOm51bGwscmVxdWlyZWQ6ZmFsc2UsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6ImJvb2wiLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDMiLHsiaWQiOiJvbGRlc3RfZmlyc3QifSwib2xkZXN0X2ZpcnN0IiksbWR4KCJwIixudWxsLCJJbnN0ZWFkIG9mIGJhbGFuY2luZyByZWFkIGNhcGFjaXR5IGZhaXJseSBhY3Jvc3MgYWxsIHdhdGNoZWQgZmlsZXMsIHByaW9yaXRpemVcbmRyYWluaW5nIHRoZSBvbGRlc3QgZmlsZXMgYmVmb3JlIG1vdmluZyBvbiB0byByZWFkIGRhdGEgZnJvbSB5b3VuZ2VyIGZpbGVzLlxuU2VlICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNmaWxlLXJlYWQtb3JkZXIifSksIkZpbGUgUmVhZCBPcmRlciIpLCIgZm9yIG1vcmUgaW5mby4iKSksbWR4KEZpZWxkLHtjb21tb246ZmFsc2UsZGVmYXVsdFZhbHVlOm51bGwsZW51bVZhbHVlczpudWxsLGV4YW1wbGVzOlswLDUsNjBdLGdyb3VwczpbXSxuYW1lOiJyZW1vdmVfYWZ0ZXIiLHBhdGg6bnVsbCxyZWxldmFudFdoZW46bnVsbCxyZXF1aXJlZDpmYWxzZSx0ZW1wbGF0ZWFibGU6ZmFsc2UsdHlwZToidWludCIsdW5pdDoic2Vjb25kcyIsd2FybmluZ3M6W3sidmlzaWJpbGl0eV9sZXZlbCI6Im9wdGlvbiIsInRleHQiOiJWZWN0b3IncyBwcm9jZXNzIG11c3QgaGF2ZSBwZXJtaXNzaW9uIHRvIGRlbGV0ZSBmaWxlcy4iLCJvcHRpb25fbmFtZSI6InJlbW92ZV9hZnRlciJ9XSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDMiLHsiaWQiOiJyZW1vdmVfYWZ0ZXIifSwicmVtb3ZlX2FmdGVyIiksbWR4KCJwIixudWxsLCJUaW1lb3V0IGZyb20gcmVhY2hpbmcgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImVvZiIpLCIgYWZ0ZXIgd2hpY2ggZmlsZSB3aWxsIGJlIHJlbW92ZWQgZnJvbSBmaWxlc3lzdGVtLFxudW5sZXNzIG5ldyBkYXRhIGlzIHdyaXR0ZW4gaW4gdGhlIG1lYW50aW1lLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyB3aWxsIG5vdCBiZVxucmVtb3ZlZC4iKSksbWR4KEZpZWxkLHtjb21tb246dHJ1ZSxkZWZhdWx0VmFsdWU6ZmFsc2UsZW51bVZhbHVlczpudWxsLGV4YW1wbGVzOltmYWxzZSx0cnVlXSxncm91cHM6W10sbmFtZToic3RhcnRfYXRfYmVnaW5uaW5nIixwYXRoOm51bGwscmVsZXZhbnRXaGVuOm51bGwscmVxdWlyZWQ6ZmFsc2UsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6ImJvb2wiLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDMiLHsiaWQiOiJzdGFydF9hdF9iZWdpbm5pbmcifSwic3RhcnRfYXRfYmVnaW5uaW5nIiksbWR4KCJwIixudWxsLCJGb3IgZmlsZXMgd2l0aCBhIHN0b3JlZCBjaGVja3BvaW50IGF0IHN0YXJ0dXAsIHNldHRpbmcgdGhpcyBvcHRpb24gdG8gIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInRydWUiKSwiXG53aWxsIHRlbGwgVmVjdG9yIHRvIHJlYWQgZnJvbSB0aGUgYmVnaW5uaW5nIG9mIHRoZSBmaWxlIGluc3RlYWQgb2YgdGhlIHN0b3JlZFxuY2hlY2twb2ludC5cblNlZSAiLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIjcmVhZC1wb3NpdGlvbiJ9KSwiUmVhZCBQb3NpdGlvbiIpLCIgZm9yIG1vcmUgaW5mby4iKSkpLG1keCgiaDIiLHsiaWQiOiJmaWVsZHMifSwiRmllbGRzIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qYXZhc2NyaXB0IiwibWV0YXN0cmluZyI6InRpdGxlPVwiZXhhbXBsZSBsb2cgZXZlbnRcIiIsInRpdGxlIjoiXCJleGFtcGxlIiwibG9nIjp0cnVlLCJldmVudFwiIjp0cnVlfSksIntcbiAgLy8gLi4uXG4gIFwiZmlsZVwiOiBcIi92YXIvbG9nL25naW54LmxvZ1wiLFxuICBcImhvc3RcIjogXCJteS5ob3N0LmNvbVwiLFxuICBcIm1lc3NhZ2VcIjogXCJTdGFydGVkIEdFVCAvIGZvciAxMjcuMC4wLjEgYXQgMjAxMi0wMy0xMCAxNDoyODoxNCArMDEwMFwiLFxuICBcInRpbWVzdGFtcFwiOiBcIjIwMTktMTEtMDFUMjE6MTU6NDcrMDA6MDBcIlxuICAvLyAuLi5cbn1cbiIpKSxtZHgoRmllbGRzLHtmaWx0ZXJzOnRydWUsbWR4VHlwZToiRmllbGRzIn0sbWR4KEZpZWxkLHtjb21tb246dHJ1ZSxkZWZhdWx0VmFsdWU6bnVsbCxlbnVtVmFsdWVzOm51bGwsZXhhbXBsZXM6WyIvdmFyL2xvZy9uZ2lueC5sb2ciXSxncm91cHM6W10sbmFtZToiZmlsZSIscGF0aDpudWxsLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOnRydWUsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6InN0cmluZyIsdW5pdDpudWxsLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoMyIseyJpZCI6ImZpbGUifSwiZmlsZSIpLG1keCgicCIsbnVsbCwiVGhlICIsbWR4KCJlbSIse3BhcmVudE5hbWU6InAifSwiZnVsbCIpLCIgcGF0aCBvZiB0aGUgZmlsZSB0aGEgdGhlIGxvZyBvcmlnaW5hdGVkIGZyb20uIFRoaXMgY2FuIGJlIHJlbmFtZWRcbnZpYSB0aGUgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2ZpbGVfa2V5In0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSwiZmlsZV9rZXkiKSksIiBvcHRpb24uXG5TZWUgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2NoZWNrcG9pbnRpbmcifSksIkNoZWNrcG9pbnRpbmciKSwiIGFuZCAiLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIjY29udGV4dCJ9KSwiQ29udGV4dCIpLCIgZm9yIG1vcmUgaW5mby4iKSksbWR4KEZpZWxkLHtjb21tb246dHJ1ZSxkZWZhdWx0VmFsdWU6bnVsbCxlbnVtVmFsdWVzOm51bGwsZXhhbXBsZXM6WyJteS5ob3N0LmNvbSJdLGdyb3VwczpbXSxuYW1lOiJob3N0IixwYXRoOm51bGwscmVsZXZhbnRXaGVuOm51bGwscmVxdWlyZWQ6dHJ1ZSx0ZW1wbGF0ZWFibGU6ZmFsc2UsdHlwZToic3RyaW5nIix1bml0Om51bGwsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImgzIix7ImlkIjoiaG9zdCJ9LCJob3N0IiksbWR4KCJwIixudWxsLCJUaGUgY3VycmVudCBob3N0bmFtZSwgZXF1aXZhbGVudCB0byB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImdldGhvc3RuYW1lIiksIiBjb21tYW5kLiBUaGlzIGNhbiBiZVxucmVuYW1lZCB2aWEgdGhlICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNob3N0X2tleSJ9KSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJhIn0sImhvc3Rfa2V5IikpLCIgb3B0aW9uLiIpKSxtZHgoRmllbGQse2NvbW1vbjp0cnVlLGRlZmF1bHRWYWx1ZTpudWxsLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbIlN0YXJ0ZWQgR0VUIC8gZm9yIDEyNy4wLjAuMSBhdCAyMDEyLTAzLTEwIDE0OjI4OjE0ICswMTAwIl0sZ3JvdXBzOltdLG5hbWU6Im1lc3NhZ2UiLHBhdGg6bnVsbCxyZWxldmFudFdoZW46bnVsbCxyZXF1aXJlZDp0cnVlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJzdHJpbmciLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDMiLHsiaWQiOiJtZXNzYWdlIn0sIm1lc3NhZ2UiKSxtZHgoInAiLG51bGwsIlRoZSByYXcgbG9nIG1lc3NhZ2UsIHVuYWx0ZXJlZC4gVGhpcyBjYW4gYmUgcmVuYW1lZCB2aWEgdGhlICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Ii9kb2NzL3JlZmVyZW5jZS9nbG9iYWwtb3B0aW9ucy8jbWVzc2FnZV9rZXkifSksImdsb2JhbFxuIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJhIn0sIm1lc3NhZ2Vfa2V5IiksIiBvcHRpb24iKSwiLiIpKSxtZHgoRmllbGQse2NvbW1vbjp0cnVlLGRlZmF1bHRWYWx1ZTpudWxsLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbIjIwMTktMTEtMDFUMjE6MTU6NDcrMDA6MDAiXSxncm91cHM6W10sbmFtZToidGltZXN0YW1wIixwYXRoOm51bGwscmVsZXZhbnRXaGVuOm51bGwscmVxdWlyZWQ6dHJ1ZSx0ZW1wbGF0ZWFibGU6ZmFsc2UsdHlwZToidGltZXN0YW1wIix1bml0Om51bGwsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImgzIix7ImlkIjoidGltZXN0YW1wIn0sInRpbWVzdGFtcCIpLG1keCgicCIsbnVsbCwiVGhlIGV4YWN0IHRpbWUgdGhlIGV2ZW50IHdhcyBpbmdlc3RlZC4gVGhpcyBjYW4gYmUgcmVuYW1lZCB2aWEgdGhlICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Ii9kb2NzL3JlZmVyZW5jZS9nbG9iYWwtb3B0aW9ucy8jdGltZXN0YW1wX2tleSJ9KSwiZ2xvYmFsXG4iLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSwidGltZXN0YW1wX2tleSIpLCIgb3B0aW9uIiksIi4iKSkpLG1keCgiaDIiLHsiaWQiOiJob3ctaXQtd29ya3MifSwiSG93IEl0IFdvcmtzIiksbWR4KCJoMyIseyJpZCI6ImF1dG8tZGlzY292ZXJ5In0sIkF1dG8gRGlzY292ZXJ5IiksbWR4KCJwIixudWxsLCJWZWN0b3Igd2lsbCBjb250aW51YWxseSBsb29rIGZvciBuZXcgZmlsZXMgbWF0Y2hpbmcgYW55IG9mIHlvdXIgaW5jbHVkZVxucGF0dGVybnMuIFRoZSBmcmVxdWVuY3kgaXMgY29udHJvbGxlZCB2aWEgdGhlICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNnbG9iX21pbmltdW1fY29vbGRvd24ifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LCJnbG9iX21pbmltdW1fY29vbGRvd24iKSksIiBvcHRpb24uXG5JZiBhIG5ldyBmaWxlIGlzIGFkZGVkIHRoYXQgbWF0Y2hlcyBhbnkgb2YgdGhlIHN1cHBsaWVkIHBhdHRlcm5zLCBWZWN0b3Igd2lsbFxuYmVnaW4gdGFpbGluZyBpdC4gVmVjdG9yIG1haW50YWlucyBhIHVuaXF1ZSBsaXN0IG9mIGZpbGVzIGFuZCB3aWxsIG5vdCB0YWlsIGFcbmZpbGUgbW9yZSB0aGFuIG9uY2UsIGV2ZW4gaWYgaXQgbWF0Y2hlcyBtdWx0aXBsZSBwYXR0ZXJucy4gWW91IGNhbiByZWFkIG1vcmVcbmFib3V0IGhvdyB3ZSBpZGVudGlmeSBmaWxlcyBpbiB0aGUgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2ZpbGUtaWRlbnRpZmljYXRpb24ifSksIklkZW50aWZpY2F0aW9uIiksIlxuc2VjdGlvbi4iKSxtZHgoImgzIix7ImlkIjoiY2hlY2twb2ludGluZyJ9LCJDaGVja3BvaW50aW5nIiksbWR4KCJwIixudWxsLCJWZWN0b3IgY2hlY2twb2ludHMgdGhlIGN1cnJlbnQgcmVhZCBwb3NpdGlvbiBpbiB0aGUgZmlsZSBhZnRlciBlYWNoIHN1Y2Nlc3NmdWxcbnJlYWQuIFRoaXMgZW5zdXJlcyB0aGF0IFZlY3RvciByZXN1bWVzIHdoZXJlIGl0IGxlZnQgb2ZmIGlmIHJlc3RhcnRlZCxcbnByZXZlbnRpbmcgZGF0YSBmcm9tIGJlaW5nIHJlYWQgdHdpY2UuIFRoZSBjaGVja3BvaW50IHBvc2l0aW9ucyBhcmUgc3RvcmVkIGluXG50aGUgZGF0YSBkaXJlY3Rvcnkgd2hpY2ggaXMgc3BlY2lmaWVkIHZpYSB0aGVcbiIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Ii9kb2NzL3JlZmVyZW5jZS9nbG9iYWwtb3B0aW9ucy8jZGF0YV9kaXIifSksImdsb2JhbCBbIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJhIn0sImRhdGFfZGlyIiksIl0oI2RhdGFfZGlyKSBvcHRpb24iKSwiIGJ1dCBjYW4gYmVcbm92ZXJyaWRkZW4gdmlhIHRoZSAiLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIjZGF0YV9kaXIifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LCJkYXRhX2RpciIpKSwiIG9wdGlvbiBpbiB0aGUgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2ZpbGUifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LCJmaWxlIikpLCIgc291cmNlIGRpcmVjdGx5LiIpLG1keCgiaDMiLHsiaWQiOiJjb21wcmVzc2VkLWZpbGVzIn0sIkNvbXByZXNzZWQgRmlsZXMiKSxtZHgoInAiLG51bGwsIlZlY3RvciB3aWxsIHRyYW5zcGFyZW50bHkgZGV0ZWN0IGZpbGVzIHdoaWNoIGhhdmUgYmVlbiBjb21wcmVzc2VkIHVzaW5nICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJnemlwIiksIlxuYW5kIGRlY29tcHJlc3MgdGhlbSBmb3IgcmVhZGluZy4gVGhpcyBkZXRlY3Rpb24gcHJvY2VzcyBsb29rcyBmb3IgdGhlIHVuaXF1ZVxuc2VxdWVuY2Ugb2YgYnl0ZXMgaW4gdGhlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJnemlwIiksIiBoZWFkZXIgYW5kIGRvZXMgbm90IHJlbHkgb24gdGhlIGNvbXByZXNzZWQgZmlsZXNcbmFkaGVyaW5nIHRvIGFueSBraW5kIG9mIG5hbWluZyBjb252ZW50aW9uLiIpLG1keCgicCIsbnVsbCwiT25lIGNhdmVhdCB3aXRoIHJlYWRpbmcgY29tcHJlc3NlZCBmaWxlcyBpcyB0aGF0IFZlY3RvciBpcyBub3QgYWJsZSB0b1xuZWZmaWNpZW50bHkgc2VlayBpbnRvIHRoZW0uIFJhdGhlciB0aGFuIGltcGxlbWVudCBhIHBvdGVudGlhbGx5LWV4cGVuc2l2ZSBmdWxsXG5zY2FuIGFzIGEgc2VlayBtZWNoYW5pc20sIFZlY3RvciBjdXJyZW50bHkgd2lsbCBub3QgYXR0ZW1wdCB0byBtYWtlIGZ1cnRoZXJcbnJlYWRzIGZyb20gYSBmaWxlIGZvciB3aGljaCBpdCBoYXMgYWxyZWFkeSBzdG9yZWQgYSBjaGVja3BvaW50IGluIGEgcHJldmlvdXNcbnJ1bi4gRm9yIHRoaXMgcmVhc29uLCB1c2VycyBzaG91bGQgdGFrZSBjYXJlIHRvIGFsbG93IFZlY3RvciB0byBmdWxseSBwcm9jZXNzXG5hbnkgY29tcHJlc3NlZCBmaWxlcyBiZWZvcmUgc2h1dHRpbmcgdGhlIHByb2Nlc3MgZG93biBvciBtb3ZpbmcgdGhlIGZpbGVzIHRvXG5hbm90aGVyIGxvY2F0aW9uIG9uIGRpc2suIiksbWR4KCJoMyIseyJpZCI6ImNvbnRleHQifSwiQ29udGV4dCIpLG1keCgicCIsbnVsbCwiQnkgZGVmYXVsdCwgdGhlICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNmaWxlIn0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSwiZmlsZSIpKSwiIHNvdXJjZSB3aWxsIGFkZCBjb250ZXh0XG5rZXlzIHRvIHlvdXIgZXZlbnRzIHZpYSB0aGUgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2ZpbGVfa2V5In0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSwiZmlsZV9rZXkiKSksIiBhbmQgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2hvc3Rfa2V5In0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSwiaG9zdF9rZXkiKSksIlxub3B0aW9ucy4iKSxtZHgoImgzIix7ImlkIjoiZW52aXJvbm1lbnQtdmFyaWFibGVzIn0sIkVudmlyb25tZW50IFZhcmlhYmxlcyIpLG1keCgicCIsbnVsbCwiRW52aXJvbm1lbnQgdmFyaWFibGVzIGFyZSBzdXBwb3J0ZWQgdGhyb3VnaCBhbGwgb2YgVmVjdG9yJ3MgY29uZmlndXJhdGlvbi5cblNpbXBseSBhZGQgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIiR7TVlfRU5WX1ZBUn0iKSwiIGluIHlvdXIgVmVjdG9yIGNvbmZpZ3VyYXRpb24gZmlsZSBhbmQgdGhlIHZhcmlhYmxlXG53aWxsIGJlIHJlcGxhY2VkIGJlZm9yZSBiZWluZyBldmFsdWF0ZWQuIiksbWR4KCJwIixudWxsLCJZb3UgY2FuIGxlYXJuIG1vcmUgaW4gdGhlXG4iLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIvZG9jcy9zZXR1cC9jb25maWd1cmF0aW9uLyNlbnZpcm9ubWVudC12YXJpYWJsZXMifSksIkVudmlyb25tZW50IFZhcmlhYmxlcyIpLCIgc2VjdGlvbi4iKSxtZHgoImgzIix7ImlkIjoiZmlsZS1kZWxldGlvbiJ9LCJGaWxlIERlbGV0aW9uIiksbWR4KCJwIixudWxsLCJXaGVuIGEgd2F0Y2hlZCBmaWxlIGlzIGRlbGV0ZWQsIFZlY3RvciB3aWxsIG1haW50YWluIGl0cyBvcGVuIGZpbGUgaGFuZGxlIGFuZFxuY29udGludWUgcmVhZGluZyB1bnRpbCBpdCByZWFjaGVzICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJFT0YiKSwiLiBXaGVuIGEgZmlsZSBpcyBubyBsb25nZXIgZmluZGFibGUgaW5cbnRoZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiaW5jbHVkZXMiKSwiIGdsb2IgYW5kIHRoZSByZWFkZXIgaGFzIHJlYWNoZWQgRU9GLCB0aGF0IGZpbGUncyByZWFkZXIgaXNcbmRpc2NhcmRlZC4iKSxtZHgoImgzIix7ImlkIjoiZmlsZS1yZWFkLW9yZGVyIn0sIkZpbGUgUmVhZCBPcmRlciIpLG1keCgicCIsbnVsbCwiQnkgZGVmYXVsdCwgVmVjdG9yIGF0dGVtcHRzIHRvIGFsbG9jYXRlIGl0cyByZWFkIGJhbmR3aWR0aCBmYWlybHkgYWNyb3NzIGFsbCBvZlxudGhlIGZpbGVzIGl0J3MgY3VycmVudGx5IHdhdGNoaW5nLiBUaGlzIHByZXZlbnRzIGEgc2luZ2xlIHZlcnkgYnVzeSBmaWxlIGZyb21cbnN0YXJ2aW5nIG90aGVyIGluZGVwZW5kZW50IGZpbGVzIGZyb20gYmVpbmcgcmVhZC4gSW4gY2VydGFpbiBzaXR1YXRpb25zLFxuaG93ZXZlciwgdGhpcyBjYW4gbGVhZCB0byBpbnRlcmxlYXZlZCByZWFkcyBmcm9tIGZpbGVzIHRoYXQgc2hvdWxkIGJlIHJlYWQgb25lXG5hZnRlciB0aGUgb3RoZXIuIiksbWR4KCJwIixudWxsLCJGb3IgZXhhbXBsZSwgY29uc2lkZXIgYSBzZXJ2aWNlIHRoYXQgbG9ncyB0byB0aW1lc3RhbXBlZCBmaWxlLCBjcmVhdGluZ1xuYSBuZXcgb25lIGF0IGFuIGludGVydmFsIGFuZCBsZWF2aW5nIHRoZSBvbGQgb25lIGFzLWlzLiBVbmRlciBub3JtYWwgb3BlcmF0aW9uLFxuVmVjdG9yIHdvdWxkIGZvbGxvdyB3cml0ZXMgYXMgdGhleSBoYXBwZW4gdG8gZWFjaCBmaWxlIGFuZCB0aGVyZSB3b3VsZCBiZSBub1xuaW50ZXJsZWF2aW5nLiBJbiBhbiBvdmVybG9hZCBzaXR1YXRpb24sIGhvd2V2ZXIsIFZlY3RvciBtYXkgcGljayB1cCBhbmQgYmVnaW5cbnRhaWxpbmcgbmV3ZXIgZmlsZXMgYmVmb3JlIGNhdGNoaW5nIHVwIHRvIHRoZSBsYXRlc3Qgd3JpdGVzIGZyb20gb2xkZXIgZmlsZXMuXG5UaGlzIHdvdWxkIGNhdXNlIHdyaXRlcyBmcm9tIGEgc2luZ2xlIGxvZ2ljYWwgbG9nIHN0cmVhbSB0byBiZSBpbnRlcmxlYXZlZCBpblxudGltZSBhbmQgcG90ZW50aWFsbHkgc2xvdyBkb3duIGluZ2VzdGlvbiBhcyBhIHdob2xlLCBzaW5jZSB0aGUgZml4ZWQgdG90YWwgcmVhZFxuYmFuZHdpZHRoIGlzIGFsbG9jYXRlZCBhY3Jvc3MgYW4gaW5jcmVhc2luZyBudW1iZXIgb2YgZmlsZXMuIiksbWR4KCJwIixudWxsLCJUbyBhZGRyZXNzIHRoaXMgdHlwZSBvZiBzaXR1YXRpb24sIFZlY3RvciBwcm92aWRlcyB0aGUgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI29sZGVzdF9maXJzdCJ9KSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJhIn0sIm9sZGVzdF9maXJzdCIpKSwiIGZsYWcuIFdoZW5cbnNldCwgVmVjdG9yIHdpbGwgbm90IHJlYWQgZnJvbSBhbnkgZmlsZSB5b3VuZ2VyIHRoYW4gdGhlIG9sZGVzdCBmaWxlIHRoYXQgaXRcbmhhc24ndCB5ZXQgY2F1Z2h0IHVwIHRvLiBJbiBvdGhlciB3b3JkcywgVmVjdG9yIHdpbGwgY29udGludWUgcmVhZGluZyBmcm9tIG9sZGVyXG5maWxlcyBhcyBsb25nIGFzIHRoZXJlIGlzIG1vcmUgZGF0YSB0byByZWFkLiBPbmx5IG9uY2UgaXQgaGl0cyB0aGUgZW5kIHdpbGwgaXRcbnRoZW4gbW92ZSBvbiB0byByZWFkIGZyb20geW91bmdlciBmaWxlcy4iKSxtZHgoInAiLG51bGwsIldoZXRoZXIgb3Igbm90IHRvIHVzZSB0aGUgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI29sZGVzdF9maXJzdCJ9KSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJhIn0sIm9sZGVzdF9maXJzdCIpKSwiIGZsYWcgZGVwZW5kcyBvbiB0aGUgb3JnYW5pemF0aW9uIG9mIHRoZVxubG9ncyB5b3UncmUgY29uZmlndXJpbmcgVmVjdG9yIHRvIHRhaWwuIElmIHlvdXIgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2luY2x1ZGUifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LCJpbmNsdWRlIikpLCIgZ2xvYiBjb250YWlucyBtdWx0aXBsZVxuaW5kZXBlbmRlbnQgbG9naWNhbCBsb2cgc3RyZWFtcyAoZS5nLiBuZ2lueCdzICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJhY2Nlc3MubG9nIiksIiBhbmQgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImVycm9yLmxvZyIpLCIsIG9yXG5sb2dzIGZyb20gbXVsdGlwbGUgc2VydmljZXMpLCB5b3UgYXJlIGxpa2VseSBiZXR0ZXIgb2ZmIHdpdGggdGhlIGRlZmF1bHRcbmJlaGF2aW9yLiBJZiB5b3UncmUgZGVhbGluZyB3aXRoIGEgc2luZ2xlIGxvZ2ljYWwgbG9nIHN0cmVhbSBvciBpZiB5b3UgdmFsdWVcbnBlci1zdHJlYW0gb3JkZXJpbmcgb3ZlciBmYWlybmVzcyBhY3Jvc3Mgc3RyZWFtcywgY29uc2lkZXIgc2V0dGluZ1xuIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIm9sZGVzdF9maXJzdCIpLCIgdG8gIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInRydWUiKSwiLiIpLG1keCgiaDMiLHsiaWQiOiJmaWxlLXJvdGF0aW9uIn0sIkZpbGUgUm90YXRpb24iKSxtZHgoInAiLG51bGwsIlZlY3RvciBzdXBwb3J0cyB0YWlsaW5nIGFjcm9zcyBhIG51bWJlciBvZiBmaWxlIHJvdGF0aW9uIHN0cmF0ZWdpZXMuIFRoZSBkZWZhdWx0XG5iZWhhdmlvciBvZiAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwibG9ncm90YXRlIiksIiBpcyBzaW1wbHkgdG8gbW92ZSB0aGUgb2xkIGxvZyBmaWxlIGFuZCBjcmVhdGUgYSBuZXcgb25lLlxuVGhpcyByZXF1aXJlcyBubyBzcGVjaWFsIGNvbmZpZ3VyYXRpb24gb2YgVmVjdG9yLCBhcyBpdCB3aWxsIG1haW50YWluIGl0cyBvcGVuXG5maWxlIGhhbmRsZSB0byB0aGUgcm90YXRlZCBsb2cgdW50aWwgaXQgaGFzIGZpbmlzaGVkIHJlYWRpbmcgYW5kIGl0IHdpbGwgZmluZFxudGhlIG5ld2x5IGNyZWF0ZWQgZmlsZSBub3JtYWxseS4iKSxtZHgoInAiLG51bGwsIkEgcG9wdWxhciBhbHRlcm5hdGl2ZSBzdHJhdGVneSBpcyAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiY29weXRydW5jYXRlIiksIiwgaW4gd2hpY2ggIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImxvZ3JvdGF0ZSIpLCIgd2lsbCBjb3B5XG50aGUgb2xkIGxvZyBmaWxlIHRvIGEgbmV3IGxvY2F0aW9uIGJlZm9yZSB0cnVuY2F0aW5nIHRoZSBvcmlnaW5hbC4gVmVjdG9yIHdpbGxcbmFsc28gaGFuZGxlIHRoaXMgd2VsbCBvdXQgb2YgdGhlIGJveCwgYnV0IHRoZXJlIGFyZSBhIGNvdXBsZSBjb25maWd1cmF0aW9uIG9wdGlvbnNcbnRoYXQgd2lsbCBoZWxwIHJlZHVjZSB0aGUgdmVyeSBzbWFsbCBjaGFuY2Ugb2YgbWlzc2VkIGRhdGEgaW4gc29tZSBlZGdlIGNhc2VzLlxuV2UgcmVjb21tZW5kIGEgY29tYmluYXRpb24gb2YgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImRlbGF5Y29tcHJlc3MiKSwiIChpZiBhcHBsaWNhYmxlKSBvbiB0aGUgbG9ncm90YXRlXG5zaWRlIGFuZCBpbmNsdWRpbmcgdGhlIGZpcnN0IHJvdGF0ZWQgZmlsZSBpbiBWZWN0b3IncyAiLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIjaW5jbHVkZSJ9KSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJhIn0sImluY2x1ZGUiKSksIiBvcHRpb24uIFRoaXNcbmFsbG93cyBWZWN0b3IgdG8gZmluZCB0aGUgZmlsZSBhZnRlciByb3RhdGlvbiwgcmVhZCBpdCB1bmNvbXByZXNzZWQgdG8gaWRlbnRpZnlcbml0LCBhbmQgdGhlbiBlbnN1cmUgaXQgaGFzIGFsbCBvZiB0aGUgZGF0YSwgaW5jbHVkaW5nIGFueSB3cml0dGVuIGluIGEgZ2FwXG5iZXR3ZWVuIFZlY3RvcidzIGxhc3QgcmVhZCBhbmQgdGhlIGFjdHVhbCByb3RhdGlvbiBldmVudC4iKSxtZHgoImgzIix7ImlkIjoiZmluZ2VycHJpbnRpbmctMSJ9LCJGaW5nZXJwcmludGluZyIpLG1keCgicCIsbnVsbCwiQnkgZGVmYXVsdCwgVmVjdG9yIGlkZW50aWZpZXMgZmlsZXMgYnkgY3JlYXRpbmcgYSAiLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9DeWNsaWNfcmVkdW5kYW5jeV9jaGVjayJ9KSwiY3ljbGljIHJlZHVuZGFuY3kgY2hlY2tcbihDUkMpIiksIiBvbiB0aGUgZmlyc3QgMjU2IGJ5dGVzIG9mIHRoZSBmaWxlLiBUaGlzIHNlcnZlcyBhcyBhXG5maW5nZXJwcmludCB0byB1bmlxdWVseSBpZGVudGlmeSB0aGUgZmlsZS4gVGhlIGFtb3VudCBvZiBieXRlcyByZWFkIGNhbiBiZVxuY29udHJvbGxlZCB2aWEgdGhlICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNmaW5nZXJwcmludF9ieXRlcyJ9KSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJhIn0sImZpbmdlcnByaW50X2J5dGVzIikpLCIgYW5kICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNpZ25vcmVkX2hlYWRlcl9ieXRlcyJ9KSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJhIn0sImlnbm9yZWRfaGVhZGVyX2J5dGVzIikpLCIgb3B0aW9ucy4iKSxtZHgoInAiLG51bGwsIlRoaXMgc3RyYXRlZ3kgYXZvaWRzIHRoZSBjb21tb24gcGl0ZmFsbHMgb2YgdXNpbmcgZGV2aWNlIGFuZCBpbm9kZSBuYW1lcyBzaW5jZVxuaW5vZGUgbmFtZXMgY2FuIGJlIHJldXNlZCBhY3Jvc3MgZmlsZXMuIFRoaXMgZW5hYmxlcyBWZWN0b3IgdG8gIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiLyNjb3JyZWN0bmVzcyJ9KSwicHJvcGVybHkgdGFpbFxuZmlsZXMgYWNyb3NzIHZhcmlvdXMgcm90YXRpb24gc3RyYXRlZ2llcyIpLCIuIiksbWR4KCJoMyIseyJpZCI6Imdsb2JiaW5nIn0sIkdsb2JiaW5nIiksbWR4KCJwIixudWxsLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9HbG9iXyhwcm9ncmFtbWluZykifSksIkdsb2JiaW5nIiksIiBpcyBzdXBwb3J0ZWQgaW4gYWxsIHByb3ZpZGVkIGZpbGUgcGF0aHMsIGZpbGVzIHdpbGxcbmJlICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNhdXRvLWRpc2NvdmVyeSJ9KSwiYXV0b2Rpc2NvdmVyZWQiKSwiIGNvbnRpbnVhbGx5IGF0IGEgcmF0ZSBkZWZpbmVkIGJ5IHRoZVxuIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImdsb2JfbWluaW11bV9jb29sZG93biIpLCIgb3B0aW9uLiIpLG1keCgiaDMiLHsiaWQiOiJsaW5lLWRlbGltaXRlcnMifSwiTGluZSBEZWxpbWl0ZXJzIiksbWR4KCJwIixudWxsLCJFYWNoIGxpbmUgaXMgcmVhZCB1bnRpbCBhIG5ldyBsaW5lIGRlbGltaXRlciAodGhlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCIweEEiKSwiIGJ5dGUpIG9yICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJFT0YiKSwiIGlzIGZvdW5kLiIpLG1keCgiaDMiLHsiaWQiOiJtdWx0aS1saW5lLW1lc3NhZ2VzIn0sIk11bHRpLUxpbmUgTWVzc2FnZXMiKSxtZHgoInAiLG51bGwsIlNvbWV0aW1lcyBhIHNpbmdsZSBsb2cgZXZlbnQgd2lsbCBhcHBlYXIgYXMgbXVsdGlwbGUgbG9nIGxpbmVzLiBUbyBoYW5kbGUgdGhpcyxcblZlY3RvciBwcm92aWRlcyBhIHNldCBvZiAiLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIjbXVsdGlsaW5lIn0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSwibXVsdGlsaW5lIikpLCIgb3B0aW9ucy4gVGhlc2Ugb3B0aW9ucyB3ZXJlIGNhcmVmdWxseVxudGhvdWdodCB0aHJvdWdoIGFuZCB3aWxsIGFsbG93IHlvdSB0byBzb2x2ZSB0aGUgc2ltcGxlc3QgYW5kIG1vc3QgY29tcGxleFxuY2FzZXMuIExldCdzIGxvb2sgYXQgYSBmZXcgZXhhbXBsZXM6IiksbWR4KCJoNCIseyJpZCI6ImV4YW1wbGUtMS1ydWJ5LWV4Y2VwdGlvbnMifSwiRXhhbXBsZSAxOiBSdWJ5IEV4Y2VwdGlvbnMiKSxtZHgoInAiLG51bGwsIlJ1YnkgZXhjZXB0aW9ucywgd2hlbiBsb2dnZWQsIGNvbnNpc3Qgb2YgbXVsdGlwbGUgbGluZXM6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS10ZXh0In0pLCJmb29iYXIucmI6NjppbiBgLyc6IGRpdmlkZWQgYnkgMCAoWmVyb0RpdmlzaW9uRXJyb3IpXG4gIGZyb20gZm9vYmFyLnJiOjY6aW4gYGJhcidcbiAgZnJvbSBmb29iYXIucmI6MjppbiBgZm9vJ1xuICBmcm9tIGZvb2Jhci5yYjo5OmluIGA8bWFpbj4nXG4iKSksbWR4KCJwIixudWxsLCJUbyBjb25zdW1lIHRoZXNlIGxpbmVzIGFzIGEgc2luZ2xlIGV2ZW50LCB1c2UgdGhlIGZvbGxvd2luZyBWZWN0b3IgY29uZmlndXJhdGlvbjoiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXRvbWwifSksIltzb3VyY2VzLm15X2ZpbGVfc291cmNlXVxuICB0eXBlID0gXCJmaWxlXCJcbiAgIyAuLi5cblxuICBbc291cmNlcy5teV9maWxlX3NvdXJjZS5tdWx0aWxpbmVdXG4gICAgc3RhcnRfcGF0dGVybiA9IFwiXlteXFxcXHNdXCJcbiAgICBtb2RlID0gXCJjb250aW51ZV90aHJvdWdoXCJcbiAgICBjb25kaXRpb25fcGF0dGVybiA9IFwiXltcXFxcc10rZnJvbVwiXG4gICAgdGltZW91dF9tcyA9IDEwMDBcbiIpKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiI3N0YXJ0X3BhdHRlcm4ifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LCJzdGFydF9wYXR0ZXJuIikpLCIsIHNldCB0byAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sIl5bXlxcXFxzXSIpLCIsIHRlbGxzIFZlY3RvciB0aGF0IG5ldyBtdWx0aS1saW5lIGV2ZW50c1xuc2hvdWxkICIsbWR4KCJlbSIse3BhcmVudE5hbWU6ImxpIn0sIm5vdCIpLCIgc3RhcnQgIHdpdGggd2hpdGUtc3BhY2UuIiksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiIjbW9kZSJ9KSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJhIn0sIm1vZGUiKSksIiwgc2V0IHRvICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSwiY29udGludWVfdGhyb3VnaCIpLCIsIHRlbGxzIFZlY3RvciBjb250aW51ZSBhZ2dyZWdhdGluZyBsaW5lc1xudW50aWwgdGhlICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiIjY29uZGl0aW9uX3BhdHRlcm4ifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LCJjb25kaXRpb25fcGF0dGVybiIpKSwiIGlzIG5vIGxvbmdlciB2YWxpZCAoZXhjbHVkaW5nIHRoZSBpbnZhbGlkIGxpbmUpLiIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiI2NvbmRpdGlvbl9wYXR0ZXJuIn0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSwiY29uZGl0aW9uX3BhdHRlcm4iKSksIiwgc2V0IHRvICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSwiXltcXFxcc10rZnJvbSIpLCIsIHRlbGxzIFZlY3RvciB0byBjb250aW51ZVxuYWdncmVnYXRpbmcgbGluZXMgaWYgdGhleSBzdGFydCB3aXRoIHdoaXRlLXNwYWNlIGZvbGxvd2VkIGJ5ICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSwiZnJvbSIpLCIuIikpLG1keCgiaDQiLHsiaWQiOiJleGFtcGxlLTItbGluZS1jb250aW51YXRpb25zIn0sIkV4YW1wbGUgMjogTGluZSBDb250aW51YXRpb25zIiksbWR4KCJwIixudWxsLCJTb21lIHByb2dyYW1taW5nIGxhbmd1YWdlcyB1c2UgdGhlIGJhY2tzbGFzaCAoIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIlxcIiksIikgY2hhcmFjdGVyIHRvIHNpZ25hbCB0aGF0IGFcbmxpbmUgd2lsbCBjb250aW51ZSBvbiB0aGUgbmV4dCBsaW5lOiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtdGV4dCJ9KSwiRmlyc3QgbGluZVxcXG5zZWNvbmQgbGluZVxcXG50aGlyZCBsaW5lXG4iKSksbWR4KCJwIixudWxsLCJUbyBjb25zdW1lIHRoZXNlIGxpbmVzIGFzIGEgc2luZ2xlIGV2ZW50LCB1c2UgdGhlIGZvbGxvd2luZyBWZWN0b3IgY29uZmlndXJhdGlvbjoiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXRvbWwifSksIltzb3VyY2VzLm15X2ZpbGVfc291cmNlXVxuICB0eXBlID0gXCJmaWxlXCJcbiAgIyAuLi5cblxuICBbc291cmNlcy5teV9maWxlX3NvdXJjZS5tdWx0aWxpbmVdXG4gICAgc3RhcnRfcGF0dGVybiA9IFwiXFxcXCRcIlxuICAgIG1vZGUgPSBcImNvbnRpbnVlX3Bhc3RcIlxuICAgIGNvbmRpdGlvbl9wYXR0ZXJuID0gXCJcXFxcJFwiXG4gICAgdGltZW91dF9tcyA9IDEwMDBcbiIpKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiI3N0YXJ0X3BhdHRlcm4ifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LCJzdGFydF9wYXR0ZXJuIikpLCIsIHNldCB0byAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sIlxcXFwkIiksIiwgdGVsbHMgVmVjdG9yIHRoYXQgbmV3IG11bHRpLWxpbmUgZXZlbnRzXG5zdGFydCB3aXRoIGxpbmVzIHRoYXQgZW5kIGluICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSwiXFwiKSwiLiIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiI21vZGUifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LCJtb2RlIikpLCIsIHNldCB0byAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sImNvbnRpbnVlX3Bhc3QiKSwiLCB0ZWxscyBWZWN0b3IgY29udGludWUgYWdncmVnYXRpbmcgbGluZXMsIHBsdXNcbm9uZSBhZGRpdGlvbmFsIGxpbmUsIHVudGlsICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiIjY29uZGl0aW9uX3BhdHRlcm4ifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LCJjb25kaXRpb25fcGF0dGVybiIpKSwiIGlzIGZhbHNlLiIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiI2NvbmRpdGlvbl9wYXR0ZXJuIn0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSwiY29uZGl0aW9uX3BhdHRlcm4iKSksIiwgc2V0IHRvICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSwiXFxcXCQiKSwiLCB0ZWxscyBWZWN0b3IgdG8gY29udGludWUgYWdncmVnYXRpbmcgbGluZXNcbmlmIHRoZXkgIixtZHgoImVtIix7cGFyZW50TmFtZToibGkifSwiZW5kIiksIiB3aXRoIGEgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJsaSJ9LCJcXCIpLCIgY2hhcmFjdGVyLiIpKSxtZHgoImg0Iix7ImlkIjoiZXhhbXBsZS0zLXRpbWVzdGFtcHMifSwiRXhhbXBsZSAzOiBUaW1lc3RhbXBzIiksbWR4KCJwIixudWxsLCJBY3Rpdml0eSBsb2dzIGZyb20gc2VydmljZXMgc3VjaCBhcyBFbGFzdGljc2VhcmNoIHR5cGljYWxseSBiZWdpbiB3aXRoIGFcbnRpbWVzdGFtcCwgZm9sbG93ZWQgYnkgaW5mb3JtYXRpb24gb24gdGhlIHNwZWNpZmljIGFjdGl2aXR5LCBhcyBpbiB0aGlzIGV4YW1wbGU6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS10ZXh0In0pLCJbMjAxNS0wOC0yNCAxMTo0OToxNCwzODldWyBJTkZPIF1bZW52ICAgICAgICAgICAgICAgICAgICAgIF0gW0xldGhhXSB1c2luZyBbMV0gZGF0YSBwYXRocywgbW91bnRzIFtbL1xuKC9kZXYvZGlzazEpXV0sIG5ldCB1c2FibGVfc3BhY2UgWzM0LjVnYl0sIG5ldCB0b3RhbF9zcGFjZSBbMTE4LjlnYl0sIHR5cGVzIFtoZnNdXG4iKSksbWR4KCJwIixudWxsLCJUbyBjb25zdW1lIHRoZXNlIGxpbmVzIGFzIGEgc2luZ2xlIGV2ZW50LCB1c2UgdGhlIGZvbGxvd2luZyBWZWN0b3IgY29uZmlndXJhdGlvbjoiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXRvbWwifSksIltzb3VyY2VzLm15X2ZpbGVfc291cmNlXVxuICB0eXBlID0gXCJmaWxlXCJcbiAgIyAuLi5cblxuICBbc291cmNlcy5teV9maWxlX3NvdXJjZS5tdWx0aWxpbmVdXG4gICAgc3RhcnRfcGF0dGVybiA9IFwiXlxcW1swLTldezR9LVswLTldezJ9LVswLTldezJ9XCJcbiAgICBtb2RlID0gXCJoYWx0X2JlZm9yZVwiXG4gICAgY29uZGl0aW9uX3BhdHRlcm4gPSBcIl5cXFtbMC05XXs0fS1bMC05XXsyfS1bMC05XXsyfVwiXG4gICAgdGltZW91dF9tcyA9IDEwMDBcbiIpKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiI3N0YXJ0X3BhdHRlcm4ifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LCJzdGFydF9wYXR0ZXJuIikpLCIsIHNldCB0byAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sIl5cXFtbMC05XXs0fS1bMC05XXsyfS1bMC05XXsyfSIpLCIsIHRlbGxzIFZlY3RvciB0aGF0XG5uZXcgbXVsdGktbGluZSBldmVudHMgc3RhcnQgd2l0aCBhIHRpbWVzdGFtcCBzZXF1ZW5jZS4iKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6IiNtb2RlIn0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSwibW9kZSIpKSwiLCBzZXQgdG8gIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJsaSJ9LCJoYWx0X2JlZm9yZSIpLCIsIHRlbGxzIFZlY3RvciB0byBjb250aW51ZSBhZ2dyZWdhdGluZyBsaW5lcyBhc1xubG9uZyBhcyB0aGUgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6IiNjb25kaXRpb25fcGF0dGVybiJ9KSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJhIn0sImNvbmRpdGlvbl9wYXR0ZXJuIikpLCIgZG9lcyBub3QgbWF0Y2guIiksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiIjY29uZGl0aW9uX3BhdHRlcm4ifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LCJjb25kaXRpb25fcGF0dGVybiIpKSwiLCBzZXQgdG8gIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJsaSJ9LCJeXFxbWzAtOV17NH0tWzAtOV17Mn0tWzAtOV17Mn0iKSwiLCB0ZWxscyBWZWN0b3IgdG9cbmNvbnRpbnVlIGFnZ3JlZ2F0aW5nIHVwIHVudGlsIGEgbGluZSBzdGFydHMgd2l0aCBhIHRpbWVzdGFtcCBzZXF1ZW5jZS4iKSksbWR4KCJoMyIseyJpZCI6InJlYWQtcG9zaXRpb24ifSwiUmVhZCBQb3NpdGlvbiIpLG1keCgicCIsbnVsbCwiQnkgZGVmYXVsdCwgVmVjdG9yIHdpbGwgcmVhZCBuZXcgZGF0YSBvbmx5IGZvciBuZXdseSBkaXNjb3ZlcmVkIGZpbGVzLCBzaW1pbGFyXG50byB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInRhaWwiKSwiIGNvbW1hbmQuIFlvdSBjYW4gcmVhZCBmcm9tIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGZpbGUgYnkgc2V0dGluZ1xudGhlICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNzdGFydF9hdF9iZWdpbm5pbmcifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LCJzdGFydF9hdF9iZWdpbm5pbmciKSksIiBvcHRpb24gdG8gIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInRydWUiKSwiLiIpLG1keCgicCIsbnVsbCwiUHJldmlvdXNseSBkaXNjb3ZlcmVkIGZpbGVzIHdpbGwgYmUgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2NoZWNrcG9pbnRpbmcifSksImNoZWNrcG9pbnRlZCIpLCIsIGFuZCB0aGVcbnJlYWQgcG9zaXRpb24gd2lsbCByZXN1bWUgZnJvbSB0aGUgbGFzdCBjaGVja3BvaW50LiIpKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},null]}