{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js??ref--9-1!/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--9-2!/Users/Yun/Desktop/vdocs/website/new-docs/plugins/guides/markdownLoader.js??ref--9-3!/Users/Yun/Desktop/vdocs/website/new-docs/guides/advanced/merge-multiline-logs-with-lua.md?truncated=true","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/guides/advanced/merge-multiline-logs-with-lua.md","mtime":1595851674563},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/.docusaurus/guides/site-guides-advanced-merge-multiline-logs-with-lua-md-f9a.json","mtime":1595937309962},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/plugins/guides/markdownLoader.js","mtime":1594780808724}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL1l1bi9EZXNrdG9wL3Zkb2NzL3dlYnNpdGUvbmV3LWRvY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXtsYXN0X21vZGlmaWVkX29uOicyMDIwLTA3LTEzJyx0aXRsZTonTWVyZ2UgbXVsdGktbGluZSBsb2dzIHdpdGggTHVhJyxkZXNjcmlwdGlvbjonQ29tYmluZSBtdWx0aS1saW5lIENTViByb3dzIGludG8gc2luZ2xlIGV2ZW50cyB1c2luZyBMdWEgdHJhbnNmb3JtJyxhdXRob3JfZ2l0aHViOidodHRwczovL2dpdGh1Yi5jb20vemhvdXl1bi16b2UnfTtleHBvcnQgY29uc3QgbWV0YWRhdGE9eyJjYXRlZ29yaWVzIjpbeyJuYW1lIjoiYWR2YW5jZWQiLCJ0aXRsZSI6IkFkdmFuY2VkIiwiZGVzY3JpcHRpb24iOiJHbyBiZXlvbmQgdGhlIGJhc2ljcywgYW5kIGV4dHJhY3QgdGhlIGZ1bGwgcG90ZW50aWFsIG9mIE11dGEuIiwicGVybWFsaW5rIjoiL25ldy1kb2NzL2d1aWRlcy9hZHZhbmNlZCJ9XSwiY292ZXJMYWJlbCI6Ik1lcmdlIG11bHRpLWxpbmUgbG9ncyB3aXRoIEx1YSIsImRlc2NyaXB0aW9uIjoiQ29tYmluZSBtdWx0aS1saW5lIENTViByb3dzIGludG8gc2luZ2xlIGV2ZW50cyB1c2luZyBMdWEgdHJhbnNmb3JtIiwicGVybWFsaW5rIjoiL25ldy1kb2NzL2d1aWRlcy9hZHZhbmNlZC9tZXJnZS1tdWx0aWxpbmUtbG9ncy13aXRoLWx1YSIsInJlYWRpbmdUaW1lIjoiMSBtaW4gcmVhZCIsInNvdXJjZSI6IkBzaXRlL2d1aWRlcy9hZHZhbmNlZC9tZXJnZS1tdWx0aWxpbmUtbG9ncy13aXRoLWx1YS5tZCIsInRhZ3MiOltdLCJ0aXRsZSI6Ik1lcmdlIG11bHRpLWxpbmUgbG9ncyB3aXRoIEx1YSIsInRydW5jYXRlZCI6ZmFsc2UsInByZXZJdGVtIjp7InRpdGxlIjoiQ3VzdG9tIEFnZ3JlZ2F0aW9ucyB3aXRoIEx1YSIsInBlcm1hbGluayI6Ii9uZXctZG9jcy9ndWlkZXMvYWR2YW5jZWQvY3VzdG9tLWFnZ3JlZ2F0aW9ucy13aXRoLWx1YSJ9fTsvKiBAanN4IG1keCAqL2V4cG9ydCBjb25zdCByaWdodFRvYz1bXTtjb25zdCBtYWtlU2hvcnRjb2RlPW5hbWU9PmZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O2NvbnN0IGxheW91dFByb3BzPXtyaWdodFRvY307Y29uc3QgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtjb21wb25lbnRzLC4uLnByb3BzfSl7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJwIixudWxsLGBvbWApKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/Yun/Desktop/vdocs/website/new-docs/guides/advanced/merge-multiline-logs-with-lua.md"],"names":["React","mdx","frontMatter","last_modified_on","title","description","author_github","metadata","rightToc","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"gHACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,gBAAgB,CAAE,YADU,CAE5BC,KAAK,CAAE,gCAFqB,CAG5BC,WAAW,CAAE,oEAHe,CAI5BC,aAAa,CAAE,gCAJa,CAApB,CAMT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,aAAc,CACZ,CACE,OAAQ,UADV,CAEE,QAAS,UAFX,CAGE,cAAe,+DAHjB,CAIE,YAAa,2BAJf,CADY,CADQ,CAStB,aAAc,gCATQ,CAUtB,cAAe,oEAVO,CAWtB,YAAa,yDAXS,CAYtB,cAAe,YAZO,CAatB,SAAU,wDAbY,CActB,OAAQ,EAdc,CAetB,QAAS,gCAfa,CAgBtB,YAAa,KAhBS,CAiBtB,WAAY,CACV,QAAS,8BADC,CAEV,YAAa,wDAFH,CAjBU,CAAjB,CAsBL,cAEF,MAAO,MAAMC,CAAAA,QAAQ,CAAG,EAAjB,CACP,KAAMC,CAAAA,aAAa,CAAGC,IAAI,EAAI,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHD,CAKA,KAAMG,CAAAA,WAAW,CAAG,CAClBP,QADkB,CAApB,CAGA,KAAMQ,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGN,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,aAAK,IAAL,CAFK,CAAP,CAID,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tlast_modified_on: '2020-07-13',\n\ttitle: 'Merge multi-line logs with Lua',\n\tdescription: 'Combine multi-line CSV rows into single events using Lua transform',\n\tauthor_github: 'https://github.com/zhouyun-zoe'\n};\nexport const metadata = {\n  \"categories\": [\n    {\n      \"name\": \"advanced\",\n      \"title\": \"Advanced\",\n      \"description\": \"Go beyond the basics, and extract the full potential of Muta.\",\n      \"permalink\": \"/new-docs/guides/advanced\"\n    }\n  ],\n  \"coverLabel\": \"Merge multi-line logs with Lua\",\n  \"description\": \"Combine multi-line CSV rows into single events using Lua transform\",\n  \"permalink\": \"/new-docs/guides/advanced/merge-multiline-logs-with-lua\",\n  \"readingTime\": \"1 min read\",\n  \"source\": \"@site/guides/advanced/merge-multiline-logs-with-lua.md\",\n  \"tags\": [],\n  \"title\": \"Merge multi-line logs with Lua\",\n  \"truncated\": false,\n  \"prevItem\": {\n    \"title\": \"Custom Aggregations with Lua\",\n    \"permalink\": \"/new-docs/guides/advanced/custom-aggregations-with-lua\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`om`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}