{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/Desktop/vdocs/website/new-docs/docs/about/data-model.md","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/docs/about/data-model.md","mtime":1595397619815},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-about-data-model-md-5e9.json","mtime":1595491643003},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1588759133114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL1l1bi9EZXNrdG9wL3Zkb2NzL3dlYnNpdGUvbmV3LWRvY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXtsYXN0X21vZGlmaWVkX29uOicyMDIwLTA3LTEzJyx0aXRsZTonRGF0YSBNb2RlbCcsc2lkZWJhcl9sYWJlbDonaGlkZGVuJyxkZXNjcmlwdGlvbjonVmVjdG9yXCdzIGludGVybmFsIGRhdGEgbW9kZWwgLS0gZXZlbnQgYW5kIGl0XCdzIHN1YnR5cGVzLid9O2V4cG9ydCBjb25zdCBtZXRhZGF0YT17ImlkIjoiYWJvdXQvZGF0YS1tb2RlbCIsInRpdGxlIjoiRGF0YSBNb2RlbCIsImRlc2NyaXB0aW9uIjoiVmVjdG9yJ3MgaW50ZXJuYWwgZGF0YSBtb2RlbCAtLSBldmVudCBhbmQgaXQncyBzdWJ0eXBlcy4iLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL2Fib3V0L2RhdGEtbW9kZWwubWQiLCJwZXJtYWxpbmsiOiIvbmV3LWRvY3MvZG9jcy9hYm91dC9kYXRhLW1vZGVsIiwiZWRpdFVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9uZXJ2b3NuZXR3b3JrL211dGEvZWRpdC9tYXN0ZXIvd2Vic2l0ZS9kb2NzL2Fib3V0L2RhdGEtbW9kZWwubWQiLCJzaWRlYmFyX2xhYmVsIjoiaGlkZGVuIn07LyogQGpzeCBtZHggKi9pbXBvcnQgSnVtcCBmcm9tJ0BzaXRlL3NyYy9jb21wb25lbnRzL0p1bXAnO2ltcG9ydCBTVkcgZnJvbSdyZWFjdC1pbmxpbmVzdmcnO2V4cG9ydCBjb25zdCByaWdodFRvYz1be3ZhbHVlOidFdmVudCBUeXBlcycsaWQ6J2V2ZW50LXR5cGVzJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidGQVEnLGlkOidmYXEnLGNoaWxkcmVuOlt7dmFsdWU6J1doeSBOb3QgPGVtPkp1c3Q8L2VtPiBFdmVudHM/JyxpZDond2h5LW5vdC1qdXN0LWV2ZW50cycsY2hpbGRyZW46W119XX1dO2NvbnN0IG1ha2VTaG9ydGNvZGU9bmFtZT0+ZnVuY3Rpb24gTURYRGVmYXVsdFNob3J0Y29kZShwcm9wcyl7Y29uc29sZS53YXJuKCJDb21wb25lbnQgIituYW1lKyIgd2FzIG5vdCBpbXBvcnRlZCwgZXhwb3J0ZWQsIG9yIHByb3ZpZGVkIGJ5IE1EWFByb3ZpZGVyIGFzIGdsb2JhbCBzY29wZSIpO3JldHVybiBtZHgoImRpdiIscHJvcHMpO307Y29uc3QgbGF5b3V0UHJvcHM9e3JpZ2h0VG9jfTtjb25zdCBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe2NvbXBvbmVudHMsLi4ucHJvcHN9KXtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoU1ZHLHtzcmM6Ii9pbWcvZGF0YS1tb2RlbC1ldmVudC5zdmciLG1keFR5cGU6IlNWRyJ9KSxtZHgoInAiLG51bGwsYFRoZSBpbmRpdmlkdWFsIHBpZWNlcyBvZiBkYXRhIGZsb3dpbmcgdGhyb3VnaCBWZWN0b3IgYXJlIGtub3duIGFzIGAsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sYGV2ZW50c2ApLGAuCkV2ZW50cyBhcmUgYXJiaXRyYXJpbHkgd2lkZSwgYW5kIGRlZXAsIHN0cnVjdHVyZWQgcGllY2VzIG9mIGRhdGEuIFRoZXkgaGF2ZSBubwpyZXF1aXJlbWVudHMgb3IgbGltaXRhdGlvbnMuIElkZWFsbHksIGV2ZW50cyBjb250YWluIGVub3VnaCByaWNoIGluZm9ybWF0aW9uCnRvIGRlcml2ZSBhbnkgdHlwZSBvZiBtb25pdG9yaW5nIGRhdGEgZnJvbSBpdC5gKSxtZHgoImgyIix7ImlkIjoiZXZlbnQtdHlwZXMifSxgRXZlbnQgVHlwZXNgKSxtZHgoInAiLG51bGwsYFZlY3RvciBkZWZpbmVzIHN1YnR5cGVzIGZvciBldmVudHMuIFRoaXMgaXMgbmVjZXNzYXJ5IHRvIGVzdGFibGlzaCBkb21haW4Kc3BlY2lmaWMgcmVxdXJpZW1lbnRzIGVuYWJsaW5nIGludGVyb3BlcmFiaWxpdHkgd2l0aCBleGlzdGluZyBtb25pdG9yaW5nIGFuZApvYnNlcnZhYmlsaXR5IHN5c3RlbXMuYCksbWR4KEp1bXAse3RvOiIvZG9jcy9hYm91dC9kYXRhLW1vZGVsL2xvZy8iLG1keFR5cGU6Ikp1bXAifSwiTG9nIiksbWR4KEp1bXAse3RvOiIvZG9jcy9hYm91dC9kYXRhLW1vZGVsL21ldHJpYy8iLG1keFR5cGU6Ikp1bXAifSwiTWV0cmljIiksbWR4KCJoMiIseyJpZCI6ImZhcSJ9LGBGQVFgKSxtZHgoImgzIix7ImlkIjoid2h5LW5vdC1qdXN0LWV2ZW50cyJ9LGBXaHkgTm90IGAsbWR4KCJlbSIse3BhcmVudE5hbWU6ImgzIn0sYEp1c3RgKSxgIEV2ZW50cz9gKSxtZHgoInAiLG51bGwsYFdlLCBgLG1keCgiZW0iLHtwYXJlbnROYW1lOiJwIn0sYHZlcnkgbXVjaGApLGAsIGxpa2UgdGhlIGlkZWEgb2YgYW4gZXZlbnQgb25seSB3b3JsZCwgb25lIHdoZXJlIGV2ZXJ5IHNlcnZpY2UKaXMgcGVyZmVjdGx5IGluc3RydW1lbnRlZCB3aXRoIGV2ZW50cyB0aGF0IGNvbnRhaW4gcmljaCBkYXRhIGFuZCBjb250ZXh0LgpVbmZvcnR1bmF0ZWx5LCB0aGF0IGlzIG5vdCB0aGUgY2FzZTsgZXhpc2l0aW5nIHNlcnZpY2VzIHVzdWFsbHkgZW1pdCBtZXRyaWNzLAp0cmFjZXMsIGFuZCBsb2dzIG9mIHZhcnlpbmcgcXVhbGl0eS4gQnkgZGVzaWduaW5nIFZlY3RvciB0byBtZWV0IHNlcnZpY2VzIHdoZXJlCnRoZXkgYXJlIChjdXJyZW50IHN0YXRlKSwgd2Ugc2VydmUgYXMgYSBicmlkZ2UgdG8gbmV3ZXIgc3RhbmRhcmRzLiBUaGlzIGlzIHdoeQp3ZSBwbGFjZSAiZXZlbnRzIiBhdCB0aGUgdG9wIG9mIG91ciBkYXRhIG1vZGVsLCB3aGVyZSBsb2dzIGFuZCBtZXRyaWNzIGFyZQpkZXJpdmVkLmApLG1keCgicCIsbnVsbCxgRmluYWxseSwgYSBzb3BoaXN0aWNhdGVkIGRhdGEgbW9kZWwgdGhhdCBhY2NvdW50cyBmb3IgdGhlIHZhcmlvdXMgZGF0YSB0eXBlcwphbGxvd3MgZm9yIGAsbWR4KCJlbSIse3BhcmVudE5hbWU6InAifSxgY29ycmVjdGApLGAgaW50ZXJvcGVyYWJpbGl0eSBiZXR3ZWVuIG9ic2VydmFiaWxpdHkgc3lzdGVtcy4gRm9yCmV4YW1wbGUsIGEgcGlwZWxpbmUgd2l0aCBhIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBzdGF0c2RgKSxgIHNvdXJjZSBhbmQgYSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgcHJvbWV0aGV1c2ApLGAgc2luayB3b3VsZCBub3QKYmUgcG9zc2libGUgd2l0aG91dCB0aGUgY29ycmVjdCBpbnRlcm5hbCBtZXRyaWNzIGRhdGEgdHlwZXMuYCkpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/Yun/Desktop/vdocs/website/new-docs/docs/about/data-model.md"],"names":["React","mdx","frontMatter","last_modified_on","title","sidebar_label","description","metadata","Jump","SVG","rightToc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"gHACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,gBAAgB,CAAE,YADU,CAE5BC,KAAK,CAAE,YAFqB,CAG5BC,aAAa,CAAE,QAHa,CAI5BC,WAAW,CAAE,4DAJe,CAApB,CAMT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,KAAM,kBADgB,CAEtB,QAAS,YAFa,CAGtB,cAAe,0DAHO,CAItB,SAAU,gCAJY,CAKtB,YAAa,iCALS,CAMtB,UAAW,oFANW,CAOtB,gBAAiB,QAPK,CAAjB,CASL,cACF,MAAOC,CAAAA,IAAP,KAAiB,2BAAjB,CACA,MAAOC,CAAAA,GAAP,KAAgB,iBAAhB,CACA,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CAAC,CACvBC,KAAK,CAAE,aADgB,CAEvBC,EAAE,CAAE,aAFmB,CAGvBC,QAAQ,CAAE,EAHa,CAAD,CAIrB,CACDF,KAAK,CAAE,KADN,CAEDC,EAAE,CAAE,KAFH,CAGDC,QAAQ,CAAE,CAAC,CACTF,KAAK,CAAE,+BADE,CAETC,EAAE,CAAE,qBAFK,CAGTC,QAAQ,CAAE,EAHD,CAAD,CAHT,CAJqB,CAAjB,CAaP,KAAMC,CAAAA,aAAa,CAAGC,IAAI,EAAI,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHD,CAKA,KAAMG,CAAAA,WAAW,CAAG,CAClBV,QADkB,CAApB,CAGA,KAAMW,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGN,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAGL,IAAC,GAAD,EAAK,GAAG,CAAC,2BAAT,CAAqC,OAAO,CAAC,KAA7C,EAHK,CAIL,aAAK,oEAAL,CAAyE,cAAQ,UAAU,CAAC,GAAnB,EAAyB,QAAzB,CAAzE,CAAqH;;;+CAArH,CAJK,CAeL,SAAQ,CACN,KAAM,aADA,CAAR,CAEK,aAFL,CAfK,CAkBL,aAAK;;uBAAL,CAlBK,CAqBL,IAAC,IAAD,EAAM,EAAE,CAAC,6BAAT,CAAuC,OAAO,CAAC,MAA/C,QArBK,CAsBL,IAAC,IAAD,EAAM,EAAE,CAAC,gCAAT,CAA0C,OAAO,CAAC,MAAlD,WAtBK,CAuBL,SAAQ,CACN,KAAM,KADA,CAAR,CAEK,KAFL,CAvBK,CA0BL,SAAQ,CACN,KAAM,qBADA,CAAR,CAEK,UAFL,CAEe,UAAI,UAAU,CAAC,IAAf,EAAsB,MAAtB,CAFf,CAEkD,UAFlD,CA1BK,CA6BL,aAAK,MAAL,CAAW,UAAI,UAAU,CAAC,GAAf,EAAqB,WAArB,CAAX,CAAkD;;;;;;SAAlD,CA7BK,CAoCL,aAAK;YAAL,CACS,UAAI,UAAU,CAAC,GAAf,EAAqB,SAArB,CADT,CAC8C;4BAD9C,CAEyB,kBAAY,UAAU,CAAC,GAAvB,EAA6B,QAA7B,CAFzB,CAE6E,gBAF7E,CAE6F,kBAAY,UAAU,CAAC,GAAvB,EAA6B,YAA7B,CAF7F,CAEqJ;6DAFrJ,CApCK,CAAP,CAyCD,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tlast_modified_on: '2020-07-13',\n\ttitle: 'Data Model',\n\tsidebar_label: 'hidden',\n\tdescription: 'Vector\\'s internal data model -- event and it\\'s subtypes.'\n};\nexport const metadata = {\n  \"id\": \"about/data-model\",\n  \"title\": \"Data Model\",\n  \"description\": \"Vector's internal data model -- event and it's subtypes.\",\n  \"source\": \"@site/docs/about/data-model.md\",\n  \"permalink\": \"/new-docs/docs/about/data-model\",\n  \"editUrl\": \"https://github.com/nervosnetwork/muta/edit/master/website/docs/about/data-model.md\",\n  \"sidebar_label\": \"hidden\"\n};\n  /* @jsx mdx */\nimport Jump from '@site/src/components/Jump';\nimport SVG from 'react-inlinesvg';\nexport const rightToc = [{\n  value: 'Event Types',\n  id: 'event-types',\n  children: []\n}, {\n  value: 'FAQ',\n  id: 'faq',\n  children: [{\n    value: 'Why Not <em>Just</em> Events?',\n    id: 'why-not-just-events',\n    children: []\n  }]\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <SVG src=\"/img/data-model-event.svg\" mdxType=\"SVG\" />\n    <p>{`The individual pieces of data flowing through Vector are known as `}<strong parentName=\"p\">{`events`}</strong>{`.\nEvents are arbitrarily wide, and deep, structured pieces of data. They have no\nrequirements or limitations. Ideally, events contain enough rich information\nto derive any type of monitoring data from it.`}</p>\n    {\n      /*\n          THIS FILE IS AUTOGENERATED!\n           To make changes please edit the template located at:\n           website/docs/about/data-model.md.erb\n      */\n    }\n    <h2 {...{\n      \"id\": \"event-types\"\n    }}>{`Event Types`}</h2>\n    <p>{`Vector defines subtypes for events. This is necessary to establish domain\nspecific requriements enabling interoperability with existing monitoring and\nobservability systems.`}</p>\n    <Jump to=\"/docs/about/data-model/log/\" mdxType=\"Jump\">Log</Jump>\n    <Jump to=\"/docs/about/data-model/metric/\" mdxType=\"Jump\">Metric</Jump>\n    <h2 {...{\n      \"id\": \"faq\"\n    }}>{`FAQ`}</h2>\n    <h3 {...{\n      \"id\": \"why-not-just-events\"\n    }}>{`Why Not `}<em parentName=\"h3\">{`Just`}</em>{` Events?`}</h3>\n    <p>{`We, `}<em parentName=\"p\">{`very much`}</em>{`, like the idea of an event only world, one where every service\nis perfectly instrumented with events that contain rich data and context.\nUnfortunately, that is not the case; exisiting services usually emit metrics,\ntraces, and logs of varying quality. By designing Vector to meet services where\nthey are (current state), we serve as a bridge to newer standards. This is why\nwe place \"events\" at the top of our data model, where logs and metrics are\nderived.`}</p>\n    <p>{`Finally, a sophisticated data model that accounts for the various data types\nallows for `}<em parentName=\"p\">{`correct`}</em>{` interoperability between observability systems. For\nexample, a pipeline with a `}<inlineCode parentName=\"p\">{`statsd`}</inlineCode>{` source and a `}<inlineCode parentName=\"p\">{`prometheus`}</inlineCode>{` sink would not\nbe possible without the correct internal metrics data types.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}