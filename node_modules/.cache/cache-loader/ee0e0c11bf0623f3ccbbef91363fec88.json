{"remainingRequest":"/Users/Yun/vector/website/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/vector/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/vector/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/vector/website/docs/reference/transforms/filter.md","dependencies":[{"path":"/Users/Yun/vector/website/docs/reference/transforms/filter.md","mtime":1594780808408},{"path":"/Users/Yun/vector/website/.docusaurus/docusaurus-plugin-content-docs/site-docs-reference-transforms-filter-md-89c.json","mtime":1594781223952},{"path":"/Users/Yun/vector/website/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/vector/website/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/vector/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/vector/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1588759133114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Yun/vector/website/docs/reference/transforms/filter.md"],"names":["React","mdx","frontMatter","last_modified_on","component_title","description","event_types","function_category","issues_url","operating_systems","sidebar_label","source_url","status","title","unsupported_operating_systems","metadata","Fields","Field","Tabs","TabItem","rightToc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tlast_modified_on: '2020-07-13',\n\tcomponent_title: 'Filter',\n\tdescription: 'The Vector `filter` transform accepts and outputs `log` and `metric` events, allowing you to select events based on a set of logical conditions.',\n\tevent_types: [\n\t\t'log',\n\t\t'metric'\n\t],\n\tfunction_category: 'filter',\n\tissues_url: 'https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22transform%3A+filter%22',\n\toperating_systems: [\n\t\t'Linux',\n\t\t'MacOS',\n\t\t'Windows'\n\t],\n\tsidebar_label: 'filter|[\"log\",\"metric\"]',\n\tsource_url: 'https://github.com/timberio/vector/tree/master/src/transforms/filter.rs',\n\tstatus: 'beta',\n\ttitle: 'Filter Transform',\n\tunsupported_operating_systems: []\n};\nexport const metadata = {\n  \"id\": \"reference/transforms/filter\",\n  \"title\": \"Filter Transform\",\n  \"description\": \"The Vector `filter` transform accepts and outputs `log` and `metric` events, allowing you to select events based on a set of logical conditions.\",\n  \"source\": \"@site/docs/reference/transforms/filter.md\",\n  \"permalink\": \"/docs/reference/transforms/filter\",\n  \"editUrl\": \"https://github.com/timberio/vector/edit/master/website/docs/reference/transforms/filter.md\",\n  \"sidebar_label\": \"filter|[\\\"log\\\",\\\"metric\\\"]\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"Dedupe events Transform\",\n    \"permalink\": \"/docs/reference/transforms/dedupe\"\n  },\n  \"next\": {\n    \"title\": \"GeoIP Transform\",\n    \"permalink\": \"/docs/reference/transforms/geoip\"\n  }\n};\n  /* @jsx mdx */\nimport Fields from '@site/src/components/Fields';\nimport Field from '@site/src/components/Field';\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nexport const rightToc = [{\n  value: 'Configuration',\n  id: 'configuration',\n  children: [{\n    value: 'condition',\n    id: 'condition',\n    children: []\n  }]\n}, {\n  value: 'Examples',\n  id: 'examples',\n  children: []\n}, {\n  value: 'How It Works',\n  id: 'how-it-works',\n  children: [{\n    value: 'Complex Processing',\n    id: 'complex-processing',\n    children: []\n  }, {\n    value: 'Environment Variables',\n    id: 'environment-variables',\n    children: []\n  }]\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`The Vector `}<inlineCode parentName=\"p\">{`filter`}</inlineCode>{` transform\naccepts and outputs `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/about/data-model/log/\"\n      }}><inlineCode parentName=\"a\">{`log`}</inlineCode></a>{` and\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/about/data-model/metric/\"\n      }}><inlineCode parentName=\"a\">{`metric`}</inlineCode></a>{` events, allowing you to select events based\non a set of logical conditions.`}</p>\n    {\n      /*\n          THIS FILE IS AUTOGENERATED!\n           To make changes please edit the template located at:\n           website/docs/reference/transforms/filter.md.erb\n      */\n    }\n    <h2 {...{\n      \"id\": \"configuration\"\n    }}>{`Configuration`}</h2>\n    <Tabs block={true} defaultValue=\"common\" values={[{\n      \"label\": \"Common\",\n      \"value\": \"common\"\n    }, {\n      \"label\": \"Advanced\",\n      \"value\": \"advanced\"\n    }]} mdxType=\"Tabs\">\n      <TabItem value=\"common\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"title=\\\"vector.toml\\\"\",\n            \"title\": \"\\\"vector.toml\\\"\"\n          }}>{`[transforms.my_transform_id]\n  # General\n  type = \"filter\" # required\n  inputs = [\"my-source-or-transform-id\"] # required\n\n  # Condition\n  condition.type = \"check_fields\" # optional, default\n  condition.\"message.eq\" = \"this is the content to match against\" # example\n  condition.\"message.eq\" = [\"match this\", \"or this\"] # example\n  condition.\"message.contains\" = \"foo\" # example\n  condition.\"message.contains\" = [\"foo\", \"bar\"] # example\n  condition.\"environment.ends_with\" = \"-staging\" # example\n  condition.\"environment.ends_with\" = [\"-staging\", \"-running\"] # example\n  condition.\"message.regex\" = \" (any|of|these|five|words) \" # example\n  condition.\"environment.starts_with\" = \"staging-\" # example\n  condition.\"environment.starts_with\" = [\"staging-\", \"running-\"] # example\n`}</code></pre>\n      </TabItem>\n      <TabItem value=\"advanced\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"title=\\\"vector.toml\\\"\",\n            \"title\": \"\\\"vector.toml\\\"\"\n          }}>{`[transforms.my_transform_id]\n  # General\n  type = \"filter\" # required\n  inputs = [\"my-source-or-transform-id\"] # required\n\n  # Condition\n  condition.type = \"check_fields\" # optional, default\n  condition.\"message.eq\" = \"this is the content to match against\" # example\n  condition.\"message.eq\" = [\"match this\", \"or this\"] # example\n  condition.\"host.exists\" = true # example\n  condition.\"method.neq\" = \"POST\" # example\n  condition.\"method.neq\" = [\"POST\", \"GET\"] # example\n  condition.\"message.not_contains\" = \"some phrase to ignore\" # example\n  condition.\"unit.not_starts_with\" = \"sys-\" # example\n  condition.\"unit.not_ends_with\" = \".device\" # example\n  condition.\"message.contains\" = \"foo\" # example\n  condition.\"message.contains\" = [\"foo\", \"bar\"] # example\n  condition.\"environment.ends_with\" = \"-staging\" # example\n  condition.\"environment.ends_with\" = [\"-staging\", \"-running\"] # example\n  condition.\"message.ip_cidr_contains\" = \"10.0.0.0/8\" # example\n  condition.\"message.ip_cidr_contains\" = [\"2000::/10\", \"192.168.0.0/16\"] # example\n  condition.\"message.regex\" = \" (any|of|these|five|words) \" # example\n  condition.\"environment.starts_with\" = \"staging-\" # example\n  condition.\"environment.starts_with\" = [\"staging-\", \"running-\"] # example\n`}</code></pre>\n      </TabItem>\n    </Tabs>\n    <Fields filters={true} mdxType=\"Fields\">\n      <Field common={true} defaultValue={null} enumValues={null} examples={[]} groups={[]} name={\"condition\"} path={null} relevantWhen={null} required={true} templateable={false} type={\"table\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"condition\"\n        }}>{`condition`}</h3>\n        <p>{`The set of logical conditions to be matched against every input event. Only\nmessages that pass all conditions will be forwarded.`}</p>\n        <Fields filters={false} mdxType=\"Fields\">\n          <Field common={true} defaultValue={\"check_fields\"} enumValues={{\n            \"check_fields\": \"Allows you to check individual fields against a list of conditions.\",\n            \"is_log\": \"Returns true if the event is a log.\",\n            \"is_metric\": \"Returns true if the event is a metric.\"\n          }} examples={[\"check_fields\", \"is_log\", \"is_metric\"]} groups={[]} name={\"type\"} path={\"condition\"} relevantWhen={null} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"type\"\n            }}>{`type`}</h4>\n            <p>{`The type of the condition to execute.`}</p>\n          </Field>\n          <Field common={true} defaultValue={null} enumValues={null} examples={[{\n            \"message.eq\": \"this is the content to match against\"\n          }, {\n            \"message.eq\": [\"match this\", \"or this\"]\n          }]} groups={[]} name={\"`[field-name]`.eq\"} path={\"condition\"} relevantWhen={{\n            \"type\": \"check_fields\"\n          }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field-nameeq\"\n            }}><inlineCode parentName=\"h4\">{`[field-name]`}</inlineCode>{`.eq`}</h4>\n            <p>{`Check whether a fields contents exactly matches the value specified. This may\nbe a single string or a list of strings, in which case this evaluates to true\nif any of the list matches.`}</p>\n          </Field>\n          <Field common={false} defaultValue={null} enumValues={null} examples={[{\n            \"host.exists\": true\n          }]} groups={[]} name={\"`[field-name]`.exists\"} path={\"condition\"} relevantWhen={{\n            \"type\": \"check_fields\"\n          }} required={false} templateable={false} type={\"bool\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field-nameexists\"\n            }}><inlineCode parentName=\"h4\">{`[field-name]`}</inlineCode>{`.exists`}</h4>\n            <p>{`Check whether a field exists or does not exist, depending on the provided value\nbeing `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{` respectively.`}</p>\n          </Field>\n          <Field common={false} defaultValue={null} enumValues={null} examples={[{\n            \"method.neq\": \"POST\"\n          }, {\n            \"method.neq\": [\"POST\", \"GET\"]\n          }]} groups={[]} name={\"`[field-name]`.neq\"} path={\"condition\"} relevantWhen={{\n            \"type\": \"check_fields\"\n          }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field-nameneq\"\n            }}><inlineCode parentName=\"h4\">{`[field-name]`}</inlineCode>{`.neq`}</h4>\n            <p>{`Check whether a fields contents does not match the value specified. This may be\na single string or a list of strings, in which case this evaluates to false if\nany of the list matches.`}</p>\n          </Field>\n          <Field common={false} defaultValue={null} enumValues={null} examples={[{\n            \"message.not_contains\": \"some phrase to ignore\"\n          }, {\n            \"unit.not_starts_with\": \"sys-\"\n          }, {\n            \"unit.not_ends_with\": \".device\"\n          }]} groups={[]} name={\"`[field-name]`.not_`[condition]`\"} path={\"condition\"} relevantWhen={{\n            \"type\": \"check_fields\"\n          }} required={false} templateable={false} type={\"any\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field-namenot_condition\"\n            }}><inlineCode parentName=\"h4\">{`[field-name]`}</inlineCode>{`.not_`}<inlineCode parentName=\"h4\">{`[condition]`}</inlineCode></h4>\n            <p>{`Check if the given `}<inlineCode parentName=\"p\">{`[condition]`}</inlineCode>{` does not match.`}</p>\n          </Field>\n          <Field common={true} defaultValue={null} enumValues={null} examples={[{\n            \"message.contains\": \"foo\"\n          }, {\n            \"message.contains\": [\"foo\", \"bar\"]\n          }]} groups={[]} name={\"`[field_name]`.contains\"} path={\"condition\"} relevantWhen={{\n            \"type\": \"check_fields\"\n          }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field_namecontains\"\n            }}><inlineCode parentName=\"h4\">{`[field_name]`}</inlineCode>{`.contains`}</h4>\n            <p>{`Checks whether a string field contains a string argument. This may be a single\nstring or a list of strings, in which case this evaluates to true if any of the\nlist matches.`}</p>\n          </Field>\n          <Field common={true} defaultValue={null} enumValues={null} examples={[{\n            \"environment.ends_with\": \"-staging\"\n          }, {\n            \"environment.ends_with\": [\"-staging\", \"-running\"]\n          }]} groups={[]} name={\"`[field_name]`.ends_with\"} path={\"condition\"} relevantWhen={{\n            \"type\": \"check_fields\"\n          }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field_nameends_with\"\n            }}><inlineCode parentName=\"h4\">{`[field_name]`}</inlineCode>{`.ends_with`}</h4>\n            <p>{`Checks whether a string field ends with a string argument. This may be a single\nstring or a list of strings, in which case this evaluates to true if any of the\nlist matches.`}</p>\n          </Field>\n          <Field common={false} defaultValue={null} enumValues={null} examples={[{\n            \"message.ip_cidr_contains\": \"10.0.0.0/8\"\n          }, {\n            \"message.ip_cidr_contains\": [\"2000::/10\", \"192.168.0.0/16\"]\n          }]} groups={[]} name={\"`[field_name]`.ip_cidr_contains\"} path={\"condition\"} relevantWhen={{\n            \"type\": \"check_fields\"\n          }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field_nameip_cidr_contains\"\n            }}><inlineCode parentName=\"h4\">{`[field_name]`}</inlineCode>{`.ip_cidr_contains`}</h4>\n            <p>{`Checks whether an IP field is contained within a given `}<a parentName=\"p\" {...{\n                \"href\": \"https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\"\n              }}>{`IP CIDR`}</a>{`\n(works with IPv4 and IPv6). This may be a single string or a list of strings,\nin which case this evaluates to true if the IP field is contained within any of\nthe CIDRs in the list.`}</p>\n          </Field>\n          <Field common={true} defaultValue={null} enumValues={null} examples={[{\n            \"message.regex\": \" (any|of|these|five|words) \"\n          }]} groups={[]} name={\"`[field_name]`.regex\"} path={\"condition\"} relevantWhen={{\n            \"type\": \"check_fields\"\n          }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field_nameregex\"\n            }}><inlineCode parentName=\"h4\">{`[field_name]`}</inlineCode>{`.regex`}</h4>\n            <p>{`Checks whether a string field matches a `}<a parentName=\"p\" {...{\n                \"href\": \"https://en.wikipedia.org/wiki/Regular_expression\"\n              }}>{`regular expression`}</a>{`.\nVector uses the `}<a parentName=\"p\" {...{\n                \"href\": \"https://docs.rs/regex/1.3.6/regex/#syntax\"\n              }}>{`documented Rust Regex syntax`}</a>{`. Note\nthat this condition is considerably more expensive than a regular string match\n(such as `}<inlineCode parentName=\"p\">{`starts_with`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`contains`}</inlineCode>{`) so the use of those conditions are\npreferred where possible.`}</p>\n          </Field>\n          <Field common={true} defaultValue={null} enumValues={null} examples={[{\n            \"environment.starts_with\": \"staging-\"\n          }, {\n            \"environment.starts_with\": [\"staging-\", \"running-\"]\n          }]} groups={[]} name={\"`[field_name]`.starts_with\"} path={\"condition\"} relevantWhen={{\n            \"type\": \"check_fields\"\n          }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field_namestarts_with\"\n            }}><inlineCode parentName=\"h4\">{`[field_name]`}</inlineCode>{`.starts_with`}</h4>\n            <p>{`Checks whether a string field starts with a string argument. This may be a\nsingle string or a list of strings, in which case this evaluates to true if any\nof the list matches.`}</p>\n          </Field>\n        </Fields>\n      </Field>\n    </Fields>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`filter`}</inlineCode>{` transform is a simple conditional match, forwarding only those messages that pass all the conditions.\nIn this example, we drop all events that do not come from the host `}<inlineCode parentName=\"p\">{`gerry`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-toml\",\n        \"metastring\": \"title=\\\"vector.toml\\\"\",\n        \"title\": \"\\\"vector.toml\\\"\"\n      }}>{`[transforms.from_gerry]\n  inputs = [ \"somewhere\" ]\n  type = \"filter\"\n\n  [transforms.from_gerry.condition]\n    \"host.eq\" = \"gerry\"\n\n[sinks.only_gerry]\n  inputs = [ \"from_gerry\" ]\n  type = \"something\"\n`}</code></pre>\n    <p>{`Any event that does not match all of the conditions in the filter will be dropped by the transform.`}</p>\n    <h2 {...{\n      \"id\": \"how-it-works\"\n    }}>{`How It Works`}</h2>\n    <h3 {...{\n      \"id\": \"complex-processing\"\n    }}>{`Complex Processing`}</h3>\n    <p>{`If you encounter limitations with the `}<inlineCode parentName=\"p\">{`filter`}</inlineCode>{`\ntransform then we recommend using a `}<a parentName=\"p\" {...{\n        \"href\": \"https://vector.dev/components/?functions%5B%5D=program\"\n      }}>{`runtime transform`}</a>{`.\nThese transforms are designed for complex processing and give you the power of\nfull programming runtime.`}</p>\n    <h3 {...{\n      \"id\": \"environment-variables\"\n    }}>{`Environment Variables`}</h3>\n    <p>{`Environment variables are supported through all of Vector's configuration.\nSimply add `}<inlineCode parentName=\"p\">{`\\${MY_ENV_VAR}`}</inlineCode>{` in your Vector configuration file and the variable\nwill be replaced before being evaluated.`}</p>\n    <p>{`You can learn more in the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/setup/configuration/#environment-variables\"\n      }}>{`Environment Variables`}</a>{` section.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}