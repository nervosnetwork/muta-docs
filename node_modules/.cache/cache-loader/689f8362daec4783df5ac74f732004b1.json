{"remainingRequest":"/Users/Yun/vector/website/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/vector/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/vector/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/vector/website/docs/reference/transforms/add_fields.md","dependencies":[{"path":"/Users/Yun/vector/website/docs/reference/transforms/add_fields.md","mtime":1594780808403},{"path":"/Users/Yun/vector/website/.docusaurus/docusaurus-plugin-content-docs/site-docs-reference-transforms-add-fields-md-6e7.json","mtime":1594781223951},{"path":"/Users/Yun/vector/website/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/vector/website/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/vector/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/vector/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1588759133114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Yun/vector/website/docs/reference/transforms/add_fields.md"],"names":["React","mdx","frontMatter","last_modified_on","component_title","description","event_types","function_category","issues_url","operating_systems","sidebar_label","source_url","status","title","unsupported_operating_systems","metadata","Fields","Field","Tabs","TabItem","rightToc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tlast_modified_on: '2020-07-13',\n\tcomponent_title: 'Add Fields',\n\tdescription: 'The Vector `add_fields` transform accepts and outputs `log` events, allowing you to add one or more log fields.',\n\tevent_types: [\n\t\t'log'\n\t],\n\tfunction_category: 'schema',\n\tissues_url: 'https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22transform%3A+add_fields%22',\n\toperating_systems: [\n\t\t'Linux',\n\t\t'MacOS',\n\t\t'Windows'\n\t],\n\tsidebar_label: 'add_fields|[\"log\"]',\n\tsource_url: 'https://github.com/timberio/vector/tree/master/src/transforms/add_fields.rs',\n\tstatus: 'prod-ready',\n\ttitle: 'Add Fields Transform',\n\tunsupported_operating_systems: []\n};\nexport const metadata = {\n  \"id\": \"reference/transforms/add_fields\",\n  \"title\": \"Add Fields Transform\",\n  \"description\": \"The Vector `add_fields` transform accepts and outputs `log` events, allowing you to add one or more log fields.\",\n  \"source\": \"@site/docs/reference/transforms/add_fields.md\",\n  \"permalink\": \"/docs/reference/transforms/add_fields\",\n  \"editUrl\": \"https://github.com/timberio/vector/edit/master/website/docs/reference/transforms/add_fields.md\",\n  \"sidebar_label\": \"add_fields|[\\\"log\\\"]\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"Transforms\",\n    \"permalink\": \"/docs/reference/transforms\"\n  },\n  \"next\": {\n    \"title\": \"Add Tags Transform\",\n    \"permalink\": \"/docs/reference/transforms/add_tags\"\n  }\n};\n  /* @jsx mdx */\nimport Fields from '@site/src/components/Fields';\nimport Field from '@site/src/components/Field';\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nexport const rightToc = [{\n  value: 'Configuration',\n  id: 'configuration',\n  children: [{\n    value: 'fields',\n    id: 'fields',\n    children: []\n  }, {\n    value: 'overwrite',\n    id: 'overwrite',\n    children: []\n  }]\n}, {\n  value: 'How It Works',\n  id: 'how-it-works',\n  children: [{\n    value: 'Complex Processing',\n    id: 'complex-processing',\n    children: []\n  }, {\n    value: 'Conflicts',\n    id: 'conflicts',\n    children: []\n  }, {\n    value: 'Environment Variables',\n    id: 'environment-variables',\n    children: []\n  }, {\n    value: 'Types',\n    id: 'types',\n    children: []\n  }]\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`The Vector `}<inlineCode parentName=\"p\">{`add_fields`}</inlineCode>{` transform\naccepts and outputs `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/about/data-model/log/\"\n      }}><inlineCode parentName=\"a\">{`log`}</inlineCode></a>{` events, allowing you to add\none or more log fields.`}</p>\n    {\n      /*\n          THIS FILE IS AUTOGENERATED!\n           To make changes please edit the template located at:\n           website/docs/reference/transforms/add_fields.md.erb\n      */\n    }\n    <h2 {...{\n      \"id\": \"configuration\"\n    }}>{`Configuration`}</h2>\n    <Tabs block={true} defaultValue=\"common\" values={[{\n      \"label\": \"Common\",\n      \"value\": \"common\"\n    }, {\n      \"label\": \"Advanced\",\n      \"value\": \"advanced\"\n    }]} mdxType=\"Tabs\">\n      <TabItem value=\"common\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"title=\\\"vector.toml\\\"\",\n            \"title\": \"\\\"vector.toml\\\"\"\n          }}>{`[transforms.my_transform_id]\n  # General\n  type = \"add_fields\" # required\n  inputs = [\"my-source-or-transform-id\"] # required\n  overwrite = true # optional, default\n\n  # Fields\n  fields.string_field = \"string value\" # example\n  fields.env_var_field = \"\\${ENV_VAR}\" # example\n  fields.templated_field = \"{{ my_other_field }}\" # example\n  fields.int_field = 1 # example\n  fields.float_field = 1.2 # example\n  fields.bool_field = true # example\n  fields.timestamp_field = 1979-05-27T00:32:00Z # example\n  fields.parent.child_field = \"child_value\" # example\n  fields.list_field = [\"first\", \"second\", \"third\"] # example\n`}</code></pre>\n      </TabItem>\n      <TabItem value=\"advanced\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"title=\\\"vector.toml\\\"\",\n            \"title\": \"\\\"vector.toml\\\"\"\n          }}>{`[transforms.my_transform_id]\n  # General\n  type = \"add_fields\" # required\n  inputs = [\"my-source-or-transform-id\"] # required\n  overwrite = true # optional, default\n\n  # Fields\n  fields.string_field = \"string value\" # example\n  fields.env_var_field = \"\\${ENV_VAR}\" # example\n  fields.templated_field = \"{{ my_other_field }}\" # example\n  fields.int_field = 1 # example\n  fields.float_field = 1.2 # example\n  fields.bool_field = true # example\n  fields.timestamp_field = 1979-05-27T00:32:00Z # example\n  fields.parent.child_field = \"child_value\" # example\n  fields.list_field = [\"first\", \"second\", \"third\"] # example\n`}</code></pre>\n      </TabItem>\n    </Tabs>\n    <Fields filters={true} mdxType=\"Fields\">\n      <Field common={true} defaultValue={null} enumValues={null} examples={[]} groups={[]} name={\"fields\"} path={null} relevantWhen={null} required={true} templateable={false} type={\"table\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"fields\"\n        }}>{`fields`}</h3>\n        <p>{`A table of key/value pairs representing the keys to be added to the event.`}</p>\n        <Fields filters={false} mdxType=\"Fields\">\n          <Field common={true} defaultValue={null} enumValues={null} examples={[{\n            \"string_field\": \"string value\"\n          }, {\n            \"env_var_field\": \"${ENV_VAR}\"\n          }, {\n            \"templated_field\": \"{{ my_other_field }}\"\n          }, {\n            \"int_field\": 1\n          }, {\n            \"float_field\": 1.2\n          }, {\n            \"bool_field\": true\n          }, {\n            \"timestamp_field\": \"1979-05-27 00:32:00 -0700\"\n          }, {\n            \"parent\": {\n              \"child_field\": \"child_value\"\n            }\n          }, {\n            \"list_field\": [\"first\", \"second\", \"third\"]\n          }]} groups={[]} name={\"`[field-name]`\"} path={\"fields\"} relevantWhen={null} required={true} templateable={false} type={\"*\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field-name\"\n            }}><inlineCode parentName=\"h4\">{`[field-name]`}</inlineCode></h4>\n            <p>{`The name of the field to add. Accepts all `}<a parentName=\"p\" {...{\n                \"href\": \"/docs/setup/configuration/#types\"\n              }}>{`supported\ntypes`}</a>{`. Use `}<inlineCode parentName=\"p\">{`.`}</inlineCode>{` for adding nested fields.`}</p>\n          </Field>\n        </Fields>\n      </Field>\n      <Field common={true} defaultValue={true} enumValues={null} examples={[true, false]} groups={[]} name={\"overwrite\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"bool\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"overwrite\"\n        }}>{`overwrite`}</h3>\n        <p>{`By default, fields will be overridden. Set this to `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{` to avoid overwriting\nvalues.`}</p>\n      </Field>\n    </Fields>\n    <h2 {...{\n      \"id\": \"how-it-works\"\n    }}>{`How It Works`}</h2>\n    <h3 {...{\n      \"id\": \"complex-processing\"\n    }}>{`Complex Processing`}</h3>\n    <p>{`If you encounter limitations with the `}<inlineCode parentName=\"p\">{`add_fields`}</inlineCode>{`\ntransform then we recommend using a `}<a parentName=\"p\" {...{\n        \"href\": \"https://vector.dev/components/?functions%5B%5D=program\"\n      }}>{`runtime transform`}</a>{`.\nThese transforms are designed for complex processing and give you the power of\nfull programming runtime.`}</p>\n    <h3 {...{\n      \"id\": \"conflicts\"\n    }}>{`Conflicts`}</h3>\n    <h4 {...{\n      \"id\": \"key-conflicts\"\n    }}>{`Key Conflicts`}</h4>\n    <p>{`Keys specified in this transform will replace existing keys.`}</p>\n    <h4 {...{\n      \"id\": \"nested-key-conflicts\"\n    }}>{`Nested Key Conflicts`}</h4>\n    <p>{`Nested keys are added in a `}<em parentName=\"p\">{`deep`}</em>{` fashion. They will not replace any ancestor\nobjects. For example, given the following `}<inlineCode parentName=\"p\">{`log`}</inlineCode>{` event:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n  \"parent\": {\n    \"child1\": \"value1\"\n  }\n}\n`}</code></pre>\n    <p>{`And the following configuration:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-toml\"\n      }}>{`[transforms.add_nested_field]\n  type = \"add_fields\"\n  fields.parent.child2 = \"value2\"\n`}</code></pre>\n    <p>{`Will result in the following log event:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n  \"parent\": {\n    \"child1\": \"value1\",\n    \"child2\": \"value2\"\n  }\n}\n`}</code></pre>\n    <p>{`Notice that `}<inlineCode parentName=\"p\">{`parent.child1`}</inlineCode>{` field was preserved.`}</p>\n    <h3 {...{\n      \"id\": \"environment-variables\"\n    }}>{`Environment Variables`}</h3>\n    <p>{`Environment variables are supported through all of Vector's configuration.\nSimply add `}<inlineCode parentName=\"p\">{`\\${MY_ENV_VAR}`}</inlineCode>{` in your Vector configuration file and the variable\nwill be replaced before being evaluated.`}</p>\n    <p>{`You can learn more in the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/setup/configuration/#environment-variables\"\n      }}>{`Environment Variables`}</a>{` section.`}</p>\n    <h3 {...{\n      \"id\": \"types\"\n    }}>{`Types`}</h3>\n    <p>{`All supported `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/setup/configuration/#types\"\n      }}>{`configuration value types`}</a>{` are\naccepted. This includes primitivate types (`}<inlineCode parentName=\"p\">{`string`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`int`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`float`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`boolean`}</inlineCode>{`)\nand special types, such as `}<a parentName=\"p\" {...{\n        \"href\": \"#arrays\"\n      }}>{`arrays`}</a>{` and\n`}<a parentName=\"p\" {...{\n        \"href\": \"#nested-fields\"\n      }}>{`nested fields`}</a>{`.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}