{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/Desktop/vdocs/website/new-docs/docs/reference/sinks/humio_logs.md","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/docs/reference/sinks/humio_logs.md","mtime":1595397619841},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-reference-sinks-humio-logs-md-1ac.json","mtime":1595398498313},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1588759133114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL1l1bi9EZXNrdG9wL3Zkb2NzL3dlYnNpdGUvbmV3LWRvY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXtsYXN0X21vZGlmaWVkX29uOicyMDIwLTA3LTEzJyxkZWxpdmVyeV9ndWFyYW50ZWU6J2F0X2xlYXN0X29uY2UnLGNvbXBvbmVudF90aXRsZTonSHVtaW8gTG9ncycsZGVzY3JpcHRpb246J1RoZSBWZWN0b3IgYGh1bWlvX2xvZ3NgIHNpbmsgYmF0Y2hlcyBgbG9nYCBldmVudHMgdG8gSHVtaW8gdmlhIHRoZSBIRUMgQVBJLicsZXZlbnRfdHlwZXM6Wydsb2cnXSxmdW5jdGlvbl9jYXRlZ29yeTondHJhbnNtaXQnLGlzc3Vlc191cmw6J2h0dHBzOi8vZ2l0aHViLmNvbS90aW1iZXJpby92ZWN0b3IvaXNzdWVzP3E9aXMlM0FvcGVuK2lzJTNBaXNzdWUrbGFiZWwlM0ElMjJzaW5rJTNBK2h1bWlvX2xvZ3MlMjInLG9wZXJhdGluZ19zeXN0ZW1zOlsnTGludXgnLCdNYWNPUycsJ1dpbmRvd3MnXSxzaWRlYmFyX2xhYmVsOidodW1pb19sb2dzfFsibG9nIl0nLHNvdXJjZV91cmw6J2h0dHBzOi8vZ2l0aHViLmNvbS90aW1iZXJpby92ZWN0b3IvdHJlZS9tYXN0ZXIvc3JjL3NpbmtzL2h1bWlvX2xvZ3MucnMnLHN0YXR1czonYmV0YScsdGl0bGU6J0h1bWlvIExvZ3MgU2luaycsdW5zdXBwb3J0ZWRfb3BlcmF0aW5nX3N5c3RlbXM6W119O2V4cG9ydCBjb25zdCBtZXRhZGF0YT17ImlkIjoicmVmZXJlbmNlL3NpbmtzL2h1bWlvX2xvZ3MiLCJ0aXRsZSI6Ikh1bWlvIExvZ3MgU2luayIsImRlc2NyaXB0aW9uIjoiVGhlIFZlY3RvciBgaHVtaW9fbG9nc2Agc2luayBiYXRjaGVzIGBsb2dgIGV2ZW50cyB0byBIdW1pbyB2aWEgdGhlIEhFQyBBUEkuIiwic291cmNlIjoiQHNpdGUvZG9jcy9yZWZlcmVuY2Uvc2lua3MvaHVtaW9fbG9ncy5tZCIsInBlcm1hbGluayI6Ii9kb2NzL3JlZmVyZW5jZS9zaW5rcy9odW1pb19sb2dzIiwiZWRpdFVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9uZXJ2b3NuZXR3b3JrL211dGEvZWRpdC9tYXN0ZXIvd2Vic2l0ZS9kb2NzL3JlZmVyZW5jZS9zaW5rcy9odW1pb19sb2dzLm1kIiwic2lkZWJhcl9sYWJlbCI6Imh1bWlvX2xvZ3N8W1wibG9nXCJdIn07LyogQGpzeCBtZHggKi9pbXBvcnQgRmllbGRzIGZyb20nQHNpdGUvc3JjL2NvbXBvbmVudHMvRmllbGRzJztpbXBvcnQgRmllbGQgZnJvbSdAc2l0ZS9zcmMvY29tcG9uZW50cy9GaWVsZCc7aW1wb3J0IFNWRyBmcm9tJ3JlYWN0LWlubGluZXN2Zyc7aW1wb3J0IFRhYnMgZnJvbSdAdGhlbWUvVGFicyc7aW1wb3J0IFRhYkl0ZW0gZnJvbSdAdGhlbWUvVGFiSXRlbSc7ZXhwb3J0IGNvbnN0IHJpZ2h0VG9jPVt7dmFsdWU6J0NvbmZpZ3VyYXRpb24nLGlkOidjb25maWd1cmF0aW9uJyxjaGlsZHJlbjpbe3ZhbHVlOidiYXRjaCcsaWQ6J2JhdGNoJyxjaGlsZHJlbjpbXX0se3ZhbHVlOididWZmZXInLGlkOididWZmZXInLGNoaWxkcmVuOltdfSx7dmFsdWU6J2NvbXByZXNzaW9uJyxpZDonY29tcHJlc3Npb24nLGNoaWxkcmVuOltdfSx7dmFsdWU6J2VuY29kaW5nJyxpZDonZW5jb2RpbmcnLGNoaWxkcmVuOltdfSx7dmFsdWU6J2hlYWx0aGNoZWNrJyxpZDonaGVhbHRoY2hlY2snLGNoaWxkcmVuOltdfSx7dmFsdWU6J2hvc3QnLGlkOidob3N0JyxjaGlsZHJlbjpbXX0se3ZhbHVlOidyZXF1ZXN0JyxpZDoncmVxdWVzdCcsY2hpbGRyZW46W119LHt2YWx1ZTondG9rZW4nLGlkOid0b2tlbicsY2hpbGRyZW46W119XX0se3ZhbHVlOidIb3cgSXQgV29ya3MnLGlkOidob3ctaXQtd29ya3MnLGNoaWxkcmVuOlt7dmFsdWU6J0J1ZmZlcnMgJmFtcDsgQmF0Y2hlcycsaWQ6J2J1ZmZlcnMtLWJhdGNoZXMnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0Vudmlyb25tZW50IFZhcmlhYmxlcycsaWQ6J2Vudmlyb25tZW50LXZhcmlhYmxlcycsY2hpbGRyZW46W119LHt2YWx1ZTonSGVhbHRoIENoZWNrcycsaWQ6J2hlYWx0aC1jaGVja3MnLGNoaWxkcmVuOltdfSx7dmFsdWU6J09idGFpbmluZyBhIEh1bWlvIGluZ2VzdGlvbiB0b2tlbicsaWQ6J29idGFpbmluZy1hLWh1bWlvLWluZ2VzdGlvbi10b2tlbicsY2hpbGRyZW46W119LHt2YWx1ZTonUmF0ZSBMaW1pdHMnLGlkOidyYXRlLWxpbWl0cycsY2hpbGRyZW46W119LHt2YWx1ZTonUmV0cnkgUG9saWN5JyxpZDoncmV0cnktcG9saWN5JyxjaGlsZHJlbjpbXX1dfV07Y29uc3QgbWFrZVNob3J0Y29kZT1uYW1lPT5mdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTtjb25zdCBsYXlvdXRQcm9wcz17cmlnaHRUb2N9O2NvbnN0IE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7Y29tcG9uZW50cywuLi5wcm9wc30pe3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgicCIsbnVsbCxgVGhlIFZlY3RvciBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgaHVtaW9fbG9nc2ApLGAgc2luawpgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIjYnVmZmVycy0tYmF0Y2hlcyJ9KSxgYmF0Y2hlc2ApLGAgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiL2RvY3MvYWJvdXQvZGF0YS1tb2RlbC9sb2cvIn0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSxgbG9nYCkpLGAgZXZlbnRzIHRvCmAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vaHVtaW8uY29tIn0pLGBIdW1pb2ApLGAgdmlhIHRoZSBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiJodHRwczovL2RvY3MuaHVtaW8uY29tL2ludGVncmF0aW9ucy9kYXRhLXNoaXBwZXJzL2hlYy8ifSksYEhFQyBBUElgKSxgLmApLG1keCgiaDIiLHsiaWQiOiJjb25maWd1cmF0aW9uIn0sYENvbmZpZ3VyYXRpb25gKSxtZHgoVGFicyx7YmxvY2s6dHJ1ZSxkZWZhdWx0VmFsdWU6ImNvbW1vbiIsdmFsdWVzOlt7ImxhYmVsIjoiQ29tbW9uIiwidmFsdWUiOiJjb21tb24ifSx7ImxhYmVsIjoiQWR2YW5jZWQiLCJ2YWx1ZSI6ImFkdmFuY2VkIn1dLG1keFR5cGU6IlRhYnMifSxtZHgoVGFiSXRlbSx7dmFsdWU6ImNvbW1vbiIsbWR4VHlwZToiVGFiSXRlbSJ9LG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtdG9tbCIsIm1ldGFzdHJpbmciOiJ0aXRsZT1cInZlY3Rvci50b21sXCIiLCJ0aXRsZSI6IlwidmVjdG9yLnRvbWxcIiJ9KSxgW3NpbmtzLm15X3NpbmtfaWRdCiAgIyBHZW5lcmFsCiAgdHlwZSA9ICJodW1pb19sb2dzIiAjIHJlcXVpcmVkCiAgaW5wdXRzID0gWyJteS1zb3VyY2Utb3ItdHJhbnNmb3JtLWlkIl0gIyByZXF1aXJlZAogIGhlYWx0aGNoZWNrID0gdHJ1ZSAjIG9wdGlvbmFsLCBkZWZhdWx0CiAgdG9rZW4gPSAiXCR7SFVNSU9fVE9LRU59IiAjIHJlcXVpcmVkCgogICMgRW5jb2RpbmcKICBlbmNvZGluZy5jb2RlYyA9ICJqc29uIiAjIG9wdGlvbmFsLCBkZWZhdWx0CgogICMgUmVxdWVzdHMKICBjb21wcmVzc2lvbiA9ICJub25lIiAjIG9wdGlvbmFsLCBkZWZhdWx0CmApKSksbWR4KFRhYkl0ZW0se3ZhbHVlOiJhZHZhbmNlZCIsbWR4VHlwZToiVGFiSXRlbSJ9LG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtdG9tbCIsIm1ldGFzdHJpbmciOiJ0aXRsZT1cInZlY3Rvci50b21sXCIiLCJ0aXRsZSI6IlwidmVjdG9yLnRvbWxcIiJ9KSxgW3NpbmtzLm15X3NpbmtfaWRdCiAgIyBHZW5lcmFsCiAgdHlwZSA9ICJodW1pb19sb2dzIiAjIHJlcXVpcmVkCiAgaW5wdXRzID0gWyJteS1zb3VyY2Utb3ItdHJhbnNmb3JtLWlkIl0gIyByZXF1aXJlZAogIGhlYWx0aGNoZWNrID0gdHJ1ZSAjIG9wdGlvbmFsLCBkZWZhdWx0CiAgaG9zdCA9ICJodHRwczovL2Nsb3VkLmh1bWlvLmNvbSIgIyBvcHRpb25hbCwgZGVmYXVsdAogIHRva2VuID0gIlwke0hVTUlPX1RPS0VOfSIgIyByZXF1aXJlZAoKICAjIEJhdGNoCiAgYmF0Y2gubWF4X2J5dGVzID0gMTA0OTAwMCAjIG9wdGlvbmFsLCBkZWZhdWx0LCBieXRlcwogIGJhdGNoLm1heF9ldmVudHMgPSAxMDAwICMgb3B0aW9uYWwsIG5vIGRlZmF1bHQsIGV2ZW50cwogIGJhdGNoLnRpbWVvdXRfc2VjcyA9IDEgIyBvcHRpb25hbCwgZGVmYXVsdCwgc2Vjb25kcwoKICAjIEJ1ZmZlcgogIGJ1ZmZlci5tYXhfZXZlbnRzID0gNTAwICMgb3B0aW9uYWwsIGRlZmF1bHQsIGV2ZW50cywgcmVsZXZhbnQgd2hlbiB0eXBlID0gIm1lbW9yeSIKICBidWZmZXIubWF4X3NpemUgPSAxMDQ5MDAwMDAgIyByZXF1aXJlZCwgYnl0ZXMsIHJlcXVpcmVkIHdoZW4gdHlwZSA9ICJkaXNrIgogIGJ1ZmZlci50eXBlID0gIm1lbW9yeSIgIyBvcHRpb25hbCwgZGVmYXVsdAogIGJ1ZmZlci53aGVuX2Z1bGwgPSAiYmxvY2siICMgb3B0aW9uYWwsIGRlZmF1bHQKCiAgIyBFbmNvZGluZwogIGVuY29kaW5nLmNvZGVjID0gImpzb24iICMgb3B0aW9uYWwsIGRlZmF1bHQKICBlbmNvZGluZy5leGNlcHRfZmllbGRzID0gWyJ0aW1lc3RhbXAiLCAibWVzc2FnZSIsICJob3N0Il0gIyBvcHRpb25hbCwgbm8gZGVmYXVsdAogIGVuY29kaW5nLm9ubHlfZmllbGRzID0gWyJ0aW1lc3RhbXAiLCAibWVzc2FnZSIsICJob3N0Il0gIyBvcHRpb25hbCwgbm8gZGVmYXVsdAogIGVuY29kaW5nLnRpbWVzdGFtcF9mb3JtYXQgPSAicmZjMzMzOSIgIyBvcHRpb25hbCwgZGVmYXVsdAoKICAjIFJlcXVlc3QKICByZXF1ZXN0LmluX2ZsaWdodF9saW1pdCA9IDEwICMgb3B0aW9uYWwsIGRlZmF1bHQsIHJlcXVlc3RzCiAgcmVxdWVzdC5yYXRlX2xpbWl0X2R1cmF0aW9uX3NlY3MgPSAxICMgb3B0aW9uYWwsIGRlZmF1bHQsIHNlY29uZHMKICByZXF1ZXN0LnJhdGVfbGltaXRfbnVtID0gMTAgIyBvcHRpb25hbCwgZGVmYXVsdAogIHJlcXVlc3QucmV0cnlfYXR0ZW1wdHMgPSAxODQ0Njc0NDA3MzcwOTU1MTYxNSAjIG9wdGlvbmFsLCBkZWZhdWx0CiAgcmVxdWVzdC5yZXRyeV9pbml0aWFsX2JhY2tvZmZfc2VjcyA9IDEgIyBvcHRpb25hbCwgZGVmYXVsdCwgc2Vjb25kcwogIHJlcXVlc3QucmV0cnlfbWF4X2R1cmF0aW9uX3NlY3MgPSAxMCAjIG9wdGlvbmFsLCBkZWZhdWx0LCBzZWNvbmRzCiAgcmVxdWVzdC50aW1lb3V0X3NlY3MgPSA2MCAjIG9wdGlvbmFsLCBkZWZhdWx0LCBzZWNvbmRzCgogICMgUmVxdWVzdHMKICBjb21wcmVzc2lvbiA9ICJub25lIiAjIG9wdGlvbmFsLCBkZWZhdWx0CmApKSkpLG1keChGaWVsZHMse2ZpbHRlcnM6dHJ1ZSxtZHhUeXBlOiJGaWVsZHMifSxtZHgoRmllbGQse2NvbW1vbjpmYWxzZSxkZWZhdWx0VmFsdWU6bnVsbCxlbnVtVmFsdWVzOm51bGwsZXhhbXBsZXM6W10sZ3JvdXBzOltdLG5hbWU6ImJhdGNoIixwYXRoOm51bGwscmVsZXZhbnRXaGVuOm51bGwscmVxdWlyZWQ6ZmFsc2UsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6InRhYmxlIix1bml0Om51bGwsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImgzIix7ImlkIjoiYmF0Y2gifSxgYmF0Y2hgKSxtZHgoInAiLG51bGwsYENvbmZpZ3VyZXMgdGhlIHNpbmsgYmF0Y2hpbmcgYmVoYXZpb3IuYCksbWR4KEZpZWxkcyx7ZmlsdGVyczpmYWxzZSxtZHhUeXBlOiJGaWVsZHMifSxtZHgoRmllbGQse2NvbW1vbjp0cnVlLGRlZmF1bHRWYWx1ZToxMDQ5MDAwLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbMTA0OTAwMF0sZ3JvdXBzOltdLG5hbWU6Im1heF9ieXRlcyIscGF0aDoiYmF0Y2giLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ1aW50Iix1bml0OiJieXRlcyIsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImg0Iix7ImlkIjoibWF4X2J5dGVzIn0sYG1heF9ieXRlc2ApLG1keCgicCIsbnVsbCxgVGhlIG1heGltdW0gc2l6ZSBvZiBhIGJhdGNoLCBpbiBieXRlcywgYmVmb3JlIGl0IGlzIGZsdXNoZWQuYCkpLG1keChGaWVsZCx7Y29tbW9uOnRydWUsZGVmYXVsdFZhbHVlOm51bGwsZW51bVZhbHVlczpudWxsLGV4YW1wbGVzOlsxMDAwXSxncm91cHM6W10sbmFtZToibWF4X2V2ZW50cyIscGF0aDoiYmF0Y2giLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ1aW50Iix1bml0OiJldmVudHMiLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoNCIseyJpZCI6Im1heF9ldmVudHMifSxgbWF4X2V2ZW50c2ApLG1keCgicCIsbnVsbCxgVGhlIG1heGltdW0gc2l6ZSBvZiBhIGJhdGNoLCBpbiBldmVudHMsIGJlZm9yZSBpdCBpcyBmbHVzaGVkLgpTZWUgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2J1ZmZlcnMtLWJhdGNoZXMifSksYEJ1ZmZlcnMgJiBCYXRjaGVzYCksYCBmb3IgbW9yZSBpbmZvLmApKSxtZHgoRmllbGQse2NvbW1vbjp0cnVlLGRlZmF1bHRWYWx1ZToxLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbMV0sZ3JvdXBzOltdLG5hbWU6InRpbWVvdXRfc2VjcyIscGF0aDoiYmF0Y2giLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ1aW50Iix1bml0OiJzZWNvbmRzIix3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDQiLHsiaWQiOiJ0aW1lb3V0X3NlY3MifSxgdGltZW91dF9zZWNzYCksbWR4KCJwIixudWxsLGBUaGUgbWF4aW11bSBhZ2Ugb2YgYSBiYXRjaCBiZWZvcmUgaXQgaXMgZmx1c2hlZC4KU2VlIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNidWZmZXJzLS1iYXRjaGVzIn0pLGBCdWZmZXJzICYgQmF0Y2hlc2ApLGAgZm9yIG1vcmUgaW5mby5gKSkpKSxtZHgoRmllbGQse2NvbW1vbjpmYWxzZSxkZWZhdWx0VmFsdWU6bnVsbCxlbnVtVmFsdWVzOm51bGwsZXhhbXBsZXM6W10sZ3JvdXBzOltdLG5hbWU6ImJ1ZmZlciIscGF0aDpudWxsLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ0YWJsZSIsdW5pdDpudWxsLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoMyIseyJpZCI6ImJ1ZmZlciJ9LGBidWZmZXJgKSxtZHgoInAiLG51bGwsYENvbmZpZ3VyZXMgdGhlIHNpbmsgc3BlY2lmaWMgYnVmZmVyIGJlaGF2aW9yLmApLG1keChGaWVsZHMse2ZpbHRlcnM6ZmFsc2UsbWR4VHlwZToiRmllbGRzIn0sbWR4KEZpZWxkLHtjb21tb246dHJ1ZSxkZWZhdWx0VmFsdWU6NTAwLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbNTAwXSxncm91cHM6W10sbmFtZToibWF4X2V2ZW50cyIscGF0aDoiYnVmZmVyIixyZWxldmFudFdoZW46eyJ0eXBlIjoibWVtb3J5In0scmVxdWlyZWQ6ZmFsc2UsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6InVpbnQiLHVuaXQ6ImV2ZW50cyIsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImg0Iix7ImlkIjoibWF4X2V2ZW50cy0xIn0sYG1heF9ldmVudHNgKSxtZHgoInAiLG51bGwsYFRoZSBtYXhpbXVtIG51bWJlciBvZiBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIvZG9jcy9hYm91dC9kYXRhLW1vZGVsLyJ9KSxgZXZlbnRzYCksYCBhbGxvd2VkIGluIHRoZSBidWZmZXIuClNlZSBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIjYnVmZmVycy0tYmF0Y2hlcyJ9KSxgQnVmZmVycyAmIEJhdGNoZXNgKSxgIGZvciBtb3JlIGluZm8uYCkpLG1keChGaWVsZCx7Y29tbW9uOmZhbHNlLGRlZmF1bHRWYWx1ZTpudWxsLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbMTA0OTAwMDAwXSxncm91cHM6W10sbmFtZToibWF4X3NpemUiLHBhdGg6ImJ1ZmZlciIscmVsZXZhbnRXaGVuOnsidHlwZSI6ImRpc2sifSxyZXF1aXJlZDp0cnVlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ1aW50Iix1bml0OiJieXRlcyIsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImg0Iix7ImlkIjoibWF4X3NpemUifSxgbWF4X3NpemVgKSxtZHgoInAiLG51bGwsYFRoZSBtYXhpbXVtIHNpemUgb2YgdGhlIGJ1ZmZlciBvbiB0aGUgZGlzay5gKSksbWR4KEZpZWxkLHtjb21tb246dHJ1ZSxkZWZhdWx0VmFsdWU6Im1lbW9yeSIsZW51bVZhbHVlczp7Im1lbW9yeSI6IlN0b3JlcyB0aGUgc2luaydzIGJ1ZmZlciBpbiBtZW1vcnkuIFRoaXMgaXMgbW9yZSBwZXJmb3JtYW50LCBidXQgbGVzcyBkdXJhYmxlLiBEYXRhIHdpbGwgYmUgbG9zdCBpZiBWZWN0b3IgaXMgcmVzdGFydGVkIGZvcmNlZnVsbHkuIiwiZGlzayI6IlN0b3JlcyB0aGUgc2luaydzIGJ1ZmZlciBvbiBkaXNrLiBUaGlzIGlzIGxlc3MgcGVyZm9ybWFudCwgYnV0IGR1cmFibGUuIERhdGEgd2lsbCBub3QgYmUgbG9zdCBiZXR3ZWVuIHJlc3RhcnRzLiJ9LGV4YW1wbGVzOlsibWVtb3J5IiwiZGlzayJdLGdyb3VwczpbXSxuYW1lOiJ0eXBlIixwYXRoOiJidWZmZXIiLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJzdHJpbmciLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDQiLHsiaWQiOiJ0eXBlIn0sYHR5cGVgKSxtZHgoInAiLG51bGwsYFRoZSBidWZmZXIncyB0eXBlIGFuZCBzdG9yYWdlIG1lY2hhbmlzbS5gKSksbWR4KEZpZWxkLHtjb21tb246ZmFsc2UsZGVmYXVsdFZhbHVlOiJibG9jayIsZW51bVZhbHVlczp7ImJsb2NrIjoiQXBwbGllcyBiYWNrIHByZXNzdXJlIHdoZW4gdGhlIGJ1ZmZlciBpcyBmdWxsLiBUaGlzIHByZXZlbnRzIGRhdGEgbG9zcywgYnV0IHdpbGwgY2F1c2UgZGF0YSB0byBwaWxlIHVwIG9uIHRoZSBlZGdlLiIsImRyb3BfbmV3ZXN0IjoiRHJvcHMgbmV3IGRhdGEgYXMgaXQncyByZWNlaXZlZC4gVGhpcyBkYXRhIGlzIGxvc3QuIFRoaXMgc2hvdWxkIGJlIHVzZWQgd2hlbiBwZXJmb3JtYW5jZSBpcyB0aGUgaGlnaGVzdCBwcmlvcml0eS4ifSxleGFtcGxlczpbImJsb2NrIiwiZHJvcF9uZXdlc3QiXSxncm91cHM6W10sbmFtZToid2hlbl9mdWxsIixwYXRoOiJidWZmZXIiLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJzdHJpbmciLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDQiLHsiaWQiOiJ3aGVuX2Z1bGwifSxgd2hlbl9mdWxsYCksbWR4KCJwIixudWxsLGBUaGUgYmVoYXZpb3Igd2hlbiB0aGUgYnVmZmVyIGJlY29tZXMgZnVsbC5gKSkpKSxtZHgoRmllbGQse2NvbW1vbjp0cnVlLGRlZmF1bHRWYWx1ZToibm9uZSIsZW51bVZhbHVlczp7Im5vbmUiOiJObyBjb21wcmVzc2lvbi4iLCJnemlwIjoiW0d6aXBdW3VybHMuZ3ppcF0gc3RhbmRhcmQgREVGTEFURSBjb21wcmVzc2lvbi4ifSxleGFtcGxlczpbIm5vbmUiLCJnemlwIl0sZ3JvdXBzOltdLG5hbWU6ImNvbXByZXNzaW9uIixwYXRoOm51bGwscmVsZXZhbnRXaGVuOm51bGwscmVxdWlyZWQ6ZmFsc2UsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6InN0cmluZyIsdW5pdDpudWxsLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoMyIseyJpZCI6ImNvbXByZXNzaW9uIn0sYGNvbXByZXNzaW9uYCksbWR4KCJwIixudWxsLGBUaGUgY29tcHJlc3Npb24gc3RyYXRlZ3kgdXNlZCB0byBjb21wcmVzcyB0aGUgZW5jb2RlZCBldmVudCBkYXRhIGJlZm9yZQp0cmFuc21pc3Npb24uYCkpLG1keChGaWVsZCx7Y29tbW9uOnRydWUsZGVmYXVsdFZhbHVlOm51bGwsZW51bVZhbHVlczpudWxsLGV4YW1wbGVzOltdLGdyb3VwczpbXSxuYW1lOiJlbmNvZGluZyIscGF0aDpudWxsLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ0YWJsZSIsdW5pdDpudWxsLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoMyIseyJpZCI6ImVuY29kaW5nIn0sYGVuY29kaW5nYCksbWR4KCJwIixudWxsLGBDb25maWd1cmVzIHRoZSBlbmNvZGluZyBzcGVjaWZpYyBzaW5rIGJlaGF2aW9yLmApLG1keChGaWVsZHMse2ZpbHRlcnM6ZmFsc2UsbWR4VHlwZToiRmllbGRzIn0sbWR4KEZpZWxkLHtjb21tb246dHJ1ZSxkZWZhdWx0VmFsdWU6Impzb24iLGVudW1WYWx1ZXM6eyJqc29uIjoiRWFjaCBldmVudCBpcyBlbmNvZGVkIGludG8gSlNPTiBhbmQgdGhlIHBheWxvYWQgaXMgcmVwcmVzZW50ZWQgYXMgYSBKU09OIGFycmF5LiIsInRleHQiOiJFYWNoIGV2ZW50IGlzIGVuY29kZWQgaW50byB0ZXh0IHZpYSB0aGUgYG1lc3NhZ2VgIGtleSBhbmQgdGhlIHBheWxvYWQgaXMgbmV3IGxpbmUgZGVsaW1pdGVkLiJ9LGV4YW1wbGVzOlsianNvbiIsInRleHQiXSxncm91cHM6W10sbmFtZToiY29kZWMiLHBhdGg6ImVuY29kaW5nIixyZWxldmFudFdoZW46bnVsbCxyZXF1aXJlZDpmYWxzZSx0ZW1wbGF0ZWFibGU6ZmFsc2UsdHlwZToic3RyaW5nIix1bml0Om51bGwsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImg0Iix7ImlkIjoiY29kZWMifSxgY29kZWNgKSxtZHgoInAiLG51bGwsYFRoZSBlbmNvZGluZyBjb2RlYyB1c2VkIHRvIHNlcmlhbGl6ZSB0aGUgZXZlbnRzIGJlZm9yZSBvdXRwdXR0aW5nLmApKSxtZHgoRmllbGQse2NvbW1vbjpmYWxzZSxkZWZhdWx0VmFsdWU6bnVsbCxlbnVtVmFsdWVzOm51bGwsZXhhbXBsZXM6W1sidGltZXN0YW1wIiwibWVzc2FnZSIsImhvc3QiXV0sZ3JvdXBzOltdLG5hbWU6ImV4Y2VwdF9maWVsZHMiLHBhdGg6ImVuY29kaW5nIixyZWxldmFudFdoZW46bnVsbCxyZXF1aXJlZDpmYWxzZSx0ZW1wbGF0ZWFibGU6ZmFsc2UsdHlwZToiW3N0cmluZ10iLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDQiLHsiaWQiOiJleGNlcHRfZmllbGRzIn0sYGV4Y2VwdF9maWVsZHNgKSxtZHgoInAiLG51bGwsYFByZXZlbnQgdGhlIHNpbmsgZnJvbSBlbmNvZGluZyB0aGUgc3BlY2lmaWVkIGxhYmVscy5gKSksbWR4KEZpZWxkLHtjb21tb246ZmFsc2UsZGVmYXVsdFZhbHVlOm51bGwsZW51bVZhbHVlczpudWxsLGV4YW1wbGVzOltbInRpbWVzdGFtcCIsIm1lc3NhZ2UiLCJob3N0Il1dLGdyb3VwczpbXSxuYW1lOiJvbmx5X2ZpZWxkcyIscGF0aDoiZW5jb2RpbmciLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJbc3RyaW5nXSIsdW5pdDpudWxsLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoNCIseyJpZCI6Im9ubHlfZmllbGRzIn0sYG9ubHlfZmllbGRzYCksbWR4KCJwIixudWxsLGBMaW1pdCB0aGUgc2luayB0byBvbmx5IGVuY29kaW5nIHRoZSBzcGVjaWZpZWQgbGFiZWxzLmApKSxtZHgoRmllbGQse2NvbW1vbjpmYWxzZSxkZWZhdWx0VmFsdWU6InJmYzMzMzkiLGVudW1WYWx1ZXM6eyJyZmMzMzM5IjoiRm9ybWF0IGFzIGFuIFJGQzMzMzkgc3RyaW5nIiwidW5peCI6IkZvcm1hdCBhcyBhIHVuaXggdGltZXN0YW1wLCBjYW4gYmUgcGFyc2VkIGFzIGEgQ2xpY2tob3VzZSBEYXRlVGltZSJ9LGV4YW1wbGVzOlsicmZjMzMzOSIsInVuaXgiXSxncm91cHM6W10sbmFtZToidGltZXN0YW1wX2Zvcm1hdCIscGF0aDoiZW5jb2RpbmciLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJzdHJpbmciLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDQiLHsiaWQiOiJ0aW1lc3RhbXBfZm9ybWF0In0sYHRpbWVzdGFtcF9mb3JtYXRgKSxtZHgoInAiLG51bGwsYEhvdyB0byBmb3JtYXQgZXZlbnQgdGltZXN0YW1wcy5gKSkpKSxtZHgoRmllbGQse2NvbW1vbjp0cnVlLGRlZmF1bHRWYWx1ZTp0cnVlLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbdHJ1ZSxmYWxzZV0sZ3JvdXBzOltdLG5hbWU6ImhlYWx0aGNoZWNrIixwYXRoOm51bGwscmVsZXZhbnRXaGVuOm51bGwscmVxdWlyZWQ6ZmFsc2UsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6ImJvb2wiLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDMiLHsiaWQiOiJoZWFsdGhjaGVjayJ9LGBoZWFsdGhjaGVja2ApLG1keCgicCIsbnVsbCxgRW5hYmxlcy9kaXNhYmxlcyB0aGUgc2luayBoZWFsdGhjaGVjayB1cG9uIHN0YXJ0LgpTZWUgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2hlYWx0aC1jaGVja3MifSksYEhlYWx0aCBDaGVja3NgKSxgIGZvciBtb3JlIGluZm8uYCkpLG1keChGaWVsZCx7Y29tbW9uOmZhbHNlLGRlZmF1bHRWYWx1ZToiaHR0cHM6Ly9jbG91ZC5odW1pby5jb20iLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbImh0dHA6Ly9teWh1bWlvaG9zdC5jb20iXSxncm91cHM6W10sbmFtZToiaG9zdCIscGF0aDpudWxsLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJzdHJpbmciLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDMiLHsiaWQiOiJob3N0In0sYGhvc3RgKSxtZHgoInAiLG51bGwsYFRoZSBvcHRpb25hbCBob3N0IHRvIHNlbmQgSHVtaW8gbG9ncyB0by5gKSksbWR4KEZpZWxkLHtjb21tb246ZmFsc2UsZGVmYXVsdFZhbHVlOm51bGwsZW51bVZhbHVlczpudWxsLGV4YW1wbGVzOltdLGdyb3VwczpbXSxuYW1lOiJyZXF1ZXN0IixwYXRoOm51bGwscmVsZXZhbnRXaGVuOm51bGwscmVxdWlyZWQ6ZmFsc2UsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6InRhYmxlIix1bml0Om51bGwsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImgzIix7ImlkIjoicmVxdWVzdCJ9LGByZXF1ZXN0YCksbWR4KCJwIixudWxsLGBDb25maWd1cmVzIHRoZSBzaW5rIHJlcXVlc3QgYmVoYXZpb3IuYCksbWR4KEZpZWxkcyx7ZmlsdGVyczpmYWxzZSxtZHhUeXBlOiJGaWVsZHMifSxtZHgoRmllbGQse2NvbW1vbjp0cnVlLGRlZmF1bHRWYWx1ZToxMCxlbnVtVmFsdWVzOm51bGwsZXhhbXBsZXM6WzEwXSxncm91cHM6W10sbmFtZToiaW5fZmxpZ2h0X2xpbWl0IixwYXRoOiJyZXF1ZXN0IixyZWxldmFudFdoZW46bnVsbCxyZXF1aXJlZDpmYWxzZSx0ZW1wbGF0ZWFibGU6ZmFsc2UsdHlwZToidWludCIsdW5pdDoicmVxdWVzdHMiLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoNCIseyJpZCI6ImluX2ZsaWdodF9saW1pdCJ9LGBpbl9mbGlnaHRfbGltaXRgKSxtZHgoInAiLG51bGwsYFRoZSBtYXhpbXVtIG51bWJlciBvZiBpbi1mbGlnaHQgcmVxdWVzdHMgYWxsb3dlZCBhdCBhbnkgZ2l2ZW4gdGltZS4KU2VlIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNyYXRlLWxpbWl0cyJ9KSxgUmF0ZSBMaW1pdHNgKSxgIGZvciBtb3JlIGluZm8uYCkpLG1keChGaWVsZCx7Y29tbW9uOnRydWUsZGVmYXVsdFZhbHVlOjEsZW51bVZhbHVlczpudWxsLGV4YW1wbGVzOlsxXSxncm91cHM6W10sbmFtZToicmF0ZV9saW1pdF9kdXJhdGlvbl9zZWNzIixwYXRoOiJyZXF1ZXN0IixyZWxldmFudFdoZW46bnVsbCxyZXF1aXJlZDpmYWxzZSx0ZW1wbGF0ZWFibGU6ZmFsc2UsdHlwZToidWludCIsdW5pdDoic2Vjb25kcyIsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImg0Iix7ImlkIjoicmF0ZV9saW1pdF9kdXJhdGlvbl9zZWNzIn0sYHJhdGVfbGltaXRfZHVyYXRpb25fc2Vjc2ApLG1keCgicCIsbnVsbCxgVGhlIHRpbWUgd2luZG93LCBpbiBzZWNvbmRzLCB1c2VkIGZvciB0aGUgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI3JhdGVfbGltaXRfbnVtIn0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSxgcmF0ZV9saW1pdF9udW1gKSksYCBvcHRpb24uClNlZSBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIjcmF0ZS1saW1pdHMifSksYFJhdGUgTGltaXRzYCksYCBmb3IgbW9yZSBpbmZvLmApKSxtZHgoRmllbGQse2NvbW1vbjp0cnVlLGRlZmF1bHRWYWx1ZToxMCxlbnVtVmFsdWVzOm51bGwsZXhhbXBsZXM6WzEwXSxncm91cHM6W10sbmFtZToicmF0ZV9saW1pdF9udW0iLHBhdGg6InJlcXVlc3QiLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ1aW50Iix1bml0Om51bGwsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImg0Iix7ImlkIjoicmF0ZV9saW1pdF9udW0ifSxgcmF0ZV9saW1pdF9udW1gKSxtZHgoInAiLG51bGwsYFRoZSBtYXhpbXVtIG51bWJlciBvZiByZXF1ZXN0cyBhbGxvd2VkIHdpdGhpbiB0aGUgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI3JhdGVfbGltaXRfZHVyYXRpb25fc2VjcyJ9KSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJhIn0sYHJhdGVfbGltaXRfZHVyYXRpb25fc2Vjc2ApKSxgCnRpbWUgd2luZG93LgpTZWUgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI3JhdGUtbGltaXRzIn0pLGBSYXRlIExpbWl0c2ApLGAgZm9yIG1vcmUgaW5mby5gKSksbWR4KEZpZWxkLHtjb21tb246ZmFsc2UsZGVmYXVsdFZhbHVlOjE4NDQ2NzQ0MDczNzA5NTUxNjE1LGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbMTg0NDY3NDQwNzM3MDk1NTE2MTVdLGdyb3VwczpbXSxuYW1lOiJyZXRyeV9hdHRlbXB0cyIscGF0aDoicmVxdWVzdCIscmVsZXZhbnRXaGVuOm51bGwscmVxdWlyZWQ6ZmFsc2UsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6InVpbnQiLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDQiLHsiaWQiOiJyZXRyeV9hdHRlbXB0cyJ9LGByZXRyeV9hdHRlbXB0c2ApLG1keCgicCIsbnVsbCxgVGhlIG1heGltdW0gbnVtYmVyIG9mIHJldHJpZXMgdG8gbWFrZSBmb3IgZmFpbGVkIHJlcXVlc3RzLiBUaGUgZGVmYXVsdCwgZm9yIGFsbAppbnRlbnRzIGFuZCBwdXJwb3NlcywgcmVwcmVzZW50cyBhbiBpbmZpbml0ZSBudW1iZXIgb2YgcmV0cmllcy4KU2VlIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNyZXRyeS1wb2xpY3kifSksYFJldHJ5IFBvbGljeWApLGAgZm9yIG1vcmUgaW5mby5gKSksbWR4KEZpZWxkLHtjb21tb246ZmFsc2UsZGVmYXVsdFZhbHVlOjEsZW51bVZhbHVlczpudWxsLGV4YW1wbGVzOlsxXSxncm91cHM6W10sbmFtZToicmV0cnlfaW5pdGlhbF9iYWNrb2ZmX3NlY3MiLHBhdGg6InJlcXVlc3QiLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ1aW50Iix1bml0OiJzZWNvbmRzIix3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDQiLHsiaWQiOiJyZXRyeV9pbml0aWFsX2JhY2tvZmZfc2VjcyJ9LGByZXRyeV9pbml0aWFsX2JhY2tvZmZfc2Vjc2ApLG1keCgicCIsbnVsbCxgVGhlIGFtb3VudCBvZiB0aW1lIHRvIHdhaXQgYmVmb3JlIGF0dGVtcHRpbmcgdGhlIGZpcnN0IHJldHJ5IGZvciBhIGZhaWxlZApyZXF1ZXN0LiBPbmNlLCB0aGUgZmlyc3QgcmV0cnkgaGFzIGZhaWxlZCB0aGUgZmlib25hY2NpIHNlcXVlbmNlIHdpbGwgYmUgdXNlZAp0byBzZWxlY3QgZnV0dXJlIGJhY2tvZmZzLmApKSxtZHgoRmllbGQse2NvbW1vbjpmYWxzZSxkZWZhdWx0VmFsdWU6MTAsZW51bVZhbHVlczpudWxsLGV4YW1wbGVzOlsxMF0sZ3JvdXBzOltdLG5hbWU6InJldHJ5X21heF9kdXJhdGlvbl9zZWNzIixwYXRoOiJyZXF1ZXN0IixyZWxldmFudFdoZW46bnVsbCxyZXF1aXJlZDpmYWxzZSx0ZW1wbGF0ZWFibGU6ZmFsc2UsdHlwZToidWludCIsdW5pdDoic2Vjb25kcyIsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImg0Iix7ImlkIjoicmV0cnlfbWF4X2R1cmF0aW9uX3NlY3MifSxgcmV0cnlfbWF4X2R1cmF0aW9uX3NlY3NgKSxtZHgoInAiLG51bGwsYFRoZSBtYXhpbXVtIGFtb3VudCBvZiB0aW1lLCBpbiBzZWNvbmRzLCB0byB3YWl0IGJldHdlZW4gcmV0cmllcy5gKSksbWR4KEZpZWxkLHtjb21tb246dHJ1ZSxkZWZhdWx0VmFsdWU6NjAsZW51bVZhbHVlczpudWxsLGV4YW1wbGVzOls2MF0sZ3JvdXBzOltdLG5hbWU6InRpbWVvdXRfc2VjcyIscGF0aDoicmVxdWVzdCIscmVsZXZhbnRXaGVuOm51bGwscmVxdWlyZWQ6ZmFsc2UsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6InVpbnQiLHVuaXQ6InNlY29uZHMiLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoNCIseyJpZCI6InRpbWVvdXRfc2Vjcy0xIn0sYHRpbWVvdXRfc2Vjc2ApLG1keCgicCIsbnVsbCxgVGhlIG1heGltdW0gdGltZSBhIHJlcXVlc3QgY2FuIHRha2UgYmVmb3JlIGJlaW5nIGFib3J0ZWQuIEl0IGlzIGhpZ2hseQpyZWNvbW1lbmRlZCB0aGF0IHlvdSBkbyBub3QgbG93ZXIgdmFsdWUgYmVsb3cgdGhlIHNlcnZpY2UncyBpbnRlcm5hbCB0aW1lb3V0LAphcyB0aGlzIGNvdWxkIGNyZWF0ZSBvcnBoYW5lZCByZXF1ZXN0cywgcGlsZSBvbiByZXRyaWVzLCBhbmQgcmVzdWx0IGluCmR1cGxpY2F0ZSBkYXRhIGRvd25zdHJlYW0uClNlZSBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIjYnVmZmVycy0tYmF0Y2hlcyJ9KSxgQnVmZmVycyAmIEJhdGNoZXNgKSxgIGZvciBtb3JlIGluZm8uYCkpKSksbWR4KEZpZWxkLHtjb21tb246dHJ1ZSxkZWZhdWx0VmFsdWU6bnVsbCxlbnVtVmFsdWVzOm51bGwsZXhhbXBsZXM6WyIke0hVTUlPX1RPS0VOfSIsIkE5NEE4RkU1Q0NCMTlCQTYxQzRDMDgiXSxncm91cHM6W10sbmFtZToidG9rZW4iLHBhdGg6bnVsbCxyZWxldmFudFdoZW46bnVsbCxyZXF1aXJlZDp0cnVlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJzdHJpbmciLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDMiLHsiaWQiOiJ0b2tlbiJ9LGB0b2tlbmApLG1keCgicCIsbnVsbCxgWW91ciBIdW1pbyBpbmdlc3Rpb24gdG9rZW4uYCkpKSxtZHgoImgyIix7ImlkIjoiaG93LWl0LXdvcmtzIn0sYEhvdyBJdCBXb3Jrc2ApLG1keCgiaDMiLHsiaWQiOiJidWZmZXJzLS1iYXRjaGVzIn0sYEJ1ZmZlcnMgJiBCYXRjaGVzYCksbWR4KFNWRyx7c3JjOiIvaW1nL2J1ZmZlcnMtYW5kLWJhdGNoZXMtc2VyaWFsLnN2ZyIsbWR4VHlwZToiU1ZHIn0pLG1keCgicCIsbnVsbCxgVGhlIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBodW1pb19sb2dzYCksYCBzaW5rIGJ1ZmZlcnMgJiBiYXRjaGVzIGRhdGEgYXMKc2hvd24gaW4gdGhlIGRpYWdyYW0gYWJvdmUuIFlvdSdsbCBub3RpY2UgdGhhdCBWZWN0b3IgdHJlYXRzIHRoZXNlIGNvbmNlcHRzCmRpZmZlcmVudGx5LCBpbnN0ZWFkIG9mIHRyZWF0aW5nIHRoZW0gYXMgZ2xvYmFsIGNvbmNlcHRzLCBWZWN0b3IgdHJlYXRzIHRoZW0KYXMgc2luayBzcGVjaWZpYyBjb25jZXB0cy4gVGhpcyBpc29sYXRlcyBzaW5rcywgZW5zdXJpbmcgc2VydmljZXMgZGlzcnVwdGlvbnMKYXJlIGNvbnRhaW5lZCBhbmQgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiL2RvY3MvYWJvdXQvZ3VhcmFudGVlcy8ifSksYGRlbGl2ZXJ5IGd1YXJhbnRlZXNgKSxgIGFyZSBob25vcmVkLmApLG1keCgicCIsbnVsbCxtZHgoImVtIix7cGFyZW50TmFtZToicCJ9LGBCYXRjaGVzYCksYCBhcmUgZmx1c2hlZCB3aGVuIDEgb2YgMiBjb25kaXRpb25zIGFyZSBtZXQ6YCksbWR4KCJvbCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxgVGhlIGJhdGNoIGFnZSBtZWV0cyBvciBleGNlZWRzIHRoZSBjb25maWd1cmVkIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiIjdGltZW91dF9zZWNzIn0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSxgdGltZW91dF9zZWNzYCkpLGAuYCksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYFRoZSBiYXRjaCBzaXplIG1lZXRzIG9yIGV4Y2VlZHMgdGhlIGNvbmZpZ3VyZWQgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6IiNtYXhfZXZlbnRzIn0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSxgbWF4X2V2ZW50c2ApKSxgLmApKSxtZHgoInAiLG51bGwsbWR4KCJlbSIse3BhcmVudE5hbWU6InAifSxgQnVmZmVyc2ApLGAgYXJlIGNvbnRyb2xsZWQgdmlhIHRoZSBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIjYnVmZmVyIn0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSxgYnVmZmVyLipgKSksYCBvcHRpb25zLmApLG1keCgiaDMiLHsiaWQiOiJlbnZpcm9ubWVudC12YXJpYWJsZXMifSxgRW52aXJvbm1lbnQgVmFyaWFibGVzYCksbWR4KCJwIixudWxsLGBFbnZpcm9ubWVudCB2YXJpYWJsZXMgYXJlIHN1cHBvcnRlZCB0aHJvdWdoIGFsbCBvZiBWZWN0b3IncyBjb25maWd1cmF0aW9uLgpTaW1wbHkgYWRkIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBcJHtNWV9FTlZfVkFSfWApLGAgaW4geW91ciBWZWN0b3IgY29uZmlndXJhdGlvbiBmaWxlIGFuZCB0aGUgdmFyaWFibGUKd2lsbCBiZSByZXBsYWNlZCBiZWZvcmUgYmVpbmcgZXZhbHVhdGVkLmApLG1keCgicCIsbnVsbCxgWW91IGNhbiBsZWFybiBtb3JlIGluIHRoZQpgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIvZG9jcy9zZXR1cC9jb25maWd1cmF0aW9uLyNlbnZpcm9ubWVudC12YXJpYWJsZXMifSksYEVudmlyb25tZW50IFZhcmlhYmxlc2ApLGAgc2VjdGlvbi5gKSxtZHgoImgzIix7ImlkIjoiaGVhbHRoLWNoZWNrcyJ9LGBIZWFsdGggQ2hlY2tzYCksbWR4KCJwIixudWxsLGBIZWFsdGggY2hlY2tzIGVuc3VyZSB0aGF0IHRoZSBkb3duc3RyZWFtIHNlcnZpY2UgaXMgYWNjZXNzaWJsZSBhbmQgcmVhZHkgdG8KYWNjZXB0IGRhdGEuIFRoaXMgY2hlY2sgaXMgcGVyZm9ybWVkIHVwb24gc2luayBpbml0aWFsaXphdGlvbi4KSWYgdGhlIGhlYWx0aCBjaGVjayBmYWlscyBhbiBlcnJvciB3aWxsIGJlIGxvZ2dlZCBhbmQgVmVjdG9yIHdpbGwgcHJvY2VlZCB0bwpzdGFydC5gKSxtZHgoImg0Iix7ImlkIjoicmVxdWlyZS1oZWFsdGgtY2hlY2tzIn0sYFJlcXVpcmUgSGVhbHRoIENoZWNrc2ApLG1keCgicCIsbnVsbCxgSWYgeW91J2QgbGlrZSB0byBleGl0IGltbWVkaWF0ZWx5IHVwb24gYSBoZWFsdGggY2hlY2sgZmFpbHVyZSwgeW91IGNhbgpwYXNzIHRoZSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgLS1yZXF1aXJlLWhlYWx0aHlgKSxgIGZsYWc6YCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1iYXNoIn0pLGB2ZWN0b3IgLS1jb25maWcgL2V0Yy92ZWN0b3IvdmVjdG9yLnRvbWwgLS1yZXF1aXJlLWhlYWx0aHkKYCkpLG1keCgiaDQiLHsiaWQiOiJkaXNhYmxlLWhlYWx0aC1jaGVja3MifSxgRGlzYWJsZSBIZWFsdGggQ2hlY2tzYCksbWR4KCJwIixudWxsLGBJZiB5b3UnZCBsaWtlIHRvIGRpc2FibGUgaGVhbHRoIGNoZWNrcyBmb3IgdGhpcyBzaW5rIHlvdSBjYW4gc2V0IHRoZQpgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgaGVhbHRoY2hlY2tgKSxgIG9wdGlvbiB0byBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgZmFsc2VgKSxgLmApLG1keCgiaDMiLHsiaWQiOiJvYnRhaW5pbmctYS1odW1pby1pbmdlc3Rpb24tdG9rZW4ifSxgT2J0YWluaW5nIGEgSHVtaW8gaW5nZXN0aW9uIHRva2VuYCksbWR4KCJvbCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxtZHgoInAiLHtwYXJlbnROYW1lOiJsaSJ9LGBSZWdpc3RlciBmb3IgYSBmcmVlIGFjY291bnQgYXQgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly93d3cuaHVtaW8uY29tL2dldHRpbmctc3RhcnRlZCJ9KSxgSHVtaW8uY29tYCkpKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxtZHgoInAiLHtwYXJlbnROYW1lOiJsaSJ9LGBHZXQgeW91ciBJbmdlc3QgdG9rZW4gZm9sbG93aW5nIHRoZXNlICBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiJodHRwczovL2RvY3MuaHVtaW8uY29tL2luZ2VzdGluZy1kYXRhL2luZ2VzdC10b2tlbnMvIn0pLGBkb2NzYCksYC5gKSkpLG1keCgiaDMiLHsiaWQiOiJyYXRlLWxpbWl0cyJ9LGBSYXRlIExpbWl0c2ApLG1keCgicCIsbnVsbCxgVmVjdG9yIG9mZmVycyBhIGZldyBsZXZlcnMgdG8gY29udHJvbCB0aGUgcmF0ZSBhbmQgdm9sdW1lIG9mIHJlcXVlc3RzIHRvIHRoZQpkb3duc3RyZWFtIHNlcnZpY2UuIFN0YXJ0IHdpdGggdGhlIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNyYXRlX2xpbWl0X2R1cmF0aW9uX3NlY3MifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LGByYXRlX2xpbWl0X2R1cmF0aW9uX3NlY3NgKSksYCBhbmQKYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYHJhdGVfbGltaXRfbnVtYCksYCBvcHRpb25zIHRvIGVuc3VyZSBWZWN0b3IgZG9lcyBub3QgZXhjZWVkIHRoZSBzcGVjaWZpZWQKbnVtYmVyIG9mIHJlcXVlc3RzIGluIHRoZSBzcGVjaWZpZWQgd2luZG93LiBZb3UgY2FuIGZ1cnRoZXIgY29udHJvbCB0aGUgcGFjZSBhdAp3aGljaCB0aGlzIHdpbmRvdyBpcyBzYXR1cmF0ZWQgd2l0aCB0aGUgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2luX2ZsaWdodF9saW1pdCJ9KSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJhIn0sYGluX2ZsaWdodF9saW1pdGApKSxgIG9wdGlvbiwgd2hpY2gKd2lsbCBndWFyYW50ZWUgbm8gbW9yZSB0aGFuIHRoZSBzcGVjaWZpZWQgbnVtYmVyIG9mIHJlcXVlc3RzIGFyZSBpbi1mbGlnaHQgYXQKYW55IGdpdmVuIHRpbWUuYCksbWR4KCJwIixudWxsLGBQbGVhc2Ugbm90ZSwgVmVjdG9yJ3MgZGVmYXVsdHMgYXJlIGNhcmVmdWxseSBjaG9zZW4gYW5kIGl0IHNob3VsZCBiZSByYXJlIHRoYXQKeW91IG5lZWQgdG8gYWRqdXN0IHRoZXNlLiBJZiB5b3UgZm91bmQgYSBnb29kIHJlYXNvbiB0byBkbyBzbyBwbGVhc2Ugc2hhcmUgaXQKd2l0aCB0aGUgVmVjdG9yIHRlYW0gYnkgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL3RpbWJlcmlvL3ZlY3Rvci9pc3N1ZXMvbmV3P2xhYmVscz1zaW5rJTNBK2h1bWlvX2xvZ3MifSksYG9wZW5pbmcgYW4gaXNzdWVgKSxgLmApLG1keCgiaDMiLHsiaWQiOiJyZXRyeS1wb2xpY3kifSxgUmV0cnkgUG9saWN5YCksbWR4KCJwIixudWxsLGBWZWN0b3Igd2lsbCByZXRyeSBmYWlsZWQgcmVxdWVzdHMgKHN0YXR1cyA9PSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgNDI5YCksYCwgPj0gYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYDUwMGApLGAsIGFuZCAhPSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgNTAxYCksYCkuCk90aGVyIHJlc3BvbnNlcyB3aWxsIGAsbWR4KCJlbSIse3BhcmVudE5hbWU6InAifSxgbm90YCksYCBiZSByZXRyaWVkLiBZb3UgY2FuIGNvbnRyb2wgdGhlIG51bWJlciBvZiByZXRyeQphdHRlbXB0cyBhbmQgYmFja29mZiByYXRlIHdpdGggdGhlIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNyZXRyeV9hdHRlbXB0cyJ9KSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJhIn0sYHJldHJ5X2F0dGVtcHRzYCkpLGAgYW5kCmAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGByZXRyeV9iYWNrb2ZmX3NlY3NgKSxgIG9wdGlvbnMuYCkpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},null]}