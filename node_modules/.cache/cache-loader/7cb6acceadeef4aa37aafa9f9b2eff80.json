{"remainingRequest":"/Users/Yun/vector/website/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/vector/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/vector/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/vector/website/docs/reference/transforms/tag_cardinality_limit.md","dependencies":[{"path":"/Users/Yun/vector/website/docs/reference/transforms/tag_cardinality_limit.md","mtime":1594780808419},{"path":"/Users/Yun/vector/website/.docusaurus/docusaurus-plugin-content-docs/site-docs-reference-transforms-tag-cardinality-limit-md-aeb.json","mtime":1594781223953},{"path":"/Users/Yun/vector/website/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/vector/website/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/vector/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/vector/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1588759133114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Yun/vector/website/docs/reference/transforms/tag_cardinality_limit.md"],"names":["React","mdx","frontMatter","last_modified_on","component_title","description","event_types","function_category","issues_url","operating_systems","sidebar_label","source_url","status","title","unsupported_operating_systems","metadata","Fields","Field","Tabs","TabItem","rightToc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tlast_modified_on: '2020-07-13',\n\tcomponent_title: 'Tag Cardinality Limit',\n\tdescription: 'The Vector `tag_cardinality_limit` transform accepts and outputs `metric` events, allowing you to limit the cardinality of metric tags to prevent downstream disruption of metrics services.',\n\tevent_types: [\n\t\t'metric'\n\t],\n\tfunction_category: 'filter',\n\tissues_url: 'https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22transform%3A+tag_cardinality_limit%22',\n\toperating_systems: [\n\t\t'Linux',\n\t\t'MacOS',\n\t\t'Windows'\n\t],\n\tsidebar_label: 'tag_cardinality_limit|[\"metric\"]',\n\tsource_url: 'https://github.com/timberio/vector/tree/master/src/transforms/tag_cardinality_limit.rs',\n\tstatus: 'beta',\n\ttitle: 'Tag Cardinality Limit Transform',\n\tunsupported_operating_systems: []\n};\nexport const metadata = {\n  \"id\": \"reference/transforms/tag_cardinality_limit\",\n  \"title\": \"Tag Cardinality Limit Transform\",\n  \"description\": \"The Vector `tag_cardinality_limit` transform accepts and outputs `metric` events, allowing you to limit the cardinality of metric tags to prevent downstream disruption of metrics services.\",\n  \"source\": \"@site/docs/reference/transforms/tag_cardinality_limit.md\",\n  \"permalink\": \"/docs/reference/transforms/tag_cardinality_limit\",\n  \"editUrl\": \"https://github.com/timberio/vector/edit/master/website/docs/reference/transforms/tag_cardinality_limit.md\",\n  \"sidebar_label\": \"tag_cardinality_limit|[\\\"metric\\\"]\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"Swimlanes Transform\",\n    \"permalink\": \"/docs/reference/transforms/swimlanes\"\n  },\n  \"next\": {\n    \"title\": \"Tokenizer Transform\",\n    \"permalink\": \"/docs/reference/transforms/tokenizer\"\n  }\n};\n  /* @jsx mdx */\nimport Fields from '@site/src/components/Fields';\nimport Field from '@site/src/components/Field';\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nexport const rightToc = [{\n  value: 'Configuration',\n  id: 'configuration',\n  children: [{\n    value: 'cache_size_per_tag',\n    id: 'cache_size_per_tag',\n    children: []\n  }, {\n    value: 'limit_exceeded_action',\n    id: 'limit_exceeded_action',\n    children: []\n  }, {\n    value: 'mode',\n    id: 'mode',\n    children: []\n  }, {\n    value: 'value_limit',\n    id: 'value_limit',\n    children: []\n  }]\n}, {\n  value: 'Examples',\n  id: 'examples',\n  children: []\n}, {\n  value: 'How It Works',\n  id: 'how-it-works',\n  children: [{\n    value: 'Complex Processing',\n    id: 'complex-processing',\n    children: []\n  }, {\n    value: 'Environment Variables',\n    id: 'environment-variables',\n    children: []\n  }, {\n    value: 'Intended Usage',\n    id: 'intended-usage',\n    children: []\n  }, {\n    value: 'Memory Utilization',\n    id: 'memory-utilization',\n    children: []\n  }, {\n    value: 'Restarts',\n    id: 'restarts',\n    children: []\n  }]\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`The Vector `}<inlineCode parentName=\"p\">{`tag_cardinality_limit`}</inlineCode>{` transform\naccepts and outputs `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/about/data-model/metric/\"\n      }}><inlineCode parentName=\"a\">{`metric`}</inlineCode></a>{` events, allowing you to\nlimit the cardinality of metric tags to prevent downstream disruption of\nmetrics services.`}</p>\n    {\n      /*\n          THIS FILE IS AUTOGENERATED!\n           To make changes please edit the template located at:\n           website/docs/reference/transforms/tag_cardinality_limit.md.erb\n      */\n    }\n    <h2 {...{\n      \"id\": \"configuration\"\n    }}>{`Configuration`}</h2>\n    <Tabs block={true} defaultValue=\"common\" values={[{\n      \"label\": \"Common\",\n      \"value\": \"common\"\n    }, {\n      \"label\": \"Advanced\",\n      \"value\": \"advanced\"\n    }]} mdxType=\"Tabs\">\n      <TabItem value=\"common\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"title=\\\"vector.toml\\\"\",\n            \"title\": \"\\\"vector.toml\\\"\"\n          }}>{`[transforms.my_transform_id]\n  type = \"tag_cardinality_limit\" # required\n  inputs = [\"my-source-or-transform-id\"] # required\n  limit_exceeded_action = \"drop_tag\" # optional, default\n  mode = \"exact\" # required\n  value_limit = 500 # optional, default\n`}</code></pre>\n      </TabItem>\n      <TabItem value=\"advanced\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"title=\\\"vector.toml\\\"\",\n            \"title\": \"\\\"vector.toml\\\"\"\n          }}>{`[transforms.my_transform_id]\n  type = \"tag_cardinality_limit\" # required\n  inputs = [\"my-source-or-transform-id\"] # required\n  cache_size_per_tag = 5120000 # optional, default, bytes, relevant when mode = \"probabilistic\"\n  limit_exceeded_action = \"drop_tag\" # optional, default\n  mode = \"exact\" # required\n  value_limit = 500 # optional, default\n`}</code></pre>\n      </TabItem>\n    </Tabs>\n    <Fields filters={true} mdxType=\"Fields\">\n      <Field common={false} defaultValue={5120000} enumValues={null} examples={[5120000]} groups={[]} name={\"cache_size_per_tag\"} path={null} relevantWhen={{\n        \"mode\": \"probabilistic\"\n      }} required={false} templateable={false} type={\"uint\"} unit={\"bytes\"} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"cache_size_per_tag\"\n        }}>{`cache_size_per_tag`}</h3>\n        <p>{`The size of the cache in bytes to use to detect duplicate tags. The bigger the\ncache the less likely it is to have a 'false positive' or a case where we allow\na new value for tag even after we have reached the configured limits.\nSee `}<a parentName=\"p\" {...{\n            \"href\": \"#memory-utilization\"\n          }}>{`Memory Utilization`}</a>{` for more info.`}</p>\n      </Field>\n      <Field common={true} defaultValue={\"drop_tag\"} enumValues={{\n        \"drop_tag\": \"Remove tags that would exceed the configured limit from the incoming metric\",\n        \"drop_event\": \"Drop any metric events that contain tags that would exceed the configured limit\"\n      }} examples={[\"drop_tag\", \"drop_event\"]} groups={[]} name={\"limit_exceeded_action\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"limit_exceeded_action\"\n        }}>{`limit_exceeded_action`}</h3>\n        <p>{`Controls what should happen when a metric comes in with a tag that would exceed\nthe configured limit on cardinality.`}</p>\n      </Field>\n      <Field common={true} defaultValue={null} enumValues={{\n        \"exact\": \"Has higher memory requirements than `probabilistic`, but never falsely outputs metrics with new tags after the limit has been hit.\",\n        \"probabilistic\": \"Has lower memory requirements than `exact`, but may occassionally allow metric events to pass through the transform even when they contain new tags that exceed the configured limit.  The rate at which this happens can be controlled by changing the value of [`cache_size_per_tag`](#cache_size_per_tag).\"\n      }} examples={[\"exact\", \"probabilistic\"]} groups={[]} name={\"mode\"} path={null} relevantWhen={null} required={true} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"mode\"\n        }}>{`mode`}</h3>\n        <p>{`Controls what approach is used internally to keep track of previously seen tags\nand deterime when a tag on an incoming metric exceeds the limit.`}</p>\n      </Field>\n      <Field common={true} defaultValue={500} enumValues={null} examples={[500]} groups={[]} name={\"value_limit\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"uint\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"value_limit\"\n        }}>{`value_limit`}</h3>\n        <p>{`How many distinct values to accept for any given key.\nSee `}<a parentName=\"p\" {...{\n            \"href\": \"#memory-utilization\"\n          }}>{`Memory Utilization`}</a>{` for more info.`}</p>\n      </Field>\n    </Fields>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <p>{`This example will demonstrate how metric tags are dropped if they exceed the\nconfigured `}<a parentName=\"p\" {...{\n        \"href\": \"#value_limit\"\n      }}><inlineCode parentName=\"a\">{`value_limit`}</inlineCode></a>{`.`}</p>\n    <p>{`For example, given this configuration:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-toml\",\n        \"metastring\": \"title=\\\"vector.toml\\\"\",\n        \"title\": \"\\\"vector.toml\\\"\"\n      }}>{`[transforms.cardinality_protection]\n  type = \"tag_cardinality_limit\"\n  inputs = [...]\n\n  fields.value_limit = 1\n  fields.limit_exceeded_action = \"drop_tag\"\n`}</code></pre>\n    <p>{`Vector will drop metric tags that exceed a cardinality of 1. Note, this limit is\nunrealistically low and used only for demontration purposes.`}</p>\n    <p>{`If we were to receive the first metric event:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n  \"name\": \"login.count\",\n  \"timestamp\": \"2019-11-01T21:15:47+00:00\",\n  \"kind\": \"absolute\",\n  \"tags\": {\n    \"host\": \"my.host.com\",\n    \"request_id\": \"f9ed4675f1c53513c61a3b3b4e25b4c0\"\n  },\n  \"counter\": {\n    \"value\": 10\n  }\n}\n`}</code></pre>\n    <p>{`It would pass through like normal; no tags would be removed. But if we were to\nrecieve a second metric event:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n  \"name\": \"login.count\",\n  \"timestamp\": \"2019-11-01T21:15:48+00:00\",\n  \"kind\": \"absolute\",\n  \"tags\": {\n    \"host\": \"my.host.com\",\n    \"request_id\": \"30f14c6c1fc85cba12bfd093aa8f90e3\"\n  },\n  \"counter\": {\n    \"value\": 4\n  }\n}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`request_id`}</inlineCode>{` tag would be removed:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n  \"name\": \"login.count\",\n  \"timestamp\": \"2019-11-01T21:15:48+00:00\",\n  \"kind\": \"absolute\",\n  \"tags\": {\n    \"host\": \"my.host.com\"\n  },\n  \"counter\": {\n    \"value\": 4\n  }\n}\n`}</code></pre>\n    <p>{`This is because the cardinality is 2 for this metric tag, exceeding the\nconfigured limit of 1. Note that the `}<inlineCode parentName=\"p\">{`host`}</inlineCode>{` tag was `}<em parentName=\"p\">{`not`}</em>{` removed, because\nit still has a cardinality of 1.`}</p>\n    <p>{`If you'd like to drop the entire event, just set `}<a parentName=\"p\" {...{\n        \"href\": \"#limit_exceeded_action\"\n      }}><inlineCode parentName=\"a\">{`limit_exceeded_action`}</inlineCode></a>{` to\n`}<inlineCode parentName=\"p\">{`\"drop_event\"`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"how-it-works\"\n    }}>{`How It Works`}</h2>\n    <h3 {...{\n      \"id\": \"complex-processing\"\n    }}>{`Complex Processing`}</h3>\n    <p>{`If you encounter limitations with the `}<inlineCode parentName=\"p\">{`tag_cardinality_limit`}</inlineCode>{`\ntransform then we recommend using a `}<a parentName=\"p\" {...{\n        \"href\": \"https://vector.dev/components/?functions%5B%5D=program\"\n      }}>{`runtime transform`}</a>{`.\nThese transforms are designed for complex processing and give you the power of\nfull programming runtime.`}</p>\n    <h3 {...{\n      \"id\": \"environment-variables\"\n    }}>{`Environment Variables`}</h3>\n    <p>{`Environment variables are supported through all of Vector's configuration.\nSimply add `}<inlineCode parentName=\"p\">{`\\${MY_ENV_VAR}`}</inlineCode>{` in your Vector configuration file and the variable\nwill be replaced before being evaluated.`}</p>\n    <p>{`You can learn more in the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/setup/configuration/#environment-variables\"\n      }}>{`Environment Variables`}</a>{` section.`}</p>\n    <h3 {...{\n      \"id\": \"intended-usage\"\n    }}>{`Intended Usage`}</h3>\n    <p>{`This transform is intended to be used as a protection mechanism to prevent\nupstream mistakes. Such as a developer accidentally adding a `}<inlineCode parentName=\"p\">{`request_id`}</inlineCode>{`\ntag. When this is happens, it is recommended to fix the upstream error as soon\nas possible. This is because Vector's cardinality cache is held in memory and it\nwill be erased when Vector is restarted. This will cause new tag values to pass\nthrough until the cardinality limit is reached again. For normal usage this\nshould not be a common problem since Vector processes are normally long-lived.`}</p>\n    <h3 {...{\n      \"id\": \"memory-utilization\"\n    }}>{`Memory Utilization`}</h3>\n    <p>{`This transform stores in memory a copy of the key for every tag on every metric\nevent seen by this transform.  In mode `}<inlineCode parentName=\"p\">{`exact`}</inlineCode>{`, a copy of every distinct\nvalue `}<em parentName=\"p\">{`for each key`}</em>{` is also kept in memory, until `}<a parentName=\"p\" {...{\n        \"href\": \"#value_limit\"\n      }}><inlineCode parentName=\"a\">{`value_limit`}</inlineCode></a>{` distinct values\nhave been seen for a given key, at which point new values for that key will be\nrejected.  So to estimate the memory usage of this transform in mode `}<inlineCode parentName=\"p\">{`exact`}</inlineCode>{`\nyou can use the following formula:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`(number of distinct field names in the tags for your metrics * average length of\nthe field names for the tags) + (number of distinct field names in the tags of\nyour metrics * [\\`value_limit\\`](#value_limit) * average length of the values of tags for your\nmetrics)\n`}</code></pre>\n    <p>{`In mode `}<inlineCode parentName=\"p\">{`probabilistic`}</inlineCode>{`, rather than storing all values seen for each key, each\ndistinct key has a bloom filter which can probabilistically determine whether\na given value has been seen for that key.  The formula for estimating memory\nusage in mode `}<inlineCode parentName=\"p\">{`probabilistic`}</inlineCode>{` is:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`(number of distinct field names in the tags for your metrics * average length of\nthe field names for the tags) + (number of distinct field names in the tags of\n-your metrics * [\\`cache_size_per_tag\\`](#cache_size_per_tag))\n`}</code></pre>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"#cache_size_per_tag\"\n      }}><inlineCode parentName=\"a\">{`cache_size_per_tag`}</inlineCode></a>{` option controls the size of the bloom filter used\nfor storing the set of acceptable values for any single key. The larger the\nbloom filter the lower the false positive rate, which in our case means the less\nlikely we are to allow a new tag value that would otherwise violate a\nconfigured limit. If you want to know the exact false positive rate for a given\n`}<inlineCode parentName=\"p\">{`cache_size_per_tag`}</inlineCode>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"#value_limit\"\n      }}><inlineCode parentName=\"a\">{`value_limit`}</inlineCode></a>{`, there are many free online bloom filter\ncalculators that can answer this. The formula is generally presented in terms of\n'n', 'p', 'k', and 'm' where 'n' is the number of items in the filter\n(`}<inlineCode parentName=\"p\">{`value_limit`}</inlineCode>{` in our case), 'p' is the probability of false positives (what we\nwant to solve for), 'k' is the number of hash functions used internally, and 'm'\nis the number of bits in the bloom filter. You should be able to provide values\nfor just 'n' and 'm' and get back the value for 'p' with an optimal 'k' selected\nfor you.   Remember when converting from `}<a parentName=\"p\" {...{\n        \"href\": \"#value_limit\"\n      }}><inlineCode parentName=\"a\">{`value_limit`}</inlineCode></a>{` to the 'm' value to plug\ninto the calculator that `}<a parentName=\"p\" {...{\n        \"href\": \"#value_limit\"\n      }}><inlineCode parentName=\"a\">{`value_limit`}</inlineCode></a>{` is in bytes, and 'm' is often presented\nin bits (1/8 of a byte).`}</p>\n    <h3 {...{\n      \"id\": \"restarts\"\n    }}>{`Restarts`}</h3>\n    <p>{`This transform's cache is held in memory, and therefore, restarting Vector\nwill reset the cache. This means that new values will be passed through until\nthe cardinality limit is reached again. See `}<a parentName=\"p\" {...{\n        \"href\": \"#intended-usage\"\n      }}>{`intended usage`}</a>{`\nfor more info.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}