{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--10-2!/Users/Yun/Desktop/vdocs/website/plugins/highlights/markdownLoader.js??ref--10-3!/Users/Yun/Desktop/vdocs/website/highlights/2020-03-04-encoding-only-fields-except-fields.md?truncated=true","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/highlights/2020-03-04-encoding-only-fields-except-fields.md","mtime":1594780808707},{"path":"/Users/Yun/Desktop/vdocs/website/.docusaurus/highlights/site-highlights-2020-03-04-encoding-only-fields-except-fields-md-492.json","mtime":1594985066027},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/Desktop/vdocs/website/plugins/highlights/markdownLoader.js","mtime":1594780808733}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL1l1bi9EZXNrdG9wL3Zkb2NzL3dlYnNpdGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXtsYXN0X21vZGlmaWVkX29uOicyMDIwLTA3LTEzJywkc2NoZW1hOicvLm1ldGEvLnNjaGVtYXMvaGlnaGxpZ2h0cy5qc29uJyx0aXRsZTonTmV3IEVuY29kaW5nIE9wdGlvbnMnLGRlc2NyaXB0aW9uOidWZWN0b3Igbm93IGxldHMgeW91IHdoaXRlbGlzdCwgYmxhY2tsaXN0LCBhbmQgZm9ybWF0IGZpZWxkcyB3aGVuIGV2ZW50cyBhcmUgZW5jb2RlZCcsYXV0aG9yX2dpdGh1YjonaHR0cHM6Ly9naXRodWIuY29tL2JpbmFyeWxvZ2ljJyxwcl9udW1iZXJzOlsxOTE1XSxyZWxlYXNlOicwLjkuMCcsaGlkZV9vbl9yZWxlYXNlX25vdGVzOmZhbHNlLHRhZ3M6Wyd0eXBlOiBlbmhhbmNlbWVudCcsJ2RvbWFpbjogc2lua3MnXX07ZXhwb3J0IGNvbnN0IG1ldGFkYXRhPXsiZGF0ZSI6IjIwMjAtMDMtMDRUMDA6MDA6MDAuMDAwWiIsImRlc2NyaXB0aW9uIjoiVmVjdG9yIG5vdyBsZXRzIHlvdSB3aGl0ZWxpc3QsIGJsYWNrbGlzdCwgYW5kIGZvcm1hdCBmaWVsZHMgd2hlbiBldmVudHMgYXJlIGVuY29kZWQiLCJwZXJtYWxpbmsiOiIvaGlnaGxpZ2h0cy8yMDIwLTAzLTA0LWVuY29kaW5nLW9ubHktZmllbGRzLWV4Y2VwdC1maWVsZHMiLCJyZWFkaW5nVGltZSI6IjEgbWluIHJlYWQiLCJzb3VyY2UiOiJAc2l0ZS9oaWdobGlnaHRzLzIwMjAtMDMtMDQtZW5jb2Rpbmctb25seS1maWVsZHMtZXhjZXB0LWZpZWxkcy5tZCIsInRhZ3MiOlt7ImxhYmVsIjoidHlwZTogZW5oYW5jZW1lbnQiLCJwZXJtYWxpbmsiOiIvaGlnaGxpZ2h0cy90YWdzL3R5cGUtZW5oYW5jZW1lbnQifSx7ImxhYmVsIjoiZG9tYWluOiBzaW5rcyIsInBlcm1hbGluayI6Ii9oaWdobGlnaHRzL3RhZ3MvZG9tYWluLXNpbmtzIn1dLCJ0aXRsZSI6Ik5ldyBFbmNvZGluZyBPcHRpb25zIiwidHJ1bmNhdGVkIjpmYWxzZSwicHJldkl0ZW0iOnsidGl0bGUiOiJXaGl0ZWxpc3QgJiBCbGFja2xpc3QgRmllbGRzIFdoZW4gRW5jb2RpbmciLCJwZXJtYWxpbmsiOiIvaGlnaGxpZ2h0cy8yMDIwLTAzLTA0LWVuY29kaW5nLXdoaXRlbGlzdC1ibGFja2xpc3QifSwibmV4dEl0ZW0iOnsidGl0bGUiOiJXZSd2ZSBBZGRlZCBBIFByaXZhY3kgUG9saWN5IiwicGVybWFsaW5rIjoiL2hpZ2hsaWdodHMvMjAyMC0wMy0wMy1wcml2YWN5LXBvbGljeSJ9fTsvKiBAanN4IG1keCAqL2V4cG9ydCBjb25zdCByaWdodFRvYz1be3ZhbHVlOidVcGdyYWRlIEd1aWRlJyxpZDondXBncmFkZS1ndWlkZScsY2hpbGRyZW46W119XTtjb25zdCBtYWtlU2hvcnRjb2RlPW5hbWU9PmZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O2NvbnN0IGxheW91dFByb3BzPXtyaWdodFRvY307Y29uc3QgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtjb21wb25lbnRzLC4uLnByb3BzfSl7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJwIixudWxsLGBWZWN0b3IgaGFzIGRlcHJlY2F0ZWQgdGhlIHJvb3QtbGV2ZWwgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYGVuY29kaW5nYCksYCBvcHRpb24gaW4gZmF2b3Igb2YgbmV3CmAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBlbmNvZGluZy4qYCksYCBzdWItb3B0aW9uczpgKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sYGVuY29kaW5nLm9ubHlfZmllbGRzYCksYCAtIEVuY29kZSBvbmx5IHRoZSBmaWVsZHMgbGlzdGVkLmApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sYGVuY29kaW5nLmV4Y2VwdF9maWVsZHNgKSxgIC0gRW5jb2RlIGFsbCBmaWVsZHMgZXhjZXB0IHRoZSBvbmVzIGxpc3RlZC5gKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJsaSJ9LGBlbmNvZGluZy5jb2RlY2ApLGAgLSBUaGUgY29kZWMgdG8gdXNlIChleDogYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJsaSJ9LGBqc29uYCksYCkuYCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSxgZW5jb2RpbmcudGltZXN0YW1wX2Zvcm1hdGApLGAgLSBDdXN0b21pemUgaG93IHRpbWVzdGFtcHMgYXJlIHNlcmlhbGl6ZWQuYCkpLG1keCgiaDIiLHsiaWQiOiJ1cGdyYWRlLWd1aWRlIn0sYFVwZ3JhZGUgR3VpZGVgKSxtZHgoInAiLG51bGwsYFVwZHJhZGluZyBpcyBlYXN5OmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtdG9tbCIsIm1ldGFzdHJpbmciOiJ0aXRsZT1cInZlY3Rvci50b21sXCIiLCJ0aXRsZSI6IlwidmVjdG9yLnRvbWxcIiJ9KSxgIFtzaW5rcy5teS1zaW5rXQogICB0eXBlID0gIi4uLiIKLSAgZW5jb2RpbmcgPSAianNvbiIKKyAgZW5jb2RpbmcuY29kZWMgPSAianNvbiIKKyAgZW5jb2RpbmcuZXhjZXB0X2ZpZWxkcyA9IFsiX21ldGEiXSAjIG9wdGlvbmFsCisgIGVuY29kaW5nLnRpbWVzdGFtcF9mb3JtYXQgPSAicmZjMzMzOSIgIyBvcHRpb25hbApgKSkpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/Yun/Desktop/vdocs/website/highlights/2020-03-04-encoding-only-fields-except-fields.md"],"names":["React","mdx","frontMatter","last_modified_on","$schema","title","description","author_github","pr_numbers","release","hide_on_release_notes","tags","metadata","rightToc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tlast_modified_on: '2020-07-13',\n\t$schema: '/.meta/.schemas/highlights.json',\n\ttitle: 'New Encoding Options',\n\tdescription: 'Vector now lets you whitelist, blacklist, and format fields when events are encoded',\n\tauthor_github: 'https://github.com/binarylogic',\n\tpr_numbers: [\n\t\t1915\n\t],\n\trelease: '0.9.0',\n\thide_on_release_notes: false,\n\ttags: [\n\t\t'type: enhancement',\n\t\t'domain: sinks'\n\t]\n};\nexport const metadata = {\n  \"date\": \"2020-03-04T00:00:00.000Z\",\n  \"description\": \"Vector now lets you whitelist, blacklist, and format fields when events are encoded\",\n  \"permalink\": \"/highlights/2020-03-04-encoding-only-fields-except-fields\",\n  \"readingTime\": \"1 min read\",\n  \"source\": \"@site/highlights/2020-03-04-encoding-only-fields-except-fields.md\",\n  \"tags\": [\n    {\n      \"label\": \"type: enhancement\",\n      \"permalink\": \"/highlights/tags/type-enhancement\"\n    },\n    {\n      \"label\": \"domain: sinks\",\n      \"permalink\": \"/highlights/tags/domain-sinks\"\n    }\n  ],\n  \"title\": \"New Encoding Options\",\n  \"truncated\": false,\n  \"prevItem\": {\n    \"title\": \"Whitelist & Blacklist Fields When Encoding\",\n    \"permalink\": \"/highlights/2020-03-04-encoding-whitelist-blacklist\"\n  },\n  \"nextItem\": {\n    \"title\": \"We've Added A Privacy Policy\",\n    \"permalink\": \"/highlights/2020-03-03-privacy-policy\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'Upgrade Guide',\n  id: 'upgrade-guide',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`Vector has deprecated the root-level `}<inlineCode parentName=\"p\">{`encoding`}</inlineCode>{` option in favor of new\n`}<inlineCode parentName=\"p\">{`encoding.*`}</inlineCode>{` sub-options:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`encoding.only_fields`}</inlineCode>{` - Encode only the fields listed.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`encoding.except_fields`}</inlineCode>{` - Encode all fields except the ones listed.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`encoding.codec`}</inlineCode>{` - The codec to use (ex: `}<inlineCode parentName=\"li\">{`json`}</inlineCode>{`).`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`encoding.timestamp_format`}</inlineCode>{` - Customize how timestamps are serialized.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"upgrade-guide\"\n    }}>{`Upgrade Guide`}</h2>\n    <p>{`Updrading is easy:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-toml\",\n        \"metastring\": \"title=\\\"vector.toml\\\"\",\n        \"title\": \"\\\"vector.toml\\\"\"\n      }}>{` [sinks.my-sink]\n   type = \"...\"\n-  encoding = \"json\"\n+  encoding.codec = \"json\"\n+  encoding.except_fields = [\"_meta\"] # optional\n+  encoding.timestamp_format = \"rfc3339\" # optional\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}