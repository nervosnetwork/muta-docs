{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/Desktop/vdocs/website/docs/reference/sources/file.md","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/docs/reference/sources/file.md","mtime":1594780808390},{"path":"/Users/Yun/Desktop/vdocs/website/.docusaurus/docusaurus-plugin-content-docs/site-docs-reference-sources-file-md-b85.json","mtime":1595086435138},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1588759133114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Yun/Desktop/vdocs/website/docs/reference/sources/file.md"],"names":["React","mdx","frontMatter","last_modified_on","delivery_guarantee","component_title","description","event_types","function_category","issues_url","operating_systems","sidebar_label","source_url","status","title","unsupported_operating_systems","metadata","Alert","Fields","Field","Tabs","TabItem","rightToc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tlast_modified_on: '2020-07-13',\n\tdelivery_guarantee: 'best_effort',\n\tcomponent_title: 'File',\n\tdescription: 'The Vector [`file`](#file) source ingests data through one or more local files and outputs `log` events.',\n\tevent_types: [\n\t\t'log'\n\t],\n\tfunction_category: 'collect',\n\tissues_url: 'https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22source%3A+file%22',\n\toperating_systems: [\n\t\t'Linux',\n\t\t'MacOS',\n\t\t'Windows'\n\t],\n\tsidebar_label: 'file|[\"log\"]',\n\tsource_url: 'https://github.com/timberio/vector/tree/master/src/sources/file',\n\tstatus: 'prod-ready',\n\ttitle: 'File Source',\n\tunsupported_operating_systems: []\n};\nexport const metadata = {\n  \"id\": \"reference/sources/file\",\n  \"title\": \"File Source\",\n  \"description\": \"The Vector [`file`](#file) source ingests data through one or more local files and outputs `log` events.\",\n  \"source\": \"@site/docs/reference/sources/file.md\",\n  \"permalink\": \"/docs/reference/sources/file\",\n  \"editUrl\": \"https://github.com/nervosnetwork/muta/edit/master/website/docs/reference/sources/file.md\",\n  \"sidebar_label\": \"file|[\\\"log\\\"]\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"Docker Source\",\n    \"permalink\": \"/docs/reference/sources/docker\"\n  },\n  \"next\": {\n    \"title\": \"Generator Source\",\n    \"permalink\": \"/docs/reference/sources/generator\"\n  }\n};\n  /* @jsx mdx */\nimport Alert from '@site/src/components/Alert';\nimport Fields from '@site/src/components/Fields';\nimport Field from '@site/src/components/Field';\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nexport const rightToc = [{\n  value: 'Requirements',\n  id: 'requirements',\n  children: []\n}, {\n  value: 'Configuration',\n  id: 'configuration',\n  children: [{\n    value: 'data_dir',\n    id: 'data_dir',\n    children: []\n  }, {\n    value: 'exclude',\n    id: 'exclude',\n    children: []\n  }, {\n    value: 'file_key',\n    id: 'file_key',\n    children: []\n  }, {\n    value: 'fingerprinting',\n    id: 'fingerprinting',\n    children: []\n  }, {\n    value: 'glob_minimum_cooldown',\n    id: 'glob_minimum_cooldown',\n    children: []\n  }, {\n    value: 'host_key',\n    id: 'host_key',\n    children: []\n  }, {\n    value: 'ignore_older',\n    id: 'ignore_older',\n    children: []\n  }, {\n    value: 'include',\n    id: 'include',\n    children: []\n  }, {\n    value: 'max_line_bytes',\n    id: 'max_line_bytes',\n    children: []\n  }, {\n    value: 'max_read_bytes',\n    id: 'max_read_bytes',\n    children: []\n  }, {\n    value: 'multiline',\n    id: 'multiline',\n    children: []\n  }, {\n    value: 'oldest_first',\n    id: 'oldest_first',\n    children: []\n  }, {\n    value: 'remove_after',\n    id: 'remove_after',\n    children: []\n  }, {\n    value: 'start_at_beginning',\n    id: 'start_at_beginning',\n    children: []\n  }]\n}, {\n  value: 'Fields',\n  id: 'fields',\n  children: [{\n    value: 'file',\n    id: 'file',\n    children: []\n  }, {\n    value: 'host',\n    id: 'host',\n    children: []\n  }, {\n    value: 'message',\n    id: 'message',\n    children: []\n  }, {\n    value: 'timestamp',\n    id: 'timestamp',\n    children: []\n  }]\n}, {\n  value: 'How It Works',\n  id: 'how-it-works',\n  children: [{\n    value: 'Auto Discovery',\n    id: 'auto-discovery',\n    children: []\n  }, {\n    value: 'Checkpointing',\n    id: 'checkpointing',\n    children: []\n  }, {\n    value: 'Compressed Files',\n    id: 'compressed-files',\n    children: []\n  }, {\n    value: 'Context',\n    id: 'context',\n    children: []\n  }, {\n    value: 'Environment Variables',\n    id: 'environment-variables',\n    children: []\n  }, {\n    value: 'File Deletion',\n    id: 'file-deletion',\n    children: []\n  }, {\n    value: 'File Read Order',\n    id: 'file-read-order',\n    children: []\n  }, {\n    value: 'File Rotation',\n    id: 'file-rotation',\n    children: []\n  }, {\n    value: 'Fingerprinting',\n    id: 'fingerprinting-1',\n    children: []\n  }, {\n    value: 'Globbing',\n    id: 'globbing',\n    children: []\n  }, {\n    value: 'Line Delimiters',\n    id: 'line-delimiters',\n    children: []\n  }, {\n    value: 'Multi-Line Messages',\n    id: 'multi-line-messages',\n    children: []\n  }, {\n    value: 'Read Position',\n    id: 'read-position',\n    children: []\n  }]\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`The Vector `}<a parentName=\"p\" {...{\n        \"href\": \"#file\"\n      }}><inlineCode parentName=\"a\">{`file`}</inlineCode></a>{` source\ningests data through one or more local files and outputs\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/about/data-model/log/\"\n      }}><inlineCode parentName=\"a\">{`log`}</inlineCode></a>{` events.`}</p>\n    {\n      /*\n          THIS FILE IS AUTOGENERATED!\n           To make changes please edit the template located at:\n           website/docs/reference/sources/file.md.erb\n      */\n    }\n    <h2 {...{\n      \"id\": \"requirements\"\n    }}>{`Requirements`}</h2>\n    <Alert icon={false} type=\"danger\" className=\"list--icons list--icons--warnings\" mdxType=\"Alert\">\n      <ul>\n        <li parentName=\"ul\">{`This component must be provided access to the configured file system.`}</li>\n      </ul>\n    </Alert>\n    <h2 {...{\n      \"id\": \"configuration\"\n    }}>{`Configuration`}</h2>\n    <Tabs block={true} defaultValue=\"common\" values={[{\n      \"label\": \"Common\",\n      \"value\": \"common\"\n    }, {\n      \"label\": \"Advanced\",\n      \"value\": \"advanced\"\n    }]} mdxType=\"Tabs\">\n      <TabItem value=\"common\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"title=\\\"vector.toml\\\"\",\n            \"title\": \"\\\"vector.toml\\\"\"\n          }}>{`[sources.my_source_id]\n  # General\n  type = \"file\" # required\n  ignore_older = 86400 # optional, no default, seconds\n  include = [\"/var/log/nginx/*.log\"] # required\n  start_at_beginning = false # optional, default\n\n  # Priority\n  oldest_first = false # optional, default\n`}</code></pre>\n      </TabItem>\n      <TabItem value=\"advanced\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"title=\\\"vector.toml\\\"\",\n            \"title\": \"\\\"vector.toml\\\"\"\n          }}>{`[sources.my_source_id]\n  # General\n  type = \"file\" # required\n  data_dir = \"/var/lib/vector\" # optional, no default\n  exclude = [\"/var/log/nginx/*.[0-9]*.log\"] # optional, no default\n  glob_minimum_cooldown = 1000 # optional, default, milliseconds\n  ignore_older = 86400 # optional, no default, seconds\n  include = [\"/var/log/nginx/*.log\"] # required\n  max_line_bytes = 102400 # optional, default, bytes\n  remove_after = 0 # optional, no default, seconds\n  start_at_beginning = false # optional, default\n\n  # Context\n  file_key = \"file\" # optional, default\n  host_key = \"host\" # optional, default\n\n  # Fingerprinting\n  fingerprinting.fingerprint_bytes = 256 # optional, default, bytes, relevant when strategy = \"checksum\"\n  fingerprinting.ignored_header_bytes = 0 # optional, default, bytes, relevant when strategy = \"checksum\"\n  fingerprinting.strategy = \"checksum\" # optional, default\n\n  # Multiline\n  multiline.condition_pattern = \"^[\\\\\\\\s]+\" # required\n  multiline.mode = \"continue_through\" # required\n  multiline.start_pattern = \"^[^\\\\\\\\s]\" # required\n  multiline.timeout_ms = 1000 # required, milliseconds\n\n  # Priority\n  max_read_bytes = 2048 # optional, default, bytes\n  oldest_first = false # optional, default\n`}</code></pre>\n      </TabItem>\n    </Tabs>\n    <Fields filters={true} mdxType=\"Fields\">\n      <Field common={false} defaultValue={null} enumValues={null} examples={[\"/var/lib/vector\"]} groups={[]} name={\"data_dir\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"data_dir\"\n        }}>{`data_dir`}</h3>\n        <p>{`The directory used to persist file checkpoint positions. By default, the\n`}<a parentName=\"p\" {...{\n            \"href\": \"/docs/reference/global-options/#data_dir\"\n          }}>{`global [`}<inlineCode parentName=\"a\">{`data_dir`}</inlineCode>{`](#data_dir) option`}</a>{` is used. Please make\nsure the Vector project has write permissions to this dir.\nSee `}<a parentName=\"p\" {...{\n            \"href\": \"#checkpointing\"\n          }}>{`Checkpointing`}</a>{` for more info.`}</p>\n      </Field>\n      <Field common={false} defaultValue={null} enumValues={null} examples={[[\"/var/log/nginx/*.[0-9]*.log\"]]} groups={[]} name={\"exclude\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"[string]\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"exclude\"\n        }}>{`exclude`}</h3>\n        <p>{`Array of file patterns to exclude. `}<a parentName=\"p\" {...{\n            \"href\": \"#globbing\"\n          }}>{`Globbing`}</a>{` is supported.`}<em parentName=\"p\">{`Takes\nprecedence over the `}<a parentName=\"em\" {...{\n              \"href\": \"#include\"\n            }}><inlineCode parentName=\"a\">{`include`}</inlineCode>{` option`}</a>{`.`}</em></p>\n      </Field>\n      <Field common={false} defaultValue={\"file\"} enumValues={null} examples={[\"file\"]} groups={[]} name={\"file_key\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"file_key\"\n        }}>{`file_key`}</h3>\n        <p>{`The key name added to each event with the full path of the file.\nSee `}<a parentName=\"p\" {...{\n            \"href\": \"#context\"\n          }}>{`Context`}</a>{` for more info.`}</p>\n      </Field>\n      <Field common={false} defaultValue={null} enumValues={null} examples={[]} groups={[]} name={\"fingerprinting\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"table\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"fingerprinting\"\n        }}>{`fingerprinting`}</h3>\n        <p>{`Configuration for how the file source should identify files.`}</p>\n        <Fields filters={false} mdxType=\"Fields\">\n          <Field common={false} defaultValue={256} enumValues={null} examples={[256]} groups={[]} name={\"fingerprint_bytes\"} path={\"fingerprinting\"} relevantWhen={{\n            \"strategy\": \"checksum\"\n          }} required={false} templateable={false} type={\"uint\"} unit={\"bytes\"} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"fingerprint_bytes\"\n            }}>{`fingerprint_bytes`}</h4>\n            <p>{`The number of bytes read off the head of the file to generate a unique\nfingerprint.\nSee `}<a parentName=\"p\" {...{\n                \"href\": \"#fingerprinting\"\n              }}>{`Fingerprinting`}</a>{` for more info.`}</p>\n          </Field>\n          <Field common={false} defaultValue={0} enumValues={null} examples={[0]} groups={[]} name={\"ignored_header_bytes\"} path={\"fingerprinting\"} relevantWhen={{\n            \"strategy\": \"checksum\"\n          }} required={false} templateable={false} type={\"uint\"} unit={\"bytes\"} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"ignored_header_bytes\"\n            }}>{`ignored_header_bytes`}</h4>\n            <p>{`The number of bytes to skip ahead (or ignore) when generating a unique\nfingerprint. This is helpful if all files share a common header.\nSee `}<a parentName=\"p\" {...{\n                \"href\": \"#fingerprinting\"\n              }}>{`Fingerprinting`}</a>{` for more info.`}</p>\n          </Field>\n          <Field common={false} defaultValue={\"checksum\"} enumValues={{\n            \"checksum\": \"Read [`fingerprint_bytes`](#fingerprint_bytes) bytes from the head of the file to uniquely identify files via a checksum.\",\n            \"device_and_inode\": \"Uses the [device and inode][urls.inode] to unique identify files.\"\n          }} examples={[\"checksum\", \"device_and_inode\"]} groups={[]} name={\"strategy\"} path={\"fingerprinting\"} relevantWhen={null} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"strategy\"\n            }}>{`strategy`}</h4>\n            <p>{`The strategy used to uniquely identify files. This is important for\n`}<a parentName=\"p\" {...{\n                \"href\": \"#checkpointing\"\n              }}>{`checkpointing`}</a>{` when file rotation is used.`}</p>\n          </Field>\n        </Fields>\n      </Field>\n      <Field common={false} defaultValue={1000} enumValues={null} examples={[1000]} groups={[]} name={\"glob_minimum_cooldown\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"uint\"} unit={\"milliseconds\"} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"glob_minimum_cooldown\"\n        }}>{`glob_minimum_cooldown`}</h3>\n        <p>{`Delay between file discovery calls. This controls the interval at which Vector\nsearches for files.\nSee `}<a parentName=\"p\" {...{\n            \"href\": \"#auto-discovery\"\n          }}>{`Auto Discovery`}</a>{` and `}<a parentName=\"p\" {...{\n            \"href\": \"#globbing\"\n          }}>{`Globbing`}</a>{` for more info.`}</p>\n      </Field>\n      <Field common={false} defaultValue={\"host\"} enumValues={null} examples={[\"host\"]} groups={[]} name={\"host_key\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"host_key\"\n        }}>{`host_key`}</h3>\n        <p>{`The key name added to each event representing the current host. This can also\nbe globally set via the `}<a parentName=\"p\" {...{\n            \"href\": \"/docs/reference/global-options/#host_key\"\n          }}>{`global [`}<inlineCode parentName=\"a\">{`host_key`}</inlineCode>{`](#host_key)\noption`}</a>{`.\nSee `}<a parentName=\"p\" {...{\n            \"href\": \"#context\"\n          }}>{`Context`}</a>{` for more info.`}</p>\n      </Field>\n      <Field common={true} defaultValue={null} enumValues={null} examples={[86400]} groups={[]} name={\"ignore_older\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"uint\"} unit={\"seconds\"} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"ignore_older\"\n        }}>{`ignore_older`}</h3>\n        <p>{`Ignore files with a data modification date that does not exceed this age.`}</p>\n      </Field>\n      <Field common={true} defaultValue={null} enumValues={null} examples={[[\"/var/log/nginx/*.log\"]]} groups={[]} name={\"include\"} path={null} relevantWhen={null} required={true} templateable={false} type={\"[string]\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"include\"\n        }}>{`include`}</h3>\n        <p>{`Array of file patterns to include. `}<a parentName=\"p\" {...{\n            \"href\": \"#globbing\"\n          }}>{`Globbing`}</a>{` is supported.\nSee `}<a parentName=\"p\" {...{\n            \"href\": \"#file-read-order\"\n          }}>{`File Read Order`}</a>{` and `}<a parentName=\"p\" {...{\n            \"href\": \"#file-rotation\"\n          }}>{`File Rotation`}</a>{` for more info.`}</p>\n      </Field>\n      <Field common={false} defaultValue={102400} enumValues={null} examples={[102400]} groups={[]} name={\"max_line_bytes\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"uint\"} unit={\"bytes\"} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"max_line_bytes\"\n        }}>{`max_line_bytes`}</h3>\n        <p>{`The maximum number of a bytes a line can contain before being discarded. This\nprotects against malformed lines or tailing incorrect files.`}</p>\n      </Field>\n      <Field common={false} defaultValue={2048} enumValues={null} examples={[2048]} groups={[]} name={\"max_read_bytes\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"uint\"} unit={\"bytes\"} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"max_read_bytes\"\n        }}>{`max_read_bytes`}</h3>\n        <p>{`An approximate limit on the amount of data read from a single file at a given\ntime.`}</p>\n      </Field>\n      <Field common={false} defaultValue={null} enumValues={null} examples={[]} groups={[]} name={\"multiline\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"table\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"multiline\"\n        }}>{`multiline`}</h3>\n        <p>{`Multiline parsing configuration (per file).\nIf not speicified, multiline parsing is disabled.\nSee `}<a parentName=\"p\" {...{\n            \"href\": \"#multi-line-messages\"\n          }}>{`Multi-Line Messages`}</a>{` for more info.`}</p>\n        <Fields filters={false} mdxType=\"Fields\">\n          <Field common={true} defaultValue={null} enumValues={null} examples={[\"^[\\\\s]+\", \"\\\\\\\\$\", \"^(INFO|ERROR) \", \";$\"]} groups={[]} name={\"condition_pattern\"} path={\"multiline\"} relevantWhen={null} required={true} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"condition_pattern\"\n            }}>{`condition_pattern`}</h4>\n            <p>{`Condition regex pattern to look for. Exact behavior is configured via `}<a parentName=\"p\" {...{\n                \"href\": \"#mode\"\n              }}><inlineCode parentName=\"a\">{`mode`}</inlineCode></a>{`.\nSee `}<a parentName=\"p\" {...{\n                \"href\": \"#multi-line-messages\"\n              }}>{`Multi-Line Messages`}</a>{` for more info.`}</p>\n          </Field>\n          <Field common={true} defaultValue={null} enumValues={{\n            \"continue_through\": \"All consecutive lines matching this pattern are included in the group. The first line (the line that matched the start pattern) does not need to match the `ContinueThrough` pattern. This is useful in cases such as a Java stack trace, where some indicator in the line (such as leading whitespace) indicates that it is an extension of the preceeding line.\",\n            \"continue_past\": \"All consecutive lines matching this pattern, plus one additional line, are included in the group. This is useful in cases where a log message ends with a continuation marker, such as a backslash, indicating that the following line is part of the same message.\",\n            \"halt_before\": \"All consecutive lines not matching this pattern are included in the group. This is useful where a log line contains a marker indicating that it begins a new message.\",\n            \"halt_with\": \"All consecutive lines, up to and including the first line matching this pattern, are included in the group. This is useful where a log line ends with a termination marker, such as a semicolon.\"\n          }} examples={[\"continue_through\", \"continue_past\", \"halt_before\", \"halt_with\"]} groups={[]} name={\"mode\"} path={\"multiline\"} relevantWhen={null} required={true} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"mode\"\n            }}>{`mode`}</h4>\n            <p>{`Mode of operation, specifies how the `}<a parentName=\"p\" {...{\n                \"href\": \"#condition_pattern\"\n              }}><inlineCode parentName=\"a\">{`condition_pattern`}</inlineCode></a>{` is interpreted.\nSee `}<a parentName=\"p\" {...{\n                \"href\": \"#multi-line-messages\"\n              }}>{`Multi-Line Messages`}</a>{` for more info.`}</p>\n          </Field>\n          <Field common={true} defaultValue={null} enumValues={null} examples={[\"^[^\\\\s]\", \"\\\\\\\\$\", \"^(INFO|ERROR) \", \"[^;]$\"]} groups={[]} name={\"start_pattern\"} path={\"multiline\"} relevantWhen={null} required={true} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"start_pattern\"\n            }}>{`start_pattern`}</h4>\n            <p>{`Start regex pattern to look for as a beginning of the message.\nSee `}<a parentName=\"p\" {...{\n                \"href\": \"#multi-line-messages\"\n              }}>{`Multi-Line Messages`}</a>{` for more info.`}</p>\n          </Field>\n          <Field common={true} defaultValue={null} enumValues={null} examples={[1000, 600000]} groups={[]} name={\"timeout_ms\"} path={\"multiline\"} relevantWhen={null} required={true} templateable={false} type={\"uint\"} unit={\"milliseconds\"} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"timeout_ms\"\n            }}>{`timeout_ms`}</h4>\n            <p>{`The maximum time to wait for the continuation. Once this timeout is reached,\nthe buffered message is guaraneed to be flushed, even if incomplete.`}</p>\n          </Field>\n        </Fields>\n      </Field>\n      <Field common={true} defaultValue={false} enumValues={null} examples={[false, true]} groups={[]} name={\"oldest_first\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"bool\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"oldest_first\"\n        }}>{`oldest_first`}</h3>\n        <p>{`Instead of balancing read capacity fairly across all watched files, prioritize\ndraining the oldest files before moving on to read data from younger files.\nSee `}<a parentName=\"p\" {...{\n            \"href\": \"#file-read-order\"\n          }}>{`File Read Order`}</a>{` for more info.`}</p>\n      </Field>\n      <Field common={false} defaultValue={null} enumValues={null} examples={[0, 5, 60]} groups={[]} name={\"remove_after\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"uint\"} unit={\"seconds\"} warnings={[{\n        \"visibility_level\": \"option\",\n        \"text\": \"Vector's process must have permission to delete files.\",\n        \"option_name\": \"remove_after\"\n      }]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"remove_after\"\n        }}>{`remove_after`}</h3>\n        <p>{`Timeout from reaching `}<inlineCode parentName=\"p\">{`eof`}</inlineCode>{` after which file will be removed from filesystem,\nunless new data is written in the meantime. If not specified, files will not be\nremoved.`}</p>\n      </Field>\n      <Field common={true} defaultValue={false} enumValues={null} examples={[false, true]} groups={[]} name={\"start_at_beginning\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"bool\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"start_at_beginning\"\n        }}>{`start_at_beginning`}</h3>\n        <p>{`For files with a stored checkpoint at startup, setting this option to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`\nwill tell Vector to read from the beginning of the file instead of the stored\ncheckpoint.\nSee `}<a parentName=\"p\" {...{\n            \"href\": \"#read-position\"\n          }}>{`Read Position`}</a>{` for more info.`}</p>\n      </Field>\n    </Fields>\n    <h2 {...{\n      \"id\": \"fields\"\n    }}>{`Fields`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"metastring\": \"title=\\\"example log event\\\"\",\n        \"title\": \"\\\"example\",\n        \"log\": true,\n        \"event\\\"\": true\n      }}>{`{\n  // ...\n  \"file\": \"/var/log/nginx.log\",\n  \"host\": \"my.host.com\",\n  \"message\": \"Started GET / for 127.0.0.1 at 2012-03-10 14:28:14 +0100\",\n  \"timestamp\": \"2019-11-01T21:15:47+00:00\"\n  // ...\n}\n`}</code></pre>\n    <Fields filters={true} mdxType=\"Fields\">\n      <Field common={true} defaultValue={null} enumValues={null} examples={[\"/var/log/nginx.log\"]} groups={[]} name={\"file\"} path={null} relevantWhen={null} required={true} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"file\"\n        }}>{`file`}</h3>\n        <p>{`The `}<em parentName=\"p\">{`full`}</em>{` path of the file tha the log originated from. This can be renamed\nvia the `}<a parentName=\"p\" {...{\n            \"href\": \"#file_key\"\n          }}><inlineCode parentName=\"a\">{`file_key`}</inlineCode></a>{` option.\nSee `}<a parentName=\"p\" {...{\n            \"href\": \"#checkpointing\"\n          }}>{`Checkpointing`}</a>{` and `}<a parentName=\"p\" {...{\n            \"href\": \"#context\"\n          }}>{`Context`}</a>{` for more info.`}</p>\n      </Field>\n      <Field common={true} defaultValue={null} enumValues={null} examples={[\"my.host.com\"]} groups={[]} name={\"host\"} path={null} relevantWhen={null} required={true} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"host\"\n        }}>{`host`}</h3>\n        <p>{`The current hostname, equivalent to the `}<inlineCode parentName=\"p\">{`gethostname`}</inlineCode>{` command. This can be\nrenamed via the `}<a parentName=\"p\" {...{\n            \"href\": \"#host_key\"\n          }}><inlineCode parentName=\"a\">{`host_key`}</inlineCode></a>{` option.`}</p>\n      </Field>\n      <Field common={true} defaultValue={null} enumValues={null} examples={[\"Started GET / for 127.0.0.1 at 2012-03-10 14:28:14 +0100\"]} groups={[]} name={\"message\"} path={null} relevantWhen={null} required={true} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"message\"\n        }}>{`message`}</h3>\n        <p>{`The raw log message, unaltered. This can be renamed via the `}<a parentName=\"p\" {...{\n            \"href\": \"/docs/reference/global-options/#message_key\"\n          }}>{`global\n`}<inlineCode parentName=\"a\">{`message_key`}</inlineCode>{` option`}</a>{`.`}</p>\n      </Field>\n      <Field common={true} defaultValue={null} enumValues={null} examples={[\"2019-11-01T21:15:47+00:00\"]} groups={[]} name={\"timestamp\"} path={null} relevantWhen={null} required={true} templateable={false} type={\"timestamp\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"timestamp\"\n        }}>{`timestamp`}</h3>\n        <p>{`The exact time the event was ingested. This can be renamed via the `}<a parentName=\"p\" {...{\n            \"href\": \"/docs/reference/global-options/#timestamp_key\"\n          }}>{`global\n`}<inlineCode parentName=\"a\">{`timestamp_key`}</inlineCode>{` option`}</a>{`.`}</p>\n      </Field>\n    </Fields>\n    <h2 {...{\n      \"id\": \"how-it-works\"\n    }}>{`How It Works`}</h2>\n    <h3 {...{\n      \"id\": \"auto-discovery\"\n    }}>{`Auto Discovery`}</h3>\n    <p>{`Vector will continually look for new files matching any of your include\npatterns. The frequency is controlled via the `}<a parentName=\"p\" {...{\n        \"href\": \"#glob_minimum_cooldown\"\n      }}><inlineCode parentName=\"a\">{`glob_minimum_cooldown`}</inlineCode></a>{` option.\nIf a new file is added that matches any of the supplied patterns, Vector will\nbegin tailing it. Vector maintains a unique list of files and will not tail a\nfile more than once, even if it matches multiple patterns. You can read more\nabout how we identify files in the `}<a parentName=\"p\" {...{\n        \"href\": \"#file-identification\"\n      }}>{`Identification`}</a>{`\nsection.`}</p>\n    <h3 {...{\n      \"id\": \"checkpointing\"\n    }}>{`Checkpointing`}</h3>\n    <p>{`Vector checkpoints the current read position in the file after each successful\nread. This ensures that Vector resumes where it left off if restarted,\npreventing data from being read twice. The checkpoint positions are stored in\nthe data directory which is specified via the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/reference/global-options/#data_dir\"\n      }}>{`global [`}<inlineCode parentName=\"a\">{`data_dir`}</inlineCode>{`](#data_dir) option`}</a>{` but can be\noverridden via the `}<a parentName=\"p\" {...{\n        \"href\": \"#data_dir\"\n      }}><inlineCode parentName=\"a\">{`data_dir`}</inlineCode></a>{` option in the `}<a parentName=\"p\" {...{\n        \"href\": \"#file\"\n      }}><inlineCode parentName=\"a\">{`file`}</inlineCode></a>{` source directly.`}</p>\n    <h3 {...{\n      \"id\": \"compressed-files\"\n    }}>{`Compressed Files`}</h3>\n    <p>{`Vector will transparently detect files which have been compressed using `}<inlineCode parentName=\"p\">{`gzip`}</inlineCode>{`\nand decompress them for reading. This detection process looks for the unique\nsequence of bytes in the `}<inlineCode parentName=\"p\">{`gzip`}</inlineCode>{` header and does not rely on the compressed files\nadhering to any kind of naming convention.`}</p>\n    <p>{`One caveat with reading compressed files is that Vector is not able to\nefficiently seek into them. Rather than implement a potentially-expensive full\nscan as a seek mechanism, Vector currently will not attempt to make further\nreads from a file for which it has already stored a checkpoint in a previous\nrun. For this reason, users should take care to allow Vector to fully process\nany compressed files before shutting the process down or moving the files to\nanother location on disk.`}</p>\n    <h3 {...{\n      \"id\": \"context\"\n    }}>{`Context`}</h3>\n    <p>{`By default, the `}<a parentName=\"p\" {...{\n        \"href\": \"#file\"\n      }}><inlineCode parentName=\"a\">{`file`}</inlineCode></a>{` source will add context\nkeys to your events via the `}<a parentName=\"p\" {...{\n        \"href\": \"#file_key\"\n      }}><inlineCode parentName=\"a\">{`file_key`}</inlineCode></a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"#host_key\"\n      }}><inlineCode parentName=\"a\">{`host_key`}</inlineCode></a>{`\noptions.`}</p>\n    <h3 {...{\n      \"id\": \"environment-variables\"\n    }}>{`Environment Variables`}</h3>\n    <p>{`Environment variables are supported through all of Vector's configuration.\nSimply add `}<inlineCode parentName=\"p\">{`\\${MY_ENV_VAR}`}</inlineCode>{` in your Vector configuration file and the variable\nwill be replaced before being evaluated.`}</p>\n    <p>{`You can learn more in the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/setup/configuration/#environment-variables\"\n      }}>{`Environment Variables`}</a>{` section.`}</p>\n    <h3 {...{\n      \"id\": \"file-deletion\"\n    }}>{`File Deletion`}</h3>\n    <p>{`When a watched file is deleted, Vector will maintain its open file handle and\ncontinue reading until it reaches `}<inlineCode parentName=\"p\">{`EOF`}</inlineCode>{`. When a file is no longer findable in\nthe `}<inlineCode parentName=\"p\">{`includes`}</inlineCode>{` glob and the reader has reached EOF, that file's reader is\ndiscarded.`}</p>\n    <h3 {...{\n      \"id\": \"file-read-order\"\n    }}>{`File Read Order`}</h3>\n    <p>{`By default, Vector attempts to allocate its read bandwidth fairly across all of\nthe files it's currently watching. This prevents a single very busy file from\nstarving other independent files from being read. In certain situations,\nhowever, this can lead to interleaved reads from files that should be read one\nafter the other.`}</p>\n    <p>{`For example, consider a service that logs to timestamped file, creating\na new one at an interval and leaving the old one as-is. Under normal operation,\nVector would follow writes as they happen to each file and there would be no\ninterleaving. In an overload situation, however, Vector may pick up and begin\ntailing newer files before catching up to the latest writes from older files.\nThis would cause writes from a single logical log stream to be interleaved in\ntime and potentially slow down ingestion as a whole, since the fixed total read\nbandwidth is allocated across an increasing number of files.`}</p>\n    <p>{`To address this type of situation, Vector provides the `}<a parentName=\"p\" {...{\n        \"href\": \"#oldest_first\"\n      }}><inlineCode parentName=\"a\">{`oldest_first`}</inlineCode></a>{` flag. When\nset, Vector will not read from any file younger than the oldest file that it\nhasn't yet caught up to. In other words, Vector will continue reading from older\nfiles as long as there is more data to read. Only once it hits the end will it\nthen move on to read from younger files.`}</p>\n    <p>{`Whether or not to use the `}<a parentName=\"p\" {...{\n        \"href\": \"#oldest_first\"\n      }}><inlineCode parentName=\"a\">{`oldest_first`}</inlineCode></a>{` flag depends on the organization of the\nlogs you're configuring Vector to tail. If your `}<a parentName=\"p\" {...{\n        \"href\": \"#include\"\n      }}><inlineCode parentName=\"a\">{`include`}</inlineCode></a>{` glob contains multiple\nindependent logical log streams (e.g. nginx's `}<inlineCode parentName=\"p\">{`access.log`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`error.log`}</inlineCode>{`, or\nlogs from multiple services), you are likely better off with the default\nbehavior. If you're dealing with a single logical log stream or if you value\nper-stream ordering over fairness across streams, consider setting\n`}<inlineCode parentName=\"p\">{`oldest_first`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"file-rotation\"\n    }}>{`File Rotation`}</h3>\n    <p>{`Vector supports tailing across a number of file rotation strategies. The default\nbehavior of `}<inlineCode parentName=\"p\">{`logrotate`}</inlineCode>{` is simply to move the old log file and create a new one.\nThis requires no special configuration of Vector, as it will maintain its open\nfile handle to the rotated log until it has finished reading and it will find\nthe newly created file normally.`}</p>\n    <p>{`A popular alternative strategy is `}<inlineCode parentName=\"p\">{`copytruncate`}</inlineCode>{`, in which `}<inlineCode parentName=\"p\">{`logrotate`}</inlineCode>{` will copy\nthe old log file to a new location before truncating the original. Vector will\nalso handle this well out of the box, but there are a couple configuration options\nthat will help reduce the very small chance of missed data in some edge cases.\nWe recommend a combination of `}<inlineCode parentName=\"p\">{`delaycompress`}</inlineCode>{` (if applicable) on the logrotate\nside and including the first rotated file in Vector's `}<a parentName=\"p\" {...{\n        \"href\": \"#include\"\n      }}><inlineCode parentName=\"a\">{`include`}</inlineCode></a>{` option. This\nallows Vector to find the file after rotation, read it uncompressed to identify\nit, and then ensure it has all of the data, including any written in a gap\nbetween Vector's last read and the actual rotation event.`}</p>\n    <h3 {...{\n      \"id\": \"fingerprinting-1\"\n    }}>{`Fingerprinting`}</h3>\n    <p>{`By default, Vector identifies files by creating a `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Cyclic_redundancy_check\"\n      }}>{`cyclic redundancy check\n(CRC)`}</a>{` on the first 256 bytes of the file. This serves as a\nfingerprint to uniquely identify the file. The amount of bytes read can be\ncontrolled via the `}<a parentName=\"p\" {...{\n        \"href\": \"#fingerprint_bytes\"\n      }}><inlineCode parentName=\"a\">{`fingerprint_bytes`}</inlineCode></a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"#ignored_header_bytes\"\n      }}><inlineCode parentName=\"a\">{`ignored_header_bytes`}</inlineCode></a>{` options.`}</p>\n    <p>{`This strategy avoids the common pitfalls of using device and inode names since\ninode names can be reused across files. This enables Vector to `}<a parentName=\"p\" {...{\n        \"href\": \"/#correctness\"\n      }}>{`properly tail\nfiles across various rotation strategies`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"globbing\"\n    }}>{`Globbing`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Glob_(programming)\"\n      }}>{`Globbing`}</a>{` is supported in all provided file paths, files will\nbe `}<a parentName=\"p\" {...{\n        \"href\": \"#auto-discovery\"\n      }}>{`autodiscovered`}</a>{` continually at a rate defined by the\n`}<inlineCode parentName=\"p\">{`glob_minimum_cooldown`}</inlineCode>{` option.`}</p>\n    <h3 {...{\n      \"id\": \"line-delimiters\"\n    }}>{`Line Delimiters`}</h3>\n    <p>{`Each line is read until a new line delimiter (the `}<inlineCode parentName=\"p\">{`0xA`}</inlineCode>{` byte) or `}<inlineCode parentName=\"p\">{`EOF`}</inlineCode>{` is found.`}</p>\n    <h3 {...{\n      \"id\": \"multi-line-messages\"\n    }}>{`Multi-Line Messages`}</h3>\n    <p>{`Sometimes a single log event will appear as multiple log lines. To handle this,\nVector provides a set of `}<a parentName=\"p\" {...{\n        \"href\": \"#multiline\"\n      }}><inlineCode parentName=\"a\">{`multiline`}</inlineCode></a>{` options. These options were carefully\nthought through and will allow you to solve the simplest and most complex\ncases. Let's look at a few examples:`}</p>\n    <h4 {...{\n      \"id\": \"example-1-ruby-exceptions\"\n    }}>{`Example 1: Ruby Exceptions`}</h4>\n    <p>{`Ruby exceptions, when logged, consist of multiple lines:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`foobar.rb:6:in \\`/': divided by 0 (ZeroDivisionError)\n  from foobar.rb:6:in \\`bar'\n  from foobar.rb:2:in \\`foo'\n  from foobar.rb:9:in \\`<main>'\n`}</code></pre>\n    <p>{`To consume these lines as a single event, use the following Vector configuration:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-toml\"\n      }}>{`[sources.my_file_source]\n  type = \"file\"\n  # ...\n\n  [sources.my_file_source.multiline]\n    start_pattern = \"^[^\\\\\\\\s]\"\n    mode = \"continue_through\"\n    condition_pattern = \"^[\\\\\\\\s]+from\"\n    timeout_ms = 1000\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#start_pattern\"\n        }}><inlineCode parentName=\"a\">{`start_pattern`}</inlineCode></a>{`, set to `}<inlineCode parentName=\"li\">{`^[^\\\\\\\\s]`}</inlineCode>{`, tells Vector that new multi-line events\nshould `}<em parentName=\"li\">{`not`}</em>{` start  with white-space.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#mode\"\n        }}><inlineCode parentName=\"a\">{`mode`}</inlineCode></a>{`, set to `}<inlineCode parentName=\"li\">{`continue_through`}</inlineCode>{`, tells Vector continue aggregating lines\nuntil the `}<a parentName=\"li\" {...{\n          \"href\": \"#condition_pattern\"\n        }}><inlineCode parentName=\"a\">{`condition_pattern`}</inlineCode></a>{` is no longer valid (excluding the invalid line).`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#condition_pattern\"\n        }}><inlineCode parentName=\"a\">{`condition_pattern`}</inlineCode></a>{`, set to `}<inlineCode parentName=\"li\">{`^[\\\\\\\\s]+from`}</inlineCode>{`, tells Vector to continue\naggregating lines if they start with white-space followed by `}<inlineCode parentName=\"li\">{`from`}</inlineCode>{`.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"example-2-line-continuations\"\n    }}>{`Example 2: Line Continuations`}</h4>\n    <p>{`Some programming languages use the backslash (`}<inlineCode parentName=\"p\">{`\\\\`}</inlineCode>{`) character to signal that a\nline will continue on the next line:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`First line\\\\\nsecond line\\\\\nthird line\n`}</code></pre>\n    <p>{`To consume these lines as a single event, use the following Vector configuration:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-toml\"\n      }}>{`[sources.my_file_source]\n  type = \"file\"\n  # ...\n\n  [sources.my_file_source.multiline]\n    start_pattern = \"\\\\\\\\$\"\n    mode = \"continue_past\"\n    condition_pattern = \"\\\\\\\\$\"\n    timeout_ms = 1000\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#start_pattern\"\n        }}><inlineCode parentName=\"a\">{`start_pattern`}</inlineCode></a>{`, set to `}<inlineCode parentName=\"li\">{`\\\\\\\\$`}</inlineCode>{`, tells Vector that new multi-line events\nstart with lines that end in `}<inlineCode parentName=\"li\">{`\\\\`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#mode\"\n        }}><inlineCode parentName=\"a\">{`mode`}</inlineCode></a>{`, set to `}<inlineCode parentName=\"li\">{`continue_past`}</inlineCode>{`, tells Vector continue aggregating lines, plus\none additional line, until `}<a parentName=\"li\" {...{\n          \"href\": \"#condition_pattern\"\n        }}><inlineCode parentName=\"a\">{`condition_pattern`}</inlineCode></a>{` is false.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#condition_pattern\"\n        }}><inlineCode parentName=\"a\">{`condition_pattern`}</inlineCode></a>{`, set to `}<inlineCode parentName=\"li\">{`\\\\\\\\$`}</inlineCode>{`, tells Vector to continue aggregating lines\nif they `}<em parentName=\"li\">{`end`}</em>{` with a `}<inlineCode parentName=\"li\">{`\\\\`}</inlineCode>{` character.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"example-3-timestamps\"\n    }}>{`Example 3: Timestamps`}</h4>\n    <p>{`Activity logs from services such as Elasticsearch typically begin with a\ntimestamp, followed by information on the specific activity, as in this example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`[2015-08-24 11:49:14,389][ INFO ][env                      ] [Letha] using [1] data paths, mounts [[/\n(/dev/disk1)]], net usable_space [34.5gb], net total_space [118.9gb], types [hfs]\n`}</code></pre>\n    <p>{`To consume these lines as a single event, use the following Vector configuration:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-toml\"\n      }}>{`[sources.my_file_source]\n  type = \"file\"\n  # ...\n\n  [sources.my_file_source.multiline]\n    start_pattern = \"^\\\\[[0-9]{4}-[0-9]{2}-[0-9]{2}\"\n    mode = \"halt_before\"\n    condition_pattern = \"^\\\\[[0-9]{4}-[0-9]{2}-[0-9]{2}\"\n    timeout_ms = 1000\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#start_pattern\"\n        }}><inlineCode parentName=\"a\">{`start_pattern`}</inlineCode></a>{`, set to `}<inlineCode parentName=\"li\">{`^\\\\[[0-9]{4}-[0-9]{2}-[0-9]{2}`}</inlineCode>{`, tells Vector that\nnew multi-line events start with a timestamp sequence.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#mode\"\n        }}><inlineCode parentName=\"a\">{`mode`}</inlineCode></a>{`, set to `}<inlineCode parentName=\"li\">{`halt_before`}</inlineCode>{`, tells Vector to continue aggregating lines as\nlong as the `}<a parentName=\"li\" {...{\n          \"href\": \"#condition_pattern\"\n        }}><inlineCode parentName=\"a\">{`condition_pattern`}</inlineCode></a>{` does not match.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#condition_pattern\"\n        }}><inlineCode parentName=\"a\">{`condition_pattern`}</inlineCode></a>{`, set to `}<inlineCode parentName=\"li\">{`^\\\\[[0-9]{4}-[0-9]{2}-[0-9]{2}`}</inlineCode>{`, tells Vector to\ncontinue aggregating up until a line starts with a timestamp sequence.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"read-position\"\n    }}>{`Read Position`}</h3>\n    <p>{`By default, Vector will read new data only for newly discovered files, similar\nto the `}<inlineCode parentName=\"p\">{`tail`}</inlineCode>{` command. You can read from the beginning of the file by setting\nthe `}<a parentName=\"p\" {...{\n        \"href\": \"#start_at_beginning\"\n      }}><inlineCode parentName=\"a\">{`start_at_beginning`}</inlineCode></a>{` option to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`.`}</p>\n    <p>{`Previously discovered files will be `}<a parentName=\"p\" {...{\n        \"href\": \"#checkpointing\"\n      }}>{`checkpointed`}</a>{`, and the\nread position will resume from the last checkpoint.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}