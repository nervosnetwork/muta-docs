{"remainingRequest":"/Users/Yun/vector/website/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/Yun/vector/website/src/theme/CodeBlock/index.js","dependencies":[{"path":"/Users/Yun/vector/website/src/theme/CodeBlock/index.js","mtime":1594780808792},{"path":"/Users/Yun/vector/website/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/vector/website/node_modules/babel-loader/lib/index.js","mtime":1588759098876}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL1l1bi92ZWN0b3Ivd2Vic2l0ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IFJlYWN0LHt1c2VFZmZlY3QsdXNlU3RhdGUsdXNlUmVmfWZyb20ncmVhY3QnO2ltcG9ydCBDbGlwYm9hcmQgZnJvbSdjbGlwYm9hcmQnO2ltcG9ydCBIaWdobGlnaHQse2RlZmF1bHRQcm9wc31mcm9tJ3ByaXNtLXJlYWN0LXJlbmRlcmVyJztpbXBvcnQgUHJpc20gZnJvbSdwcmlzbS1yZWFjdC1yZW5kZXJlci9wcmlzbSc7aW1wb3J0IGNsYXNzbmFtZXMgZnJvbSdjbGFzc25hbWVzJztpbXBvcnQgZGVmYXVsdFRoZW1lIGZyb20ncHJpc20tcmVhY3QtcmVuZGVyZXIvdGhlbWVzL3BhbGVuaWdodCc7aW1wb3J0IHJhbmdlUGFyc2VyIGZyb20ncGFyc2UtbnVtZXJpYy1yYW5nZSc7aW1wb3J0IHVzZURvY3VzYXVydXNDb250ZXh0IGZyb20nQGRvY3VzYXVydXMvdXNlRG9jdXNhdXJ1c0NvbnRleHQnO2ltcG9ydCB1c2VUaGVtZUNvbnRleHQgZnJvbSdAdGhlbWUvaG9va3MvdXNlVGhlbWVDb250ZXh0JztpbXBvcnQgc3R5bGVzIGZyb20nLi9zdHlsZXMubW9kdWxlLmNzcyc7KHR5cGVvZiBnbG9iYWwhPT0ndW5kZWZpbmVkJz9nbG9iYWw6d2luZG93KS5QcmlzbT1QcmlzbTtyZXF1aXJlKCdwcmlzbWpzL2NvbXBvbmVudHMvcHJpc20taHR0cCcpO3JlcXVpcmUoJ3ByaXNtanMvY29tcG9uZW50cy9wcmlzbS1sdWEnKTtyZXF1aXJlKCdwcmlzbWpzL2NvbXBvbmVudHMvcHJpc20tcG93ZXJzaGVsbCcpO3JlcXVpcmUoJ3ByaXNtanMvY29tcG9uZW50cy9wcmlzbS1wcm90b2J1ZicpO3JlcXVpcmUoJ3ByaXNtanMvY29tcG9uZW50cy9wcmlzbS1ydXN0Jyk7cmVxdWlyZSgncHJpc21qcy9jb21wb25lbnRzL3ByaXNtLXRvbWwnKTtjb25zdCBoaWdobGlnaHRMaW5lc1JhbmdlUmVnZXg9L3soW1xkLC1dKyl9Lztjb25zdCBjb2RlQmxvY2tUaXRsZVJlZ2V4PS90aXRsZT0iLioiLztleHBvcnQgZGVmYXVsdCgoe2NoaWxkcmVuLGNsYXNzTmFtZTpsYW5ndWFnZUNsYXNzTmFtZSxtZXRhc3RyaW5nfSk9Pntjb25zdHtzaXRlQ29uZmlnOnt0aGVtZUNvbmZpZzp7cHJpc209e319fX09dXNlRG9jdXNhdXJ1c0NvbnRleHQoKTtjb25zdFtzaG93Q29waWVkLHNldFNob3dDb3BpZWRdPXVzZVN0YXRlKGZhbHNlKTtjb25zdFttb3VudGVkLHNldE1vdW50ZWRdPXVzZVN0YXRlKGZhbHNlKTsvLyBUaGUgUHJpc20gdGhlbWUgb24gU1NSIGlzIGFsd2F5cyB0aGUgZGVmYXVsdCB0aGVtZSBidXQgdGhlIHNpdGUgdGhlbWUKLy8gY2FuIGJlIGluIGEgZGlmZmVyZW50IG1vZGUuIFJlYWN0IGh5ZHJhdGlvbiBkb2Vzbid0IHVwZGF0ZSBET00gc3R5bGVzCi8vIHRoYXQgY29tZSBmcm9tIFNTUi4gSGVuY2UgZm9yY2UgYSByZS1yZW5kZXIgYWZ0ZXIgbW91bnRpbmcgdG8gYXBwbHkgdGhlCi8vIGN1cnJlbnQgcmVsZXZhbnQgc3R5bGVzLiBUaGVyZSB3aWxsIGJlIGEgZmxhc2ggc2VlbiBvZiB0aGUgb3JpZ2luYWwKLy8gc3R5bGVzIHNlZW4gdXNpbmcgdGhpcyBjdXJyZW50IGFwcHJvYWNoIGJ1dCB0aGF0J3MgcHJvYmFibHkgb2suIEZpeGluZwovLyB0aGUgZmxhc2ggd2lsbCByZXF1aXJlIGNoYW5naW5nIHRoZSB0aGVtaW5nIGFwcHJvYWNoIGFuZCBpcyBub3Qgd29ydGggaXQKLy8gYXQgdGhpcyBwb2ludC4KdXNlRWZmZWN0KCgpPT57c2V0TW91bnRlZCh0cnVlKTt9LFtdKTtjb25zdCB0YXJnZXQ9dXNlUmVmKG51bGwpO2NvbnN0IGJ1dHRvbj11c2VSZWYobnVsbCk7bGV0IGhpZ2hsaWdodExpbmVzPVtdO2xldCBjb2RlQmxvY2tUaXRsZT0nJztjb25zdHtpc0RhcmtUaGVtZX09dXNlVGhlbWVDb250ZXh0KCk7Y29uc3QgbGlnaHRNb2RlVGhlbWU9cHJpc20udGhlbWV8fGRlZmF1bHRUaGVtZTtjb25zdCBkYXJrTW9kZVRoZW1lPXByaXNtLmRhcmtUaGVtZXx8bGlnaHRNb2RlVGhlbWU7Y29uc3QgcHJpc21UaGVtZT1pc0RhcmtUaGVtZT9kYXJrTW9kZVRoZW1lOmxpZ2h0TW9kZVRoZW1lO2lmKG1ldGFzdHJpbmcmJmhpZ2hsaWdodExpbmVzUmFuZ2VSZWdleC50ZXN0KG1ldGFzdHJpbmcpKXtjb25zdCBoaWdobGlnaHRMaW5lc1JhbmdlPW1ldGFzdHJpbmcubWF0Y2goaGlnaGxpZ2h0TGluZXNSYW5nZVJlZ2V4KVsxXTtoaWdobGlnaHRMaW5lcz1yYW5nZVBhcnNlci5wYXJzZShoaWdobGlnaHRMaW5lc1JhbmdlKS5maWx0ZXIobj0+bj4wKTt9aWYobWV0YXN0cmluZyYmY29kZUJsb2NrVGl0bGVSZWdleC50ZXN0KG1ldGFzdHJpbmcpKXtjb2RlQmxvY2tUaXRsZT1tZXRhc3RyaW5nLm1hdGNoKGNvZGVCbG9ja1RpdGxlUmVnZXgpWzBdLnNwbGl0KCd0aXRsZT0nKVsxXS5yZXBsYWNlKC8iKy9nLCcnKTt9dXNlRWZmZWN0KCgpPT57bGV0IGNsaXBib2FyZDtpZihidXR0b24uY3VycmVudCl7Y2xpcGJvYXJkPW5ldyBDbGlwYm9hcmQoYnV0dG9uLmN1cnJlbnQse3RhcmdldDooKT0+dGFyZ2V0LmN1cnJlbnR9KTt9cmV0dXJuKCk9PntpZihjbGlwYm9hcmQpe2NsaXBib2FyZC5kZXN0cm95KCk7fX07fSxbYnV0dG9uLmN1cnJlbnQsdGFyZ2V0LmN1cnJlbnRdKTtsZXQgbGFuZ3VhZ2U9bGFuZ3VhZ2VDbGFzc05hbWUmJmxhbmd1YWdlQ2xhc3NOYW1lLnJlcGxhY2UoL2xhbmd1YWdlLS8sJycpO2lmKCFsYW5ndWFnZSYmcHJpc20uZGVmYXVsdExhbmd1YWdlKXtsYW5ndWFnZT1wcmlzbS5kZWZhdWx0TGFuZ3VhZ2U7fWNvbnN0IGhhbmRsZUNvcHlDb2RlPSgpPT57d2luZG93LmdldFNlbGVjdGlvbigpLmVtcHR5KCk7c2V0U2hvd0NvcGllZCh0cnVlKTtzZXRUaW1lb3V0KCgpPT5zZXRTaG93Q29waWVkKGZhbHNlKSwyMDAwKTt9O3JldHVybi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEhpZ2hsaWdodCxfZXh0ZW5kcyh7fSxkZWZhdWx0UHJvcHMse2tleTptb3VudGVkLHRoZW1lOnByaXNtVGhlbWUsY29kZTpjaGlsZHJlbi50cmltKCksbGFuZ3VhZ2U6bGFuZ3VhZ2V9KSwoe2NsYXNzTmFtZSxzdHlsZSx0b2tlbnMsZ2V0TGluZVByb3BzLGdldFRva2VuUHJvcHN9KT0+LyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsbnVsbCxjb2RlQmxvY2tUaXRsZSYmLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse3N0eWxlOnN0eWxlLGNsYXNzTmFtZTpzdHlsZXMuY29kZUJsb2NrVGl0bGV9LGNvZGVCbG9ja1RpdGxlKSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOnN0eWxlcy5jb2RlQmxvY2tDb250ZW50fSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiYnV0dG9uIix7cmVmOmJ1dHRvbix0eXBlOiJidXR0b24iLCJhcmlhLWxhYmVsIjoiQ29weSBjb2RlIHRvIGNsaXBib2FyZCIsY2xhc3NOYW1lOmNsYXNzbmFtZXMoc3R5bGVzLmNvcHlCdXR0b24se1tzdHlsZXMuY29weUJ1dHRvbldpdGhUaXRsZV06Y29kZUJsb2NrVGl0bGV9KSxvbkNsaWNrOmhhbmRsZUNvcHlDb2RlfSxzaG93Q29waWVkPydDb3BpZWQnOidDb3B5JyksLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoInByZSIse2NsYXNzTmFtZTpjbGFzc25hbWVzKGNsYXNzTmFtZSxzdHlsZXMuY29kZUJsb2NrLHtbc3R5bGVzLmNvZGVCbG9ja1dpdGhUaXRsZV06Y29kZUJsb2NrVGl0bGV9KX0sLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse3JlZjp0YXJnZXQsY2xhc3NOYW1lOnN0eWxlcy5jb2RlQmxvY2tMaW5lcyxzdHlsZTpzdHlsZX0sdG9rZW5zLm1hcCgobGluZSxpKT0+e2lmKGxpbmUubGVuZ3RoPT09MSYmbGluZVswXS5jb250ZW50PT09Jycpe2xpbmVbMF0uY29udGVudD0nXG4nOy8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tcGFyYW0tcmVhc3NpZ24KfWNvbnN0IGxpbmVQcm9wcz1nZXRMaW5lUHJvcHMoe2xpbmUsa2V5Oml9KTtpZihoaWdobGlnaHRMaW5lcy5pbmNsdWRlcyhpKzEpKXtsaW5lUHJvcHMuY2xhc3NOYW1lPWAke2xpbmVQcm9wcy5jbGFzc05hbWV9IGRvY3VzYXVydXMtaGlnaGxpZ2h0LWNvZGUtbGluZWA7fXJldHVybi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLF9leHRlbmRzKHtrZXk6aX0sbGluZVByb3BzKSxsaW5lLm1hcCgodG9rZW4sa2V5KT0+LyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLF9leHRlbmRzKHtrZXk6a2V5fSxnZXRUb2tlblByb3BzKHt0b2tlbixrZXl9KSkpKSk7fSkpKSkpKTt9KTs="},{"version":3,"sources":["/Users/Yun/vector/website/src/theme/CodeBlock/index.js"],"names":["React","useEffect","useState","useRef","Clipboard","Highlight","defaultProps","Prism","classnames","defaultTheme","rangeParser","useDocusaurusContext","useThemeContext","styles","global","window","require","highlightLinesRangeRegex","codeBlockTitleRegex","children","className","languageClassName","metastring","siteConfig","themeConfig","prism","showCopied","setShowCopied","mounted","setMounted","target","button","highlightLines","codeBlockTitle","isDarkTheme","lightModeTheme","theme","darkModeTheme","darkTheme","prismTheme","test","highlightLinesRange","match","parse","filter","n","split","replace","clipboard","current","destroy","language","defaultLanguage","handleCopyCode","getSelection","empty","setTimeout","trim","style","tokens","getLineProps","getTokenProps","codeBlockContent","copyButton","copyButtonWithTitle","codeBlock","codeBlockWithTitle","codeBlockLines","map","line","i","length","content","lineProps","key","includes","token"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef} from 'react';\n\nimport Clipboard from 'clipboard';\nimport Highlight, {defaultProps} from 'prism-react-renderer';\nimport Prism from 'prism-react-renderer/prism';\n\nimport classnames from 'classnames';\nimport defaultTheme from 'prism-react-renderer/themes/palenight';\nimport rangeParser from 'parse-numeric-range';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport useThemeContext from '@theme/hooks/useThemeContext';\n\nimport styles from './styles.module.css';\n\n(typeof global !== 'undefined' ? global : window).Prism = Prism;\nrequire('prismjs/components/prism-http');\nrequire('prismjs/components/prism-lua');\nrequire('prismjs/components/prism-powershell');\nrequire('prismjs/components/prism-protobuf');\nrequire('prismjs/components/prism-rust');\nrequire('prismjs/components/prism-toml');\n\nconst highlightLinesRangeRegex = /{([\\d,-]+)}/;\nconst codeBlockTitleRegex = /title=\".*\"/;\n\nexport default ({children, className: languageClassName, metastring}) => {\n  const {\n    siteConfig: {\n      themeConfig: {prism = {}},\n    },\n  } = useDocusaurusContext();\n\n  const [showCopied, setShowCopied] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  // The Prism theme on SSR is always the default theme but the site theme\n  // can be in a different mode. React hydration doesn't update DOM styles\n  // that come from SSR. Hence force a re-render after mounting to apply the\n  // current relevant styles. There will be a flash seen of the original\n  // styles seen using this current approach but that's probably ok. Fixing\n  // the flash will require changing the theming approach and is not worth it\n  // at this point.\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const target = useRef(null);\n  const button = useRef(null);\n  let highlightLines = [];\n  let codeBlockTitle = '';\n\n  const {isDarkTheme} = useThemeContext();\n  const lightModeTheme = prism.theme || defaultTheme;\n  const darkModeTheme = prism.darkTheme || lightModeTheme;\n  const prismTheme = isDarkTheme ? darkModeTheme : lightModeTheme;\n\n  if (metastring && highlightLinesRangeRegex.test(metastring)) {\n    const highlightLinesRange = metastring.match(highlightLinesRangeRegex)[1];\n    highlightLines = rangeParser.parse(highlightLinesRange).filter(n => n > 0);\n  }\n\n  if (metastring && codeBlockTitleRegex.test(metastring)) {\n    codeBlockTitle = metastring\n      .match(codeBlockTitleRegex)[0]\n      .split('title=')[1]\n      .replace(/\"+/g, '');\n  }\n\n  useEffect(() => {\n    let clipboard;\n\n    if (button.current) {\n      clipboard = new Clipboard(button.current, {\n        target: () => target.current,\n      });\n    }\n\n    return () => {\n      if (clipboard) {\n        clipboard.destroy();\n      }\n    };\n  }, [button.current, target.current]);\n\n  let language =\n    languageClassName && languageClassName.replace(/language-/, '');\n\n  if (!language && prism.defaultLanguage) {\n    language = prism.defaultLanguage;\n  }\n\n  const handleCopyCode = () => {\n    window.getSelection().empty();\n    setShowCopied(true);\n\n    setTimeout(() => setShowCopied(false), 2000);\n  };\n\n  return (\n    <Highlight\n      {...defaultProps}\n      key={mounted}\n      theme={prismTheme}\n      code={children.trim()}\n      language={language}>\n      {({className, style, tokens, getLineProps, getTokenProps}) => (\n        <>\n          {codeBlockTitle && (\n            <div style={style} className={styles.codeBlockTitle}>\n              {codeBlockTitle}\n            </div>\n          )}\n          <div className={styles.codeBlockContent}>\n            <button\n              ref={button}\n              type=\"button\"\n              aria-label=\"Copy code to clipboard\"\n              className={classnames(styles.copyButton, {\n                [styles.copyButtonWithTitle]: codeBlockTitle,\n              })}\n              onClick={handleCopyCode}>\n              {showCopied ? 'Copied' : 'Copy'}\n            </button>\n            <pre\n              className={classnames(className, styles.codeBlock, {\n                [styles.codeBlockWithTitle]: codeBlockTitle,\n              })}>\n              <div ref={target} className={styles.codeBlockLines} style={style}>\n                {tokens.map((line, i) => {\n                  if (line.length === 1 && line[0].content === '') {\n                    line[0].content = '\\n'; // eslint-disable-line no-param-reassign\n                  }\n\n                  const lineProps = getLineProps({line, key: i});\n\n                  if (highlightLines.includes(i + 1)) {\n                    lineProps.className = `${lineProps.className} docusaurus-highlight-code-line`;\n                  }\n\n                  return (\n                    <div key={i} {...lineProps}>\n                      {line.map((token, key) => (\n                        <span key={key} {...getTokenProps({token, key})} />\n                      ))}\n                    </div>\n                  );\n                })}\n              </div>\n            </pre>\n          </div>\n        </>\n      )}\n    </Highlight>\n  );\n};\n"]}]}