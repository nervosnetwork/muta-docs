{"remainingRequest":"/Users/Yun/vector/website/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/vector/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/vector/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/vector/website/docs/reference/sinks/new_relic_logs.md","dependencies":[{"path":"/Users/Yun/vector/website/docs/reference/sinks/new_relic_logs.md","mtime":1594780808382},{"path":"/Users/Yun/vector/website/.docusaurus/docusaurus-plugin-content-docs/site-docs-reference-sinks-new-relic-logs-md-c35.json","mtime":1594781223949},{"path":"/Users/Yun/vector/website/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/vector/website/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/vector/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/vector/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1588759133114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL1l1bi92ZWN0b3Ivd2Vic2l0ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgY29uc3QgZnJvbnRNYXR0ZXI9e2xhc3RfbW9kaWZpZWRfb246JzIwMjAtMDctMTMnLGRlbGl2ZXJ5X2d1YXJhbnRlZTonYXRfbGVhc3Rfb25jZScsY29tcG9uZW50X3RpdGxlOidOZXcgUmVsaWMgTG9ncycsZGVzY3JpcHRpb246J1RoZSBWZWN0b3IgYG5ld19yZWxpY19sb2dzYCBzaW5rIGJhdGNoZXMgYGxvZ2AgZXZlbnRzIHRvIE5ldyBSZWxpY1wncyBsb2cgc2VydmljZSB2aWEgdGhlaXIgbG9nIEFQSS4nLGV2ZW50X3R5cGVzOlsnbG9nJ10sZnVuY3Rpb25fY2F0ZWdvcnk6J3RyYW5zbWl0Jyxpc3N1ZXNfdXJsOidodHRwczovL2dpdGh1Yi5jb20vdGltYmVyaW8vdmVjdG9yL2lzc3Vlcz9xPWlzJTNBb3BlbitpcyUzQWlzc3VlK2xhYmVsJTNBJTIyc2luayUzQStuZXdfcmVsaWNfbG9ncyUyMicsb3BlcmF0aW5nX3N5c3RlbXM6WydMaW51eCcsJ01hY09TJywnV2luZG93cyddLHNpZGViYXJfbGFiZWw6J25ld19yZWxpY19sb2dzfFsibG9nIl0nLHNvdXJjZV91cmw6J2h0dHBzOi8vZ2l0aHViLmNvbS90aW1iZXJpby92ZWN0b3IvdHJlZS9tYXN0ZXIvc3JjL3NpbmtzL25ld19yZWxpY19sb2dzLnJzJyxzdGF0dXM6J2JldGEnLHRpdGxlOidOZXcgUmVsaWMgTG9ncyBTaW5rJyx1bnN1cHBvcnRlZF9vcGVyYXRpbmdfc3lzdGVtczpbXX07ZXhwb3J0IGNvbnN0IG1ldGFkYXRhPXsiaWQiOiJyZWZlcmVuY2Uvc2lua3MvbmV3X3JlbGljX2xvZ3MiLCJ0aXRsZSI6Ik5ldyBSZWxpYyBMb2dzIFNpbmsiLCJkZXNjcmlwdGlvbiI6IlRoZSBWZWN0b3IgYG5ld19yZWxpY19sb2dzYCBzaW5rIGJhdGNoZXMgYGxvZ2AgZXZlbnRzIHRvIE5ldyBSZWxpYydzIGxvZyBzZXJ2aWNlIHZpYSB0aGVpciBsb2cgQVBJLiIsInNvdXJjZSI6IkBzaXRlL2RvY3MvcmVmZXJlbmNlL3NpbmtzL25ld19yZWxpY19sb2dzLm1kIiwicGVybWFsaW5rIjoiL2RvY3MvcmVmZXJlbmNlL3NpbmtzL25ld19yZWxpY19sb2dzIiwiZWRpdFVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS90aW1iZXJpby92ZWN0b3IvZWRpdC9tYXN0ZXIvd2Vic2l0ZS9kb2NzL3JlZmVyZW5jZS9zaW5rcy9uZXdfcmVsaWNfbG9ncy5tZCIsInNpZGViYXJfbGFiZWwiOiJuZXdfcmVsaWNfbG9nc3xbXCJsb2dcIl0iLCJzaWRlYmFyIjoiZG9jcyIsInByZXZpb3VzIjp7InRpdGxlIjoiTG9raSBTaW5rIiwicGVybWFsaW5rIjoiL2RvY3MvcmVmZXJlbmNlL3NpbmtzL2xva2kifSwibmV4dCI6eyJ0aXRsZSI6IlBhcGVydHJhaWwgU2luayIsInBlcm1hbGluayI6Ii9kb2NzL3JlZmVyZW5jZS9zaW5rcy9wYXBlcnRyYWlsIn19Oy8qIEBqc3ggbWR4ICovaW1wb3J0IEZpZWxkcyBmcm9tJ0BzaXRlL3NyYy9jb21wb25lbnRzL0ZpZWxkcyc7aW1wb3J0IEZpZWxkIGZyb20nQHNpdGUvc3JjL2NvbXBvbmVudHMvRmllbGQnO2ltcG9ydCBTVkcgZnJvbSdyZWFjdC1pbmxpbmVzdmcnO2ltcG9ydCBUYWJzIGZyb20nQHRoZW1lL1RhYnMnO2ltcG9ydCBUYWJJdGVtIGZyb20nQHRoZW1lL1RhYkl0ZW0nO2V4cG9ydCBjb25zdCByaWdodFRvYz1be3ZhbHVlOidDb25maWd1cmF0aW9uJyxpZDonY29uZmlndXJhdGlvbicsY2hpbGRyZW46W3t2YWx1ZTonYmF0Y2gnLGlkOidiYXRjaCcsY2hpbGRyZW46W119LHt2YWx1ZTonYnVmZmVyJyxpZDonYnVmZmVyJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidjb21wcmVzc2lvbicsaWQ6J2NvbXByZXNzaW9uJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidlbmNvZGluZycsaWQ6J2VuY29kaW5nJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidoZWFsdGhjaGVjaycsaWQ6J2hlYWx0aGNoZWNrJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidpbnNlcnRfa2V5JyxpZDonaW5zZXJ0X2tleScsY2hpbGRyZW46W119LHt2YWx1ZTonbGljZW5zZV9rZXknLGlkOidsaWNlbnNlX2tleScsY2hpbGRyZW46W119LHt2YWx1ZToncmVnaW9uJyxpZDoncmVnaW9uJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidyZXF1ZXN0JyxpZDoncmVxdWVzdCcsY2hpbGRyZW46W119XX0se3ZhbHVlOidIb3cgSXQgV29ya3MnLGlkOidob3ctaXQtd29ya3MnLGNoaWxkcmVuOlt7dmFsdWU6J0J1ZmZlcnMgJmFtcDsgQmF0Y2hlcycsaWQ6J2J1ZmZlcnMtLWJhdGNoZXMnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0Vudmlyb25tZW50IFZhcmlhYmxlcycsaWQ6J2Vudmlyb25tZW50LXZhcmlhYmxlcycsY2hpbGRyZW46W119LHt2YWx1ZTonSGVhbHRoIENoZWNrcycsaWQ6J2hlYWx0aC1jaGVja3MnLGNoaWxkcmVuOltdfSx7dmFsdWU6J1JhdGUgTGltaXRzJyxpZDoncmF0ZS1saW1pdHMnLGNoaWxkcmVuOltdfSx7dmFsdWU6J1JldHJ5IFBvbGljeScsaWQ6J3JldHJ5LXBvbGljeScsY2hpbGRyZW46W119XX1dO2NvbnN0IG1ha2VTaG9ydGNvZGU9bmFtZT0+ZnVuY3Rpb24gTURYRGVmYXVsdFNob3J0Y29kZShwcm9wcyl7Y29uc29sZS53YXJuKCJDb21wb25lbnQgIituYW1lKyIgd2FzIG5vdCBpbXBvcnRlZCwgZXhwb3J0ZWQsIG9yIHByb3ZpZGVkIGJ5IE1EWFByb3ZpZGVyIGFzIGdsb2JhbCBzY29wZSIpO3JldHVybiBtZHgoImRpdiIscHJvcHMpO307Y29uc3QgbGF5b3V0UHJvcHM9e3JpZ2h0VG9jfTtjb25zdCBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe2NvbXBvbmVudHMsLi4ucHJvcHN9KXtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoInAiLG51bGwsYFRoZSBWZWN0b3IgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYG5ld19yZWxpY19sb2dzYCksYCBzaW5rCmAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNidWZmZXJzLS1iYXRjaGVzIn0pLGBiYXRjaGVzYCksYCBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIvZG9jcy9hYm91dC9kYXRhLW1vZGVsL2xvZy8ifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LGBsb2dgKSksYCBldmVudHMgdG8gYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9uZXdyZWxpYy5jb20vIn0pLGBOZXcKUmVsaWMncyBsb2cgc2VydmljZWApLGAgdmlhIHRoZWlyIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vZG9jcy5uZXdyZWxpYy5jb20vZG9jcy9sb2dzL25ldy1yZWxpYy1sb2dzL2xvZy1hcGkvaW50cm9kdWN0aW9uLWxvZy1hcGkifSksYGxvZwpBUElgKSxgLmApLG1keCgiaDIiLHsiaWQiOiJjb25maWd1cmF0aW9uIn0sYENvbmZpZ3VyYXRpb25gKSxtZHgoVGFicyx7YmxvY2s6dHJ1ZSxkZWZhdWx0VmFsdWU6ImNvbW1vbiIsdmFsdWVzOlt7ImxhYmVsIjoiQ29tbW9uIiwidmFsdWUiOiJjb21tb24ifSx7ImxhYmVsIjoiQWR2YW5jZWQiLCJ2YWx1ZSI6ImFkdmFuY2VkIn1dLG1keFR5cGU6IlRhYnMifSxtZHgoVGFiSXRlbSx7dmFsdWU6ImNvbW1vbiIsbWR4VHlwZToiVGFiSXRlbSJ9LG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtdG9tbCIsIm1ldGFzdHJpbmciOiJ0aXRsZT1cInZlY3Rvci50b21sXCIiLCJ0aXRsZSI6IlwidmVjdG9yLnRvbWxcIiJ9KSxgW3NpbmtzLm15X3NpbmtfaWRdCiAgIyBHZW5lcmFsCiAgdHlwZSA9ICJuZXdfcmVsaWNfbG9ncyIgIyByZXF1aXJlZAogIGlucHV0cyA9IFsibXktc291cmNlLW9yLXRyYW5zZm9ybS1pZCJdICMgcmVxdWlyZWQKICBoZWFsdGhjaGVjayA9IHRydWUgIyBvcHRpb25hbCwgZGVmYXVsdAogIGluc2VydF9rZXkgPSAieHh4eCIgIyBvcHRpb25hbCwgbm8gZGVmYXVsdAogIGxpY2Vuc2Vfa2V5ID0gInh4eHgiICMgb3B0aW9uYWwsIG5vIGRlZmF1bHQKICByZWdpb24gPSAidXMiICMgb3B0aW9uYWwsIGRlZmF1bHQKCiAgIyBFbmNvZGluZwogIGVuY29kaW5nLmNvZGVjID0gImpzb24iICMgb3B0aW9uYWwsIGRlZmF1bHQKCiAgIyBSZXF1ZXN0cwogIGNvbXByZXNzaW9uID0gIm5vbmUiICMgb3B0aW9uYWwsIGRlZmF1bHQKYCkpKSxtZHgoVGFiSXRlbSx7dmFsdWU6ImFkdmFuY2VkIixtZHhUeXBlOiJUYWJJdGVtIn0sbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS10b21sIiwibWV0YXN0cmluZyI6InRpdGxlPVwidmVjdG9yLnRvbWxcIiIsInRpdGxlIjoiXCJ2ZWN0b3IudG9tbFwiIn0pLGBbc2lua3MubXlfc2lua19pZF0KICAjIEdlbmVyYWwKICB0eXBlID0gIm5ld19yZWxpY19sb2dzIiAjIHJlcXVpcmVkCiAgaW5wdXRzID0gWyJteS1zb3VyY2Utb3ItdHJhbnNmb3JtLWlkIl0gIyByZXF1aXJlZAogIGhlYWx0aGNoZWNrID0gdHJ1ZSAjIG9wdGlvbmFsLCBkZWZhdWx0CiAgaW5zZXJ0X2tleSA9ICJ4eHh4IiAjIG9wdGlvbmFsLCBubyBkZWZhdWx0CiAgbGljZW5zZV9rZXkgPSAieHh4eCIgIyBvcHRpb25hbCwgbm8gZGVmYXVsdAogIHJlZ2lvbiA9ICJ1cyIgIyBvcHRpb25hbCwgZGVmYXVsdAoKICAjIEJhdGNoCiAgYmF0Y2gubWF4X2J5dGVzID0gNTI0MDAwMCAjIG9wdGlvbmFsLCBkZWZhdWx0LCBieXRlcwogIGJhdGNoLm1heF9ldmVudHMgPSAxMDAwICMgb3B0aW9uYWwsIG5vIGRlZmF1bHQsIGV2ZW50cwogIGJhdGNoLnRpbWVvdXRfc2VjcyA9IDEgIyBvcHRpb25hbCwgZGVmYXVsdCwgc2Vjb25kcwoKICAjIEJ1ZmZlcgogIGJ1ZmZlci5tYXhfZXZlbnRzID0gNTAwICMgb3B0aW9uYWwsIGRlZmF1bHQsIGV2ZW50cywgcmVsZXZhbnQgd2hlbiB0eXBlID0gIm1lbW9yeSIKICBidWZmZXIubWF4X3NpemUgPSAxMDQ5MDAwMDAgIyByZXF1aXJlZCwgYnl0ZXMsIHJlcXVpcmVkIHdoZW4gdHlwZSA9ICJkaXNrIgogIGJ1ZmZlci50eXBlID0gIm1lbW9yeSIgIyBvcHRpb25hbCwgZGVmYXVsdAogIGJ1ZmZlci53aGVuX2Z1bGwgPSAiYmxvY2siICMgb3B0aW9uYWwsIGRlZmF1bHQKCiAgIyBFbmNvZGluZwogIGVuY29kaW5nLmNvZGVjID0gImpzb24iICMgb3B0aW9uYWwsIGRlZmF1bHQKICBlbmNvZGluZy5leGNlcHRfZmllbGRzID0gWyJ0aW1lc3RhbXAiLCAibWVzc2FnZSIsICJob3N0Il0gIyBvcHRpb25hbCwgbm8gZGVmYXVsdAogIGVuY29kaW5nLm9ubHlfZmllbGRzID0gWyJ0aW1lc3RhbXAiLCAibWVzc2FnZSIsICJob3N0Il0gIyBvcHRpb25hbCwgbm8gZGVmYXVsdAogIGVuY29kaW5nLnRpbWVzdGFtcF9mb3JtYXQgPSAicmZjMzMzOSIgIyBvcHRpb25hbCwgZGVmYXVsdAoKICAjIFJlcXVlc3QKICByZXF1ZXN0LmluX2ZsaWdodF9saW1pdCA9IDUgIyBvcHRpb25hbCwgZGVmYXVsdCwgcmVxdWVzdHMKICByZXF1ZXN0LnJhdGVfbGltaXRfZHVyYXRpb25fc2VjcyA9IDEgIyBvcHRpb25hbCwgZGVmYXVsdCwgc2Vjb25kcwogIHJlcXVlc3QucmF0ZV9saW1pdF9udW0gPSAxMDAgIyBvcHRpb25hbCwgZGVmYXVsdAogIHJlcXVlc3QucmV0cnlfYXR0ZW1wdHMgPSAxODQ0Njc0NDA3MzcwOTU1MTYxNSAjIG9wdGlvbmFsLCBkZWZhdWx0CiAgcmVxdWVzdC5yZXRyeV9pbml0aWFsX2JhY2tvZmZfc2VjcyA9IDEgIyBvcHRpb25hbCwgZGVmYXVsdCwgc2Vjb25kcwogIHJlcXVlc3QucmV0cnlfbWF4X2R1cmF0aW9uX3NlY3MgPSAxMCAjIG9wdGlvbmFsLCBkZWZhdWx0LCBzZWNvbmRzCiAgcmVxdWVzdC50aW1lb3V0X3NlY3MgPSAzMCAjIG9wdGlvbmFsLCBkZWZhdWx0LCBzZWNvbmRzCgogICMgUmVxdWVzdHMKICBjb21wcmVzc2lvbiA9ICJub25lIiAjIG9wdGlvbmFsLCBkZWZhdWx0CmApKSkpLG1keChGaWVsZHMse2ZpbHRlcnM6dHJ1ZSxtZHhUeXBlOiJGaWVsZHMifSxtZHgoRmllbGQse2NvbW1vbjpmYWxzZSxkZWZhdWx0VmFsdWU6bnVsbCxlbnVtVmFsdWVzOm51bGwsZXhhbXBsZXM6W10sZ3JvdXBzOltdLG5hbWU6ImJhdGNoIixwYXRoOm51bGwscmVsZXZhbnRXaGVuOm51bGwscmVxdWlyZWQ6ZmFsc2UsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6InRhYmxlIix1bml0Om51bGwsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImgzIix7ImlkIjoiYmF0Y2gifSxgYmF0Y2hgKSxtZHgoInAiLG51bGwsYENvbmZpZ3VyZXMgdGhlIHNpbmsgYmF0Y2hpbmcgYmVoYXZpb3IuYCksbWR4KEZpZWxkcyx7ZmlsdGVyczpmYWxzZSxtZHhUeXBlOiJGaWVsZHMifSxtZHgoRmllbGQse2NvbW1vbjp0cnVlLGRlZmF1bHRWYWx1ZTo1MjQwMDAwLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbNTI0MDAwMF0sZ3JvdXBzOltdLG5hbWU6Im1heF9ieXRlcyIscGF0aDoiYmF0Y2giLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ1aW50Iix1bml0OiJieXRlcyIsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImg0Iix7ImlkIjoibWF4X2J5dGVzIn0sYG1heF9ieXRlc2ApLG1keCgicCIsbnVsbCxgVGhlIG1heGltdW0gc2l6ZSBvZiBhIGJhdGNoLCBpbiBieXRlcywgYmVmb3JlIGl0IGlzIGZsdXNoZWQuYCkpLG1keChGaWVsZCx7Y29tbW9uOnRydWUsZGVmYXVsdFZhbHVlOm51bGwsZW51bVZhbHVlczpudWxsLGV4YW1wbGVzOlsxMDAwXSxncm91cHM6W10sbmFtZToibWF4X2V2ZW50cyIscGF0aDoiYmF0Y2giLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ1aW50Iix1bml0OiJldmVudHMiLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoNCIseyJpZCI6Im1heF9ldmVudHMifSxgbWF4X2V2ZW50c2ApLG1keCgicCIsbnVsbCxgVGhlIG1heGltdW0gc2l6ZSBvZiBhIGJhdGNoLCBpbiBldmVudHMsIGJlZm9yZSBpdCBpcyBmbHVzaGVkLgpTZWUgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2J1ZmZlcnMtLWJhdGNoZXMifSksYEJ1ZmZlcnMgJiBCYXRjaGVzYCksYCBmb3IgbW9yZSBpbmZvLmApKSxtZHgoRmllbGQse2NvbW1vbjp0cnVlLGRlZmF1bHRWYWx1ZToxLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbMV0sZ3JvdXBzOltdLG5hbWU6InRpbWVvdXRfc2VjcyIscGF0aDoiYmF0Y2giLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ1aW50Iix1bml0OiJzZWNvbmRzIix3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDQiLHsiaWQiOiJ0aW1lb3V0X3NlY3MifSxgdGltZW91dF9zZWNzYCksbWR4KCJwIixudWxsLGBUaGUgbWF4aW11bSBhZ2Ugb2YgYSBiYXRjaCBiZWZvcmUgaXQgaXMgZmx1c2hlZC4KU2VlIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNidWZmZXJzLS1iYXRjaGVzIn0pLGBCdWZmZXJzICYgQmF0Y2hlc2ApLGAgZm9yIG1vcmUgaW5mby5gKSkpKSxtZHgoRmllbGQse2NvbW1vbjpmYWxzZSxkZWZhdWx0VmFsdWU6bnVsbCxlbnVtVmFsdWVzOm51bGwsZXhhbXBsZXM6W10sZ3JvdXBzOltdLG5hbWU6ImJ1ZmZlciIscGF0aDpudWxsLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ0YWJsZSIsdW5pdDpudWxsLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoMyIseyJpZCI6ImJ1ZmZlciJ9LGBidWZmZXJgKSxtZHgoInAiLG51bGwsYENvbmZpZ3VyZXMgdGhlIHNpbmsgc3BlY2lmaWMgYnVmZmVyIGJlaGF2aW9yLmApLG1keChGaWVsZHMse2ZpbHRlcnM6ZmFsc2UsbWR4VHlwZToiRmllbGRzIn0sbWR4KEZpZWxkLHtjb21tb246dHJ1ZSxkZWZhdWx0VmFsdWU6NTAwLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbNTAwXSxncm91cHM6W10sbmFtZToibWF4X2V2ZW50cyIscGF0aDoiYnVmZmVyIixyZWxldmFudFdoZW46eyJ0eXBlIjoibWVtb3J5In0scmVxdWlyZWQ6ZmFsc2UsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6InVpbnQiLHVuaXQ6ImV2ZW50cyIsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImg0Iix7ImlkIjoibWF4X2V2ZW50cy0xIn0sYG1heF9ldmVudHNgKSxtZHgoInAiLG51bGwsYFRoZSBtYXhpbXVtIG51bWJlciBvZiBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIvZG9jcy9hYm91dC9kYXRhLW1vZGVsLyJ9KSxgZXZlbnRzYCksYCBhbGxvd2VkIGluIHRoZSBidWZmZXIuClNlZSBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIjYnVmZmVycy0tYmF0Y2hlcyJ9KSxgQnVmZmVycyAmIEJhdGNoZXNgKSxgIGZvciBtb3JlIGluZm8uYCkpLG1keChGaWVsZCx7Y29tbW9uOmZhbHNlLGRlZmF1bHRWYWx1ZTpudWxsLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbMTA0OTAwMDAwXSxncm91cHM6W10sbmFtZToibWF4X3NpemUiLHBhdGg6ImJ1ZmZlciIscmVsZXZhbnRXaGVuOnsidHlwZSI6ImRpc2sifSxyZXF1aXJlZDp0cnVlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ1aW50Iix1bml0OiJieXRlcyIsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImg0Iix7ImlkIjoibWF4X3NpemUifSxgbWF4X3NpemVgKSxtZHgoInAiLG51bGwsYFRoZSBtYXhpbXVtIHNpemUgb2YgdGhlIGJ1ZmZlciBvbiB0aGUgZGlzay5gKSksbWR4KEZpZWxkLHtjb21tb246dHJ1ZSxkZWZhdWx0VmFsdWU6Im1lbW9yeSIsZW51bVZhbHVlczp7Im1lbW9yeSI6IlN0b3JlcyB0aGUgc2luaydzIGJ1ZmZlciBpbiBtZW1vcnkuIFRoaXMgaXMgbW9yZSBwZXJmb3JtYW50LCBidXQgbGVzcyBkdXJhYmxlLiBEYXRhIHdpbGwgYmUgbG9zdCBpZiBWZWN0b3IgaXMgcmVzdGFydGVkIGZvcmNlZnVsbHkuIiwiZGlzayI6IlN0b3JlcyB0aGUgc2luaydzIGJ1ZmZlciBvbiBkaXNrLiBUaGlzIGlzIGxlc3MgcGVyZm9ybWFudCwgYnV0IGR1cmFibGUuIERhdGEgd2lsbCBub3QgYmUgbG9zdCBiZXR3ZWVuIHJlc3RhcnRzLiJ9LGV4YW1wbGVzOlsibWVtb3J5IiwiZGlzayJdLGdyb3VwczpbXSxuYW1lOiJ0eXBlIixwYXRoOiJidWZmZXIiLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJzdHJpbmciLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDQiLHsiaWQiOiJ0eXBlIn0sYHR5cGVgKSxtZHgoInAiLG51bGwsYFRoZSBidWZmZXIncyB0eXBlIGFuZCBzdG9yYWdlIG1lY2hhbmlzbS5gKSksbWR4KEZpZWxkLHtjb21tb246ZmFsc2UsZGVmYXVsdFZhbHVlOiJibG9jayIsZW51bVZhbHVlczp7ImJsb2NrIjoiQXBwbGllcyBiYWNrIHByZXNzdXJlIHdoZW4gdGhlIGJ1ZmZlciBpcyBmdWxsLiBUaGlzIHByZXZlbnRzIGRhdGEgbG9zcywgYnV0IHdpbGwgY2F1c2UgZGF0YSB0byBwaWxlIHVwIG9uIHRoZSBlZGdlLiIsImRyb3BfbmV3ZXN0IjoiRHJvcHMgbmV3IGRhdGEgYXMgaXQncyByZWNlaXZlZC4gVGhpcyBkYXRhIGlzIGxvc3QuIFRoaXMgc2hvdWxkIGJlIHVzZWQgd2hlbiBwZXJmb3JtYW5jZSBpcyB0aGUgaGlnaGVzdCBwcmlvcml0eS4ifSxleGFtcGxlczpbImJsb2NrIiwiZHJvcF9uZXdlc3QiXSxncm91cHM6W10sbmFtZToid2hlbl9mdWxsIixwYXRoOiJidWZmZXIiLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJzdHJpbmciLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDQiLHsiaWQiOiJ3aGVuX2Z1bGwifSxgd2hlbl9mdWxsYCksbWR4KCJwIixudWxsLGBUaGUgYmVoYXZpb3Igd2hlbiB0aGUgYnVmZmVyIGJlY29tZXMgZnVsbC5gKSkpKSxtZHgoRmllbGQse2NvbW1vbjp0cnVlLGRlZmF1bHRWYWx1ZToibm9uZSIsZW51bVZhbHVlczp7Im5vbmUiOiJObyBjb21wcmVzc2lvbi4iLCJnemlwIjoiW0d6aXBdW3VybHMuZ3ppcF0gc3RhbmRhcmQgREVGTEFURSBjb21wcmVzc2lvbi4ifSxleGFtcGxlczpbIm5vbmUiLCJnemlwIl0sZ3JvdXBzOltdLG5hbWU6ImNvbXByZXNzaW9uIixwYXRoOm51bGwscmVsZXZhbnRXaGVuOm51bGwscmVxdWlyZWQ6ZmFsc2UsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6InN0cmluZyIsdW5pdDpudWxsLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoMyIseyJpZCI6ImNvbXByZXNzaW9uIn0sYGNvbXByZXNzaW9uYCksbWR4KCJwIixudWxsLGBUaGUgY29tcHJlc3Npb24gc3RyYXRlZ3kgdXNlZCB0byBjb21wcmVzcyB0aGUgZW5jb2RlZCBldmVudCBkYXRhIGJlZm9yZQp0cmFuc21pc3Npb24uYCkpLG1keChGaWVsZCx7Y29tbW9uOnRydWUsZGVmYXVsdFZhbHVlOm51bGwsZW51bVZhbHVlczpudWxsLGV4YW1wbGVzOltdLGdyb3VwczpbXSxuYW1lOiJlbmNvZGluZyIscGF0aDpudWxsLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ0YWJsZSIsdW5pdDpudWxsLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoMyIseyJpZCI6ImVuY29kaW5nIn0sYGVuY29kaW5nYCksbWR4KCJwIixudWxsLGBDb25maWd1cmVzIHRoZSBlbmNvZGluZyBzcGVjaWZpYyBzaW5rIGJlaGF2aW9yLmApLG1keChGaWVsZHMse2ZpbHRlcnM6ZmFsc2UsbWR4VHlwZToiRmllbGRzIn0sbWR4KEZpZWxkLHtjb21tb246dHJ1ZSxkZWZhdWx0VmFsdWU6Impzb24iLGVudW1WYWx1ZXM6eyJqc29uIjoiRWFjaCBldmVudCBpcyBlbmNvZGVkIGludG8gSlNPTiBhbmQgdGhlIHBheWxvYWQgaXMgcmVwcmVzZW50ZWQgYXMgYSBKU09OIGFycmF5LiJ9LGV4YW1wbGVzOlsianNvbiJdLGdyb3VwczpbXSxuYW1lOiJjb2RlYyIscGF0aDoiZW5jb2RpbmciLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJzdHJpbmciLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDQiLHsiaWQiOiJjb2RlYyJ9LGBjb2RlY2ApLG1keCgicCIsbnVsbCxgVGhlIGVuY29kaW5nIGNvZGVjIHVzZWQgdG8gc2VyaWFsaXplIHRoZSBldmVudHMgYmVmb3JlIG91dHB1dHRpbmcuYCkpLG1keChGaWVsZCx7Y29tbW9uOmZhbHNlLGRlZmF1bHRWYWx1ZTpudWxsLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbWyJ0aW1lc3RhbXAiLCJtZXNzYWdlIiwiaG9zdCJdXSxncm91cHM6W10sbmFtZToiZXhjZXB0X2ZpZWxkcyIscGF0aDoiZW5jb2RpbmciLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJbc3RyaW5nXSIsdW5pdDpudWxsLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoNCIseyJpZCI6ImV4Y2VwdF9maWVsZHMifSxgZXhjZXB0X2ZpZWxkc2ApLG1keCgicCIsbnVsbCxgUHJldmVudCB0aGUgc2luayBmcm9tIGVuY29kaW5nIHRoZSBzcGVjaWZpZWQgbGFiZWxzLmApKSxtZHgoRmllbGQse2NvbW1vbjpmYWxzZSxkZWZhdWx0VmFsdWU6bnVsbCxlbnVtVmFsdWVzOm51bGwsZXhhbXBsZXM6W1sidGltZXN0YW1wIiwibWVzc2FnZSIsImhvc3QiXV0sZ3JvdXBzOltdLG5hbWU6Im9ubHlfZmllbGRzIixwYXRoOiJlbmNvZGluZyIscmVsZXZhbnRXaGVuOm51bGwscmVxdWlyZWQ6ZmFsc2UsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6IltzdHJpbmddIix1bml0Om51bGwsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImg0Iix7ImlkIjoib25seV9maWVsZHMifSxgb25seV9maWVsZHNgKSxtZHgoInAiLG51bGwsYExpbWl0IHRoZSBzaW5rIHRvIG9ubHkgZW5jb2RpbmcgdGhlIHNwZWNpZmllZCBsYWJlbHMuYCkpLG1keChGaWVsZCx7Y29tbW9uOmZhbHNlLGRlZmF1bHRWYWx1ZToicmZjMzMzOSIsZW51bVZhbHVlczp7InJmYzMzMzkiOiJGb3JtYXQgYXMgYW4gUkZDMzMzOSBzdHJpbmciLCJ1bml4IjoiRm9ybWF0IGFzIGEgdW5peCB0aW1lc3RhbXAsIGNhbiBiZSBwYXJzZWQgYXMgYSBDbGlja2hvdXNlIERhdGVUaW1lIn0sZXhhbXBsZXM6WyJyZmMzMzM5IiwidW5peCJdLGdyb3VwczpbXSxuYW1lOiJ0aW1lc3RhbXBfZm9ybWF0IixwYXRoOiJlbmNvZGluZyIscmVsZXZhbnRXaGVuOm51bGwscmVxdWlyZWQ6ZmFsc2UsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6InN0cmluZyIsdW5pdDpudWxsLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoNCIseyJpZCI6InRpbWVzdGFtcF9mb3JtYXQifSxgdGltZXN0YW1wX2Zvcm1hdGApLG1keCgicCIsbnVsbCxgSG93IHRvIGZvcm1hdCBldmVudCB0aW1lc3RhbXBzLmApKSkpLG1keChGaWVsZCx7Y29tbW9uOnRydWUsZGVmYXVsdFZhbHVlOnRydWUsZW51bVZhbHVlczpudWxsLGV4YW1wbGVzOlt0cnVlLGZhbHNlXSxncm91cHM6W10sbmFtZToiaGVhbHRoY2hlY2siLHBhdGg6bnVsbCxyZWxldmFudFdoZW46bnVsbCxyZXF1aXJlZDpmYWxzZSx0ZW1wbGF0ZWFibGU6ZmFsc2UsdHlwZToiYm9vbCIsdW5pdDpudWxsLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoMyIseyJpZCI6ImhlYWx0aGNoZWNrIn0sYGhlYWx0aGNoZWNrYCksbWR4KCJwIixudWxsLGBFbmFibGVzL2Rpc2FibGVzIHRoZSBzaW5rIGhlYWx0aGNoZWNrIHVwb24gc3RhcnQuClNlZSBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIjaGVhbHRoLWNoZWNrcyJ9KSxgSGVhbHRoIENoZWNrc2ApLGAgZm9yIG1vcmUgaW5mby5gKSksbWR4KEZpZWxkLHtjb21tb246dHJ1ZSxkZWZhdWx0VmFsdWU6bnVsbCxlbnVtVmFsdWVzOm51bGwsZXhhbXBsZXM6WyJ4eHh4IiwiJHtORVdfUkVMSUNfSU5TRVJUX0tFWX0iXSxncm91cHM6W10sbmFtZToiaW5zZXJ0X2tleSIscGF0aDpudWxsLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJzdHJpbmciLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDMiLHsiaWQiOiJpbnNlcnRfa2V5In0sYGluc2VydF9rZXlgKSxtZHgoInAiLG51bGwsYFlvdXIgTmV3IFJlbGljIGluc2VydCBrZXkgKGlmIGFwcGxpY2FibGUpLmApKSxtZHgoRmllbGQse2NvbW1vbjp0cnVlLGRlZmF1bHRWYWx1ZTpudWxsLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbInh4eHgiLCIke05FV19SRUxJQ19MSUNFTlNFX0tFWX0iXSxncm91cHM6W10sbmFtZToibGljZW5zZV9rZXkiLHBhdGg6bnVsbCxyZWxldmFudFdoZW46bnVsbCxyZXF1aXJlZDpmYWxzZSx0ZW1wbGF0ZWFibGU6ZmFsc2UsdHlwZToic3RyaW5nIix1bml0Om51bGwsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImgzIix7ImlkIjoibGljZW5zZV9rZXkifSxgbGljZW5zZV9rZXlgKSxtZHgoInAiLG51bGwsYFlvdXIgTmV3IFJlbGljIGxpY2Vuc2Uga2V5IChpZiBhcHBsaWNhYmxlKS5gKSksbWR4KEZpZWxkLHtjb21tb246dHJ1ZSxkZWZhdWx0VmFsdWU6InVzIixlbnVtVmFsdWVzOnsidXMiOiJUaGUgVVMgcmVnaW9uIiwiZXUiOiJUaGUgRVUgcmVnaW9uIn0sZXhhbXBsZXM6WyJ1cyIsImV1Il0sZ3JvdXBzOltdLG5hbWU6InJlZ2lvbiIscGF0aDpudWxsLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJzdHJpbmciLHVuaXQ6bnVsbCx3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDMiLHsiaWQiOiJyZWdpb24ifSxgcmVnaW9uYCksbWR4KCJwIixudWxsLGBUaGUgQVBJIHJlZ2lvbiB0byBzZW5kIGxvZ3MgdG8uYCkpLG1keChGaWVsZCx7Y29tbW9uOmZhbHNlLGRlZmF1bHRWYWx1ZTpudWxsLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbXSxncm91cHM6W10sbmFtZToicmVxdWVzdCIscGF0aDpudWxsLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ0YWJsZSIsdW5pdDpudWxsLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoMyIseyJpZCI6InJlcXVlc3QifSxgcmVxdWVzdGApLG1keCgicCIsbnVsbCxgQ29uZmlndXJlcyB0aGUgc2luayByZXF1ZXN0IGJlaGF2aW9yLmApLG1keChGaWVsZHMse2ZpbHRlcnM6ZmFsc2UsbWR4VHlwZToiRmllbGRzIn0sbWR4KEZpZWxkLHtjb21tb246dHJ1ZSxkZWZhdWx0VmFsdWU6NSxlbnVtVmFsdWVzOm51bGwsZXhhbXBsZXM6WzVdLGdyb3VwczpbXSxuYW1lOiJpbl9mbGlnaHRfbGltaXQiLHBhdGg6InJlcXVlc3QiLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ1aW50Iix1bml0OiJyZXF1ZXN0cyIsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImg0Iix7ImlkIjoiaW5fZmxpZ2h0X2xpbWl0In0sYGluX2ZsaWdodF9saW1pdGApLG1keCgicCIsbnVsbCxgVGhlIG1heGltdW0gbnVtYmVyIG9mIGluLWZsaWdodCByZXF1ZXN0cyBhbGxvd2VkIGF0IGFueSBnaXZlbiB0aW1lLgpTZWUgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI3JhdGUtbGltaXRzIn0pLGBSYXRlIExpbWl0c2ApLGAgZm9yIG1vcmUgaW5mby5gKSksbWR4KEZpZWxkLHtjb21tb246dHJ1ZSxkZWZhdWx0VmFsdWU6MSxlbnVtVmFsdWVzOm51bGwsZXhhbXBsZXM6WzFdLGdyb3VwczpbXSxuYW1lOiJyYXRlX2xpbWl0X2R1cmF0aW9uX3NlY3MiLHBhdGg6InJlcXVlc3QiLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ1aW50Iix1bml0OiJzZWNvbmRzIix3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDQiLHsiaWQiOiJyYXRlX2xpbWl0X2R1cmF0aW9uX3NlY3MifSxgcmF0ZV9saW1pdF9kdXJhdGlvbl9zZWNzYCksbWR4KCJwIixudWxsLGBUaGUgdGltZSB3aW5kb3csIGluIHNlY29uZHMsIHVzZWQgZm9yIHRoZSBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIjcmF0ZV9saW1pdF9udW0ifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LGByYXRlX2xpbWl0X251bWApKSxgIG9wdGlvbi4KU2VlIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNyYXRlLWxpbWl0cyJ9KSxgUmF0ZSBMaW1pdHNgKSxgIGZvciBtb3JlIGluZm8uYCkpLG1keChGaWVsZCx7Y29tbW9uOnRydWUsZGVmYXVsdFZhbHVlOjEwMCxlbnVtVmFsdWVzOm51bGwsZXhhbXBsZXM6WzEwMF0sZ3JvdXBzOltdLG5hbWU6InJhdGVfbGltaXRfbnVtIixwYXRoOiJyZXF1ZXN0IixyZWxldmFudFdoZW46bnVsbCxyZXF1aXJlZDpmYWxzZSx0ZW1wbGF0ZWFibGU6ZmFsc2UsdHlwZToidWludCIsdW5pdDpudWxsLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoNCIseyJpZCI6InJhdGVfbGltaXRfbnVtIn0sYHJhdGVfbGltaXRfbnVtYCksbWR4KCJwIixudWxsLGBUaGUgbWF4aW11bSBudW1iZXIgb2YgcmVxdWVzdHMgYWxsb3dlZCB3aXRoaW4gdGhlIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNyYXRlX2xpbWl0X2R1cmF0aW9uX3NlY3MifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LGByYXRlX2xpbWl0X2R1cmF0aW9uX3NlY3NgKSksYAp0aW1lIHdpbmRvdy4KU2VlIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNyYXRlLWxpbWl0cyJ9KSxgUmF0ZSBMaW1pdHNgKSxgIGZvciBtb3JlIGluZm8uYCkpLG1keChGaWVsZCx7Y29tbW9uOmZhbHNlLGRlZmF1bHRWYWx1ZToxODQ0Njc0NDA3MzcwOTU1MTYxNSxlbnVtVmFsdWVzOm51bGwsZXhhbXBsZXM6WzE4NDQ2NzQ0MDczNzA5NTUxNjE1XSxncm91cHM6W10sbmFtZToicmV0cnlfYXR0ZW1wdHMiLHBhdGg6InJlcXVlc3QiLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ1aW50Iix1bml0Om51bGwsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImg0Iix7ImlkIjoicmV0cnlfYXR0ZW1wdHMifSxgcmV0cnlfYXR0ZW1wdHNgKSxtZHgoInAiLG51bGwsYFRoZSBtYXhpbXVtIG51bWJlciBvZiByZXRyaWVzIHRvIG1ha2UgZm9yIGZhaWxlZCByZXF1ZXN0cy4gVGhlIGRlZmF1bHQsIGZvciBhbGwKaW50ZW50cyBhbmQgcHVycG9zZXMsIHJlcHJlc2VudHMgYW4gaW5maW5pdGUgbnVtYmVyIG9mIHJldHJpZXMuClNlZSBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIjcmV0cnktcG9saWN5In0pLGBSZXRyeSBQb2xpY3lgKSxgIGZvciBtb3JlIGluZm8uYCkpLG1keChGaWVsZCx7Y29tbW9uOmZhbHNlLGRlZmF1bHRWYWx1ZToxLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbMV0sZ3JvdXBzOltdLG5hbWU6InJldHJ5X2luaXRpYWxfYmFja29mZl9zZWNzIixwYXRoOiJyZXF1ZXN0IixyZWxldmFudFdoZW46bnVsbCxyZXF1aXJlZDpmYWxzZSx0ZW1wbGF0ZWFibGU6ZmFsc2UsdHlwZToidWludCIsdW5pdDoic2Vjb25kcyIsd2FybmluZ3M6W10sbWR4VHlwZToiRmllbGQifSxtZHgoImg0Iix7ImlkIjoicmV0cnlfaW5pdGlhbF9iYWNrb2ZmX3NlY3MifSxgcmV0cnlfaW5pdGlhbF9iYWNrb2ZmX3NlY3NgKSxtZHgoInAiLG51bGwsYFRoZSBhbW91bnQgb2YgdGltZSB0byB3YWl0IGJlZm9yZSBhdHRlbXB0aW5nIHRoZSBmaXJzdCByZXRyeSBmb3IgYSBmYWlsZWQKcmVxdWVzdC4gT25jZSwgdGhlIGZpcnN0IHJldHJ5IGhhcyBmYWlsZWQgdGhlIGZpYm9uYWNjaSBzZXF1ZW5jZSB3aWxsIGJlIHVzZWQKdG8gc2VsZWN0IGZ1dHVyZSBiYWNrb2Zmcy5gKSksbWR4KEZpZWxkLHtjb21tb246ZmFsc2UsZGVmYXVsdFZhbHVlOjEwLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbMTBdLGdyb3VwczpbXSxuYW1lOiJyZXRyeV9tYXhfZHVyYXRpb25fc2VjcyIscGF0aDoicmVxdWVzdCIscmVsZXZhbnRXaGVuOm51bGwscmVxdWlyZWQ6ZmFsc2UsdGVtcGxhdGVhYmxlOmZhbHNlLHR5cGU6InVpbnQiLHVuaXQ6InNlY29uZHMiLHdhcm5pbmdzOltdLG1keFR5cGU6IkZpZWxkIn0sbWR4KCJoNCIseyJpZCI6InJldHJ5X21heF9kdXJhdGlvbl9zZWNzIn0sYHJldHJ5X21heF9kdXJhdGlvbl9zZWNzYCksbWR4KCJwIixudWxsLGBUaGUgbWF4aW11bSBhbW91bnQgb2YgdGltZSwgaW4gc2Vjb25kcywgdG8gd2FpdCBiZXR3ZWVuIHJldHJpZXMuYCkpLG1keChGaWVsZCx7Y29tbW9uOnRydWUsZGVmYXVsdFZhbHVlOjMwLGVudW1WYWx1ZXM6bnVsbCxleGFtcGxlczpbMzBdLGdyb3VwczpbXSxuYW1lOiJ0aW1lb3V0X3NlY3MiLHBhdGg6InJlcXVlc3QiLHJlbGV2YW50V2hlbjpudWxsLHJlcXVpcmVkOmZhbHNlLHRlbXBsYXRlYWJsZTpmYWxzZSx0eXBlOiJ1aW50Iix1bml0OiJzZWNvbmRzIix3YXJuaW5nczpbXSxtZHhUeXBlOiJGaWVsZCJ9LG1keCgiaDQiLHsiaWQiOiJ0aW1lb3V0X3NlY3MtMSJ9LGB0aW1lb3V0X3NlY3NgKSxtZHgoInAiLG51bGwsYFRoZSBtYXhpbXVtIHRpbWUgYSByZXF1ZXN0IGNhbiB0YWtlIGJlZm9yZSBiZWluZyBhYm9ydGVkLiBJdCBpcyBoaWdobHkKcmVjb21tZW5kZWQgdGhhdCB5b3UgZG8gbm90IGxvd2VyIHZhbHVlIGJlbG93IHRoZSBzZXJ2aWNlJ3MgaW50ZXJuYWwgdGltZW91dCwKYXMgdGhpcyBjb3VsZCBjcmVhdGUgb3JwaGFuZWQgcmVxdWVzdHMsIHBpbGUgb24gcmV0cmllcywgYW5kIHJlc3VsdCBpbgpkdXBsaWNhdGUgZGF0YSBkb3duc3RyZWFtLgpTZWUgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2J1ZmZlcnMtLWJhdGNoZXMifSksYEJ1ZmZlcnMgJiBCYXRjaGVzYCksYCBmb3IgbW9yZSBpbmZvLmApKSkpKSxtZHgoImgyIix7ImlkIjoiaG93LWl0LXdvcmtzIn0sYEhvdyBJdCBXb3Jrc2ApLG1keCgiaDMiLHsiaWQiOiJidWZmZXJzLS1iYXRjaGVzIn0sYEJ1ZmZlcnMgJiBCYXRjaGVzYCksbWR4KFNWRyx7c3JjOiIvaW1nL2J1ZmZlcnMtYW5kLWJhdGNoZXMtc2VyaWFsLnN2ZyIsbWR4VHlwZToiU1ZHIn0pLG1keCgicCIsbnVsbCxgVGhlIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBuZXdfcmVsaWNfbG9nc2ApLGAgc2luayBidWZmZXJzICYgYmF0Y2hlcyBkYXRhIGFzCnNob3duIGluIHRoZSBkaWFncmFtIGFib3ZlLiBZb3UnbGwgbm90aWNlIHRoYXQgVmVjdG9yIHRyZWF0cyB0aGVzZSBjb25jZXB0cwpkaWZmZXJlbnRseSwgaW5zdGVhZCBvZiB0cmVhdGluZyB0aGVtIGFzIGdsb2JhbCBjb25jZXB0cywgVmVjdG9yIHRyZWF0cyB0aGVtCmFzIHNpbmsgc3BlY2lmaWMgY29uY2VwdHMuIFRoaXMgaXNvbGF0ZXMgc2lua3MsIGVuc3VyaW5nIHNlcnZpY2VzIGRpc3J1cHRpb25zCmFyZSBjb250YWluZWQgYW5kIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Ii9kb2NzL2Fib3V0L2d1YXJhbnRlZXMvIn0pLGBkZWxpdmVyeSBndWFyYW50ZWVzYCksYCBhcmUgaG9ub3JlZC5gKSxtZHgoInAiLG51bGwsbWR4KCJlbSIse3BhcmVudE5hbWU6InAifSxgQmF0Y2hlc2ApLGAgYXJlIGZsdXNoZWQgd2hlbiAxIG9mIDIgY29uZGl0aW9ucyBhcmUgbWV0OmApLG1keCgib2wiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYFRoZSBiYXRjaCBhZ2UgbWVldHMgb3IgZXhjZWVkcyB0aGUgY29uZmlndXJlZCBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiI3RpbWVvdXRfc2VjcyJ9KSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJhIn0sYHRpbWVvdXRfc2Vjc2ApKSxgLmApLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LGBUaGUgYmF0Y2ggc2l6ZSBtZWV0cyBvciBleGNlZWRzIHRoZSBjb25maWd1cmVkIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiIjbWF4X2V2ZW50cyJ9KSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJhIn0sYG1heF9ldmVudHNgKSksYC5gKSksbWR4KCJwIixudWxsLG1keCgiZW0iLHtwYXJlbnROYW1lOiJwIn0sYEJ1ZmZlcnNgKSxgIGFyZSBjb250cm9sbGVkIHZpYSB0aGUgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2J1ZmZlciJ9KSxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJhIn0sYGJ1ZmZlci4qYCkpLGAgb3B0aW9ucy5gKSxtZHgoImgzIix7ImlkIjoiZW52aXJvbm1lbnQtdmFyaWFibGVzIn0sYEVudmlyb25tZW50IFZhcmlhYmxlc2ApLG1keCgicCIsbnVsbCxgRW52aXJvbm1lbnQgdmFyaWFibGVzIGFyZSBzdXBwb3J0ZWQgdGhyb3VnaCBhbGwgb2YgVmVjdG9yJ3MgY29uZmlndXJhdGlvbi4KU2ltcGx5IGFkZCBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgXCR7TVlfRU5WX1ZBUn1gKSxgIGluIHlvdXIgVmVjdG9yIGNvbmZpZ3VyYXRpb24gZmlsZSBhbmQgdGhlIHZhcmlhYmxlCndpbGwgYmUgcmVwbGFjZWQgYmVmb3JlIGJlaW5nIGV2YWx1YXRlZC5gKSxtZHgoInAiLG51bGwsYFlvdSBjYW4gbGVhcm4gbW9yZSBpbiB0aGUKYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiL2RvY3Mvc2V0dXAvY29uZmlndXJhdGlvbi8jZW52aXJvbm1lbnQtdmFyaWFibGVzIn0pLGBFbnZpcm9ubWVudCBWYXJpYWJsZXNgKSxgIHNlY3Rpb24uYCksbWR4KCJoMyIseyJpZCI6ImhlYWx0aC1jaGVja3MifSxgSGVhbHRoIENoZWNrc2ApLG1keCgicCIsbnVsbCxgSGVhbHRoIGNoZWNrcyBlbnN1cmUgdGhhdCB0aGUgZG93bnN0cmVhbSBzZXJ2aWNlIGlzIGFjY2Vzc2libGUgYW5kIHJlYWR5IHRvCmFjY2VwdCBkYXRhLiBUaGlzIGNoZWNrIGlzIHBlcmZvcm1lZCB1cG9uIHNpbmsgaW5pdGlhbGl6YXRpb24uCklmIHRoZSBoZWFsdGggY2hlY2sgZmFpbHMgYW4gZXJyb3Igd2lsbCBiZSBsb2dnZWQgYW5kIFZlY3RvciB3aWxsIHByb2NlZWQgdG8Kc3RhcnQuYCksbWR4KCJoNCIseyJpZCI6InJlcXVpcmUtaGVhbHRoLWNoZWNrcyJ9LGBSZXF1aXJlIEhlYWx0aCBDaGVja3NgKSxtZHgoInAiLG51bGwsYElmIHlvdSdkIGxpa2UgdG8gZXhpdCBpbW1lZGlhdGVseSB1cG9uIGEgaGVhbHRoIGNoZWNrIGZhaWx1cmUsIHlvdSBjYW4KcGFzcyB0aGUgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYC0tcmVxdWlyZS1oZWFsdGh5YCksYCBmbGFnOmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtYmFzaCJ9KSxgdmVjdG9yIC0tY29uZmlnIC9ldGMvdmVjdG9yL3ZlY3Rvci50b21sIC0tcmVxdWlyZS1oZWFsdGh5CmApKSxtZHgoImg0Iix7ImlkIjoiZGlzYWJsZS1oZWFsdGgtY2hlY2tzIn0sYERpc2FibGUgSGVhbHRoIENoZWNrc2ApLG1keCgicCIsbnVsbCxgSWYgeW91J2QgbGlrZSB0byBkaXNhYmxlIGhlYWx0aCBjaGVja3MgZm9yIHRoaXMgc2luayB5b3UgY2FuIHNldCB0aGUKYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYGhlYWx0aGNoZWNrYCksYCBvcHRpb24gdG8gYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYGZhbHNlYCksYC5gKSxtZHgoImgzIix7ImlkIjoicmF0ZS1saW1pdHMifSxgUmF0ZSBMaW1pdHNgKSxtZHgoInAiLG51bGwsYFZlY3RvciBvZmZlcnMgYSBmZXcgbGV2ZXJzIHRvIGNvbnRyb2wgdGhlIHJhdGUgYW5kIHZvbHVtZSBvZiByZXF1ZXN0cyB0byB0aGUKZG93bnN0cmVhbSBzZXJ2aWNlLiBTdGFydCB3aXRoIHRoZSBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIjcmF0ZV9saW1pdF9kdXJhdGlvbl9zZWNzIn0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSxgcmF0ZV9saW1pdF9kdXJhdGlvbl9zZWNzYCkpLGAgYW5kCmAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGByYXRlX2xpbWl0X251bWApLGAgb3B0aW9ucyB0byBlbnN1cmUgVmVjdG9yIGRvZXMgbm90IGV4Y2VlZCB0aGUgc3BlY2lmaWVkCm51bWJlciBvZiByZXF1ZXN0cyBpbiB0aGUgc3BlY2lmaWVkIHdpbmRvdy4gWW91IGNhbiBmdXJ0aGVyIGNvbnRyb2wgdGhlIHBhY2UgYXQKd2hpY2ggdGhpcyB3aW5kb3cgaXMgc2F0dXJhdGVkIHdpdGggdGhlIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNpbl9mbGlnaHRfbGltaXQifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LGBpbl9mbGlnaHRfbGltaXRgKSksYCBvcHRpb24sIHdoaWNoCndpbGwgZ3VhcmFudGVlIG5vIG1vcmUgdGhhbiB0aGUgc3BlY2lmaWVkIG51bWJlciBvZiByZXF1ZXN0cyBhcmUgaW4tZmxpZ2h0IGF0CmFueSBnaXZlbiB0aW1lLmApLG1keCgicCIsbnVsbCxgUGxlYXNlIG5vdGUsIFZlY3RvcidzIGRlZmF1bHRzIGFyZSBjYXJlZnVsbHkgY2hvc2VuIGFuZCBpdCBzaG91bGQgYmUgcmFyZSB0aGF0CnlvdSBuZWVkIHRvIGFkanVzdCB0aGVzZS4gSWYgeW91IGZvdW5kIGEgZ29vZCByZWFzb24gdG8gZG8gc28gcGxlYXNlIHNoYXJlIGl0CndpdGggdGhlIFZlY3RvciB0ZWFtIGJ5IGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vZ2l0aHViLmNvbS90aW1iZXJpby92ZWN0b3IvaXNzdWVzL25ldz9sYWJlbHM9c2luayUzQStuZXdfcmVsaWNfbG9ncyJ9KSxgb3BlbmluZyBhbiBpc3N1ZWApLGAuYCksbWR4KCJoMyIseyJpZCI6InJldHJ5LXBvbGljeSJ9LGBSZXRyeSBQb2xpY3lgKSxtZHgoInAiLG51bGwsYFZlY3RvciB3aWxsIHJldHJ5IGZhaWxlZCByZXF1ZXN0cyAoc3RhdHVzID09IGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGA0MjlgKSxgLCA+PSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgNTAwYCksYCwgYW5kICE9IGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGA1MDFgKSxgKS4KT3RoZXIgcmVzcG9uc2VzIHdpbGwgYCxtZHgoImVtIix7cGFyZW50TmFtZToicCJ9LGBub3RgKSxgIGJlIHJldHJpZWQuIFlvdSBjYW4gY29udHJvbCB0aGUgbnVtYmVyIG9mIHJldHJ5CmF0dGVtcHRzIGFuZCBiYWNrb2ZmIHJhdGUgd2l0aCB0aGUgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI3JldHJ5X2F0dGVtcHRzIn0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSxgcmV0cnlfYXR0ZW1wdHNgKSksYCBhbmQKYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYHJldHJ5X2JhY2tvZmZfc2Vjc2ApLGAgb3B0aW9ucy5gKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/Yun/vector/website/docs/reference/sinks/new_relic_logs.md"],"names":["React","mdx","frontMatter","last_modified_on","delivery_guarantee","component_title","description","event_types","function_category","issues_url","operating_systems","sidebar_label","source_url","status","title","unsupported_operating_systems","metadata","Fields","Field","SVG","Tabs","TabItem","rightToc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tlast_modified_on: '2020-07-13',\n\tdelivery_guarantee: 'at_least_once',\n\tcomponent_title: 'New Relic Logs',\n\tdescription: 'The Vector `new_relic_logs` sink batches `log` events to New Relic\\'s log service via their log API.',\n\tevent_types: [\n\t\t'log'\n\t],\n\tfunction_category: 'transmit',\n\tissues_url: 'https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22sink%3A+new_relic_logs%22',\n\toperating_systems: [\n\t\t'Linux',\n\t\t'MacOS',\n\t\t'Windows'\n\t],\n\tsidebar_label: 'new_relic_logs|[\"log\"]',\n\tsource_url: 'https://github.com/timberio/vector/tree/master/src/sinks/new_relic_logs.rs',\n\tstatus: 'beta',\n\ttitle: 'New Relic Logs Sink',\n\tunsupported_operating_systems: []\n};\nexport const metadata = {\n  \"id\": \"reference/sinks/new_relic_logs\",\n  \"title\": \"New Relic Logs Sink\",\n  \"description\": \"The Vector `new_relic_logs` sink batches `log` events to New Relic's log service via their log API.\",\n  \"source\": \"@site/docs/reference/sinks/new_relic_logs.md\",\n  \"permalink\": \"/docs/reference/sinks/new_relic_logs\",\n  \"editUrl\": \"https://github.com/timberio/vector/edit/master/website/docs/reference/sinks/new_relic_logs.md\",\n  \"sidebar_label\": \"new_relic_logs|[\\\"log\\\"]\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"Loki Sink\",\n    \"permalink\": \"/docs/reference/sinks/loki\"\n  },\n  \"next\": {\n    \"title\": \"Papertrail Sink\",\n    \"permalink\": \"/docs/reference/sinks/papertrail\"\n  }\n};\n  /* @jsx mdx */\nimport Fields from '@site/src/components/Fields';\nimport Field from '@site/src/components/Field';\nimport SVG from 'react-inlinesvg';\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nexport const rightToc = [{\n  value: 'Configuration',\n  id: 'configuration',\n  children: [{\n    value: 'batch',\n    id: 'batch',\n    children: []\n  }, {\n    value: 'buffer',\n    id: 'buffer',\n    children: []\n  }, {\n    value: 'compression',\n    id: 'compression',\n    children: []\n  }, {\n    value: 'encoding',\n    id: 'encoding',\n    children: []\n  }, {\n    value: 'healthcheck',\n    id: 'healthcheck',\n    children: []\n  }, {\n    value: 'insert_key',\n    id: 'insert_key',\n    children: []\n  }, {\n    value: 'license_key',\n    id: 'license_key',\n    children: []\n  }, {\n    value: 'region',\n    id: 'region',\n    children: []\n  }, {\n    value: 'request',\n    id: 'request',\n    children: []\n  }]\n}, {\n  value: 'How It Works',\n  id: 'how-it-works',\n  children: [{\n    value: 'Buffers &amp; Batches',\n    id: 'buffers--batches',\n    children: []\n  }, {\n    value: 'Environment Variables',\n    id: 'environment-variables',\n    children: []\n  }, {\n    value: 'Health Checks',\n    id: 'health-checks',\n    children: []\n  }, {\n    value: 'Rate Limits',\n    id: 'rate-limits',\n    children: []\n  }, {\n    value: 'Retry Policy',\n    id: 'retry-policy',\n    children: []\n  }]\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`The Vector `}<inlineCode parentName=\"p\">{`new_relic_logs`}</inlineCode>{` sink\n`}<a parentName=\"p\" {...{\n        \"href\": \"#buffers--batches\"\n      }}>{`batches`}</a>{` `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/about/data-model/log/\"\n      }}><inlineCode parentName=\"a\">{`log`}</inlineCode></a>{` events to `}<a parentName=\"p\" {...{\n        \"href\": \"https://newrelic.com/\"\n      }}>{`New\nRelic's log service`}</a>{` via their `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.newrelic.com/docs/logs/new-relic-logs/log-api/introduction-log-api\"\n      }}>{`log\nAPI`}</a>{`.`}</p>\n    {\n      /*\n          THIS FILE IS AUTOGENERATED!\n           To make changes please edit the template located at:\n           website/docs/reference/sinks/new_relic_logs.md.erb\n      */\n    }\n    <h2 {...{\n      \"id\": \"configuration\"\n    }}>{`Configuration`}</h2>\n    <Tabs block={true} defaultValue=\"common\" values={[{\n      \"label\": \"Common\",\n      \"value\": \"common\"\n    }, {\n      \"label\": \"Advanced\",\n      \"value\": \"advanced\"\n    }]} mdxType=\"Tabs\">\n      <TabItem value=\"common\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"title=\\\"vector.toml\\\"\",\n            \"title\": \"\\\"vector.toml\\\"\"\n          }}>{`[sinks.my_sink_id]\n  # General\n  type = \"new_relic_logs\" # required\n  inputs = [\"my-source-or-transform-id\"] # required\n  healthcheck = true # optional, default\n  insert_key = \"xxxx\" # optional, no default\n  license_key = \"xxxx\" # optional, no default\n  region = \"us\" # optional, default\n\n  # Encoding\n  encoding.codec = \"json\" # optional, default\n\n  # Requests\n  compression = \"none\" # optional, default\n`}</code></pre>\n      </TabItem>\n      <TabItem value=\"advanced\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"title=\\\"vector.toml\\\"\",\n            \"title\": \"\\\"vector.toml\\\"\"\n          }}>{`[sinks.my_sink_id]\n  # General\n  type = \"new_relic_logs\" # required\n  inputs = [\"my-source-or-transform-id\"] # required\n  healthcheck = true # optional, default\n  insert_key = \"xxxx\" # optional, no default\n  license_key = \"xxxx\" # optional, no default\n  region = \"us\" # optional, default\n\n  # Batch\n  batch.max_bytes = 5240000 # optional, default, bytes\n  batch.max_events = 1000 # optional, no default, events\n  batch.timeout_secs = 1 # optional, default, seconds\n\n  # Buffer\n  buffer.max_events = 500 # optional, default, events, relevant when type = \"memory\"\n  buffer.max_size = 104900000 # required, bytes, required when type = \"disk\"\n  buffer.type = \"memory\" # optional, default\n  buffer.when_full = \"block\" # optional, default\n\n  # Encoding\n  encoding.codec = \"json\" # optional, default\n  encoding.except_fields = [\"timestamp\", \"message\", \"host\"] # optional, no default\n  encoding.only_fields = [\"timestamp\", \"message\", \"host\"] # optional, no default\n  encoding.timestamp_format = \"rfc3339\" # optional, default\n\n  # Request\n  request.in_flight_limit = 5 # optional, default, requests\n  request.rate_limit_duration_secs = 1 # optional, default, seconds\n  request.rate_limit_num = 100 # optional, default\n  request.retry_attempts = 18446744073709551615 # optional, default\n  request.retry_initial_backoff_secs = 1 # optional, default, seconds\n  request.retry_max_duration_secs = 10 # optional, default, seconds\n  request.timeout_secs = 30 # optional, default, seconds\n\n  # Requests\n  compression = \"none\" # optional, default\n`}</code></pre>\n      </TabItem>\n    </Tabs>\n    <Fields filters={true} mdxType=\"Fields\">\n      <Field common={false} defaultValue={null} enumValues={null} examples={[]} groups={[]} name={\"batch\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"table\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"batch\"\n        }}>{`batch`}</h3>\n        <p>{`Configures the sink batching behavior.`}</p>\n        <Fields filters={false} mdxType=\"Fields\">\n          <Field common={true} defaultValue={5240000} enumValues={null} examples={[5240000]} groups={[]} name={\"max_bytes\"} path={\"batch\"} relevantWhen={null} required={false} templateable={false} type={\"uint\"} unit={\"bytes\"} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"max_bytes\"\n            }}>{`max_bytes`}</h4>\n            <p>{`The maximum size of a batch, in bytes, before it is flushed.`}</p>\n          </Field>\n          <Field common={true} defaultValue={null} enumValues={null} examples={[1000]} groups={[]} name={\"max_events\"} path={\"batch\"} relevantWhen={null} required={false} templateable={false} type={\"uint\"} unit={\"events\"} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"max_events\"\n            }}>{`max_events`}</h4>\n            <p>{`The maximum size of a batch, in events, before it is flushed.\nSee `}<a parentName=\"p\" {...{\n                \"href\": \"#buffers--batches\"\n              }}>{`Buffers & Batches`}</a>{` for more info.`}</p>\n          </Field>\n          <Field common={true} defaultValue={1} enumValues={null} examples={[1]} groups={[]} name={\"timeout_secs\"} path={\"batch\"} relevantWhen={null} required={false} templateable={false} type={\"uint\"} unit={\"seconds\"} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"timeout_secs\"\n            }}>{`timeout_secs`}</h4>\n            <p>{`The maximum age of a batch before it is flushed.\nSee `}<a parentName=\"p\" {...{\n                \"href\": \"#buffers--batches\"\n              }}>{`Buffers & Batches`}</a>{` for more info.`}</p>\n          </Field>\n        </Fields>\n      </Field>\n      <Field common={false} defaultValue={null} enumValues={null} examples={[]} groups={[]} name={\"buffer\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"table\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"buffer\"\n        }}>{`buffer`}</h3>\n        <p>{`Configures the sink specific buffer behavior.`}</p>\n        <Fields filters={false} mdxType=\"Fields\">\n          <Field common={true} defaultValue={500} enumValues={null} examples={[500]} groups={[]} name={\"max_events\"} path={\"buffer\"} relevantWhen={{\n            \"type\": \"memory\"\n          }} required={false} templateable={false} type={\"uint\"} unit={\"events\"} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"max_events-1\"\n            }}>{`max_events`}</h4>\n            <p>{`The maximum number of `}<a parentName=\"p\" {...{\n                \"href\": \"/docs/about/data-model/\"\n              }}>{`events`}</a>{` allowed in the buffer.\nSee `}<a parentName=\"p\" {...{\n                \"href\": \"#buffers--batches\"\n              }}>{`Buffers & Batches`}</a>{` for more info.`}</p>\n          </Field>\n          <Field common={false} defaultValue={null} enumValues={null} examples={[104900000]} groups={[]} name={\"max_size\"} path={\"buffer\"} relevantWhen={{\n            \"type\": \"disk\"\n          }} required={true} templateable={false} type={\"uint\"} unit={\"bytes\"} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"max_size\"\n            }}>{`max_size`}</h4>\n            <p>{`The maximum size of the buffer on the disk.`}</p>\n          </Field>\n          <Field common={true} defaultValue={\"memory\"} enumValues={{\n            \"memory\": \"Stores the sink's buffer in memory. This is more performant, but less durable. Data will be lost if Vector is restarted forcefully.\",\n            \"disk\": \"Stores the sink's buffer on disk. This is less performant, but durable. Data will not be lost between restarts.\"\n          }} examples={[\"memory\", \"disk\"]} groups={[]} name={\"type\"} path={\"buffer\"} relevantWhen={null} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"type\"\n            }}>{`type`}</h4>\n            <p>{`The buffer's type and storage mechanism.`}</p>\n          </Field>\n          <Field common={false} defaultValue={\"block\"} enumValues={{\n            \"block\": \"Applies back pressure when the buffer is full. This prevents data loss, but will cause data to pile up on the edge.\",\n            \"drop_newest\": \"Drops new data as it's received. This data is lost. This should be used when performance is the highest priority.\"\n          }} examples={[\"block\", \"drop_newest\"]} groups={[]} name={\"when_full\"} path={\"buffer\"} relevantWhen={null} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"when_full\"\n            }}>{`when_full`}</h4>\n            <p>{`The behavior when the buffer becomes full.`}</p>\n          </Field>\n        </Fields>\n      </Field>\n      <Field common={true} defaultValue={\"none\"} enumValues={{\n        \"none\": \"No compression.\",\n        \"gzip\": \"[Gzip][urls.gzip] standard DEFLATE compression.\"\n      }} examples={[\"none\", \"gzip\"]} groups={[]} name={\"compression\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"compression\"\n        }}>{`compression`}</h3>\n        <p>{`The compression strategy used to compress the encoded event data before\ntransmission.`}</p>\n      </Field>\n      <Field common={true} defaultValue={null} enumValues={null} examples={[]} groups={[]} name={\"encoding\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"table\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"encoding\"\n        }}>{`encoding`}</h3>\n        <p>{`Configures the encoding specific sink behavior.`}</p>\n        <Fields filters={false} mdxType=\"Fields\">\n          <Field common={true} defaultValue={\"json\"} enumValues={{\n            \"json\": \"Each event is encoded into JSON and the payload is represented as a JSON array.\"\n          }} examples={[\"json\"]} groups={[]} name={\"codec\"} path={\"encoding\"} relevantWhen={null} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"codec\"\n            }}>{`codec`}</h4>\n            <p>{`The encoding codec used to serialize the events before outputting.`}</p>\n          </Field>\n          <Field common={false} defaultValue={null} enumValues={null} examples={[[\"timestamp\", \"message\", \"host\"]]} groups={[]} name={\"except_fields\"} path={\"encoding\"} relevantWhen={null} required={false} templateable={false} type={\"[string]\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"except_fields\"\n            }}>{`except_fields`}</h4>\n            <p>{`Prevent the sink from encoding the specified labels.`}</p>\n          </Field>\n          <Field common={false} defaultValue={null} enumValues={null} examples={[[\"timestamp\", \"message\", \"host\"]]} groups={[]} name={\"only_fields\"} path={\"encoding\"} relevantWhen={null} required={false} templateable={false} type={\"[string]\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"only_fields\"\n            }}>{`only_fields`}</h4>\n            <p>{`Limit the sink to only encoding the specified labels.`}</p>\n          </Field>\n          <Field common={false} defaultValue={\"rfc3339\"} enumValues={{\n            \"rfc3339\": \"Format as an RFC3339 string\",\n            \"unix\": \"Format as a unix timestamp, can be parsed as a Clickhouse DateTime\"\n          }} examples={[\"rfc3339\", \"unix\"]} groups={[]} name={\"timestamp_format\"} path={\"encoding\"} relevantWhen={null} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"timestamp_format\"\n            }}>{`timestamp_format`}</h4>\n            <p>{`How to format event timestamps.`}</p>\n          </Field>\n        </Fields>\n      </Field>\n      <Field common={true} defaultValue={true} enumValues={null} examples={[true, false]} groups={[]} name={\"healthcheck\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"bool\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"healthcheck\"\n        }}>{`healthcheck`}</h3>\n        <p>{`Enables/disables the sink healthcheck upon start.\nSee `}<a parentName=\"p\" {...{\n            \"href\": \"#health-checks\"\n          }}>{`Health Checks`}</a>{` for more info.`}</p>\n      </Field>\n      <Field common={true} defaultValue={null} enumValues={null} examples={[\"xxxx\", \"${NEW_RELIC_INSERT_KEY}\"]} groups={[]} name={\"insert_key\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"insert_key\"\n        }}>{`insert_key`}</h3>\n        <p>{`Your New Relic insert key (if applicable).`}</p>\n      </Field>\n      <Field common={true} defaultValue={null} enumValues={null} examples={[\"xxxx\", \"${NEW_RELIC_LICENSE_KEY}\"]} groups={[]} name={\"license_key\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"license_key\"\n        }}>{`license_key`}</h3>\n        <p>{`Your New Relic license key (if applicable).`}</p>\n      </Field>\n      <Field common={true} defaultValue={\"us\"} enumValues={{\n        \"us\": \"The US region\",\n        \"eu\": \"The EU region\"\n      }} examples={[\"us\", \"eu\"]} groups={[]} name={\"region\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"region\"\n        }}>{`region`}</h3>\n        <p>{`The API region to send logs to.`}</p>\n      </Field>\n      <Field common={false} defaultValue={null} enumValues={null} examples={[]} groups={[]} name={\"request\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"table\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"request\"\n        }}>{`request`}</h3>\n        <p>{`Configures the sink request behavior.`}</p>\n        <Fields filters={false} mdxType=\"Fields\">\n          <Field common={true} defaultValue={5} enumValues={null} examples={[5]} groups={[]} name={\"in_flight_limit\"} path={\"request\"} relevantWhen={null} required={false} templateable={false} type={\"uint\"} unit={\"requests\"} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"in_flight_limit\"\n            }}>{`in_flight_limit`}</h4>\n            <p>{`The maximum number of in-flight requests allowed at any given time.\nSee `}<a parentName=\"p\" {...{\n                \"href\": \"#rate-limits\"\n              }}>{`Rate Limits`}</a>{` for more info.`}</p>\n          </Field>\n          <Field common={true} defaultValue={1} enumValues={null} examples={[1]} groups={[]} name={\"rate_limit_duration_secs\"} path={\"request\"} relevantWhen={null} required={false} templateable={false} type={\"uint\"} unit={\"seconds\"} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"rate_limit_duration_secs\"\n            }}>{`rate_limit_duration_secs`}</h4>\n            <p>{`The time window, in seconds, used for the `}<a parentName=\"p\" {...{\n                \"href\": \"#rate_limit_num\"\n              }}><inlineCode parentName=\"a\">{`rate_limit_num`}</inlineCode></a>{` option.\nSee `}<a parentName=\"p\" {...{\n                \"href\": \"#rate-limits\"\n              }}>{`Rate Limits`}</a>{` for more info.`}</p>\n          </Field>\n          <Field common={true} defaultValue={100} enumValues={null} examples={[100]} groups={[]} name={\"rate_limit_num\"} path={\"request\"} relevantWhen={null} required={false} templateable={false} type={\"uint\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"rate_limit_num\"\n            }}>{`rate_limit_num`}</h4>\n            <p>{`The maximum number of requests allowed within the `}<a parentName=\"p\" {...{\n                \"href\": \"#rate_limit_duration_secs\"\n              }}><inlineCode parentName=\"a\">{`rate_limit_duration_secs`}</inlineCode></a>{`\ntime window.\nSee `}<a parentName=\"p\" {...{\n                \"href\": \"#rate-limits\"\n              }}>{`Rate Limits`}</a>{` for more info.`}</p>\n          </Field>\n          <Field common={false} defaultValue={18446744073709551615} enumValues={null} examples={[18446744073709551615]} groups={[]} name={\"retry_attempts\"} path={\"request\"} relevantWhen={null} required={false} templateable={false} type={\"uint\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"retry_attempts\"\n            }}>{`retry_attempts`}</h4>\n            <p>{`The maximum number of retries to make for failed requests. The default, for all\nintents and purposes, represents an infinite number of retries.\nSee `}<a parentName=\"p\" {...{\n                \"href\": \"#retry-policy\"\n              }}>{`Retry Policy`}</a>{` for more info.`}</p>\n          </Field>\n          <Field common={false} defaultValue={1} enumValues={null} examples={[1]} groups={[]} name={\"retry_initial_backoff_secs\"} path={\"request\"} relevantWhen={null} required={false} templateable={false} type={\"uint\"} unit={\"seconds\"} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"retry_initial_backoff_secs\"\n            }}>{`retry_initial_backoff_secs`}</h4>\n            <p>{`The amount of time to wait before attempting the first retry for a failed\nrequest. Once, the first retry has failed the fibonacci sequence will be used\nto select future backoffs.`}</p>\n          </Field>\n          <Field common={false} defaultValue={10} enumValues={null} examples={[10]} groups={[]} name={\"retry_max_duration_secs\"} path={\"request\"} relevantWhen={null} required={false} templateable={false} type={\"uint\"} unit={\"seconds\"} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"retry_max_duration_secs\"\n            }}>{`retry_max_duration_secs`}</h4>\n            <p>{`The maximum amount of time, in seconds, to wait between retries.`}</p>\n          </Field>\n          <Field common={true} defaultValue={30} enumValues={null} examples={[30]} groups={[]} name={\"timeout_secs\"} path={\"request\"} relevantWhen={null} required={false} templateable={false} type={\"uint\"} unit={\"seconds\"} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"timeout_secs-1\"\n            }}>{`timeout_secs`}</h4>\n            <p>{`The maximum time a request can take before being aborted. It is highly\nrecommended that you do not lower value below the service's internal timeout,\nas this could create orphaned requests, pile on retries, and result in\nduplicate data downstream.\nSee `}<a parentName=\"p\" {...{\n                \"href\": \"#buffers--batches\"\n              }}>{`Buffers & Batches`}</a>{` for more info.`}</p>\n          </Field>\n        </Fields>\n      </Field>\n    </Fields>\n    <h2 {...{\n      \"id\": \"how-it-works\"\n    }}>{`How It Works`}</h2>\n    <h3 {...{\n      \"id\": \"buffers--batches\"\n    }}>{`Buffers & Batches`}</h3>\n    <SVG src=\"/img/buffers-and-batches-serial.svg\" mdxType=\"SVG\" />\n    <p>{`The `}<inlineCode parentName=\"p\">{`new_relic_logs`}</inlineCode>{` sink buffers & batches data as\nshown in the diagram above. You'll notice that Vector treats these concepts\ndifferently, instead of treating them as global concepts, Vector treats them\nas sink specific concepts. This isolates sinks, ensuring services disruptions\nare contained and `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/about/guarantees/\"\n      }}>{`delivery guarantees`}</a>{` are honored.`}</p>\n    <p><em parentName=\"p\">{`Batches`}</em>{` are flushed when 1 of 2 conditions are met:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`The batch age meets or exceeds the configured `}<a parentName=\"li\" {...{\n          \"href\": \"#timeout_secs\"\n        }}><inlineCode parentName=\"a\">{`timeout_secs`}</inlineCode></a>{`.`}</li>\n      <li parentName=\"ol\">{`The batch size meets or exceeds the configured `}<a parentName=\"li\" {...{\n          \"href\": \"#max_events\"\n        }}><inlineCode parentName=\"a\">{`max_events`}</inlineCode></a>{`.`}</li>\n    </ol>\n    <p><em parentName=\"p\">{`Buffers`}</em>{` are controlled via the `}<a parentName=\"p\" {...{\n        \"href\": \"#buffer\"\n      }}><inlineCode parentName=\"a\">{`buffer.*`}</inlineCode></a>{` options.`}</p>\n    <h3 {...{\n      \"id\": \"environment-variables\"\n    }}>{`Environment Variables`}</h3>\n    <p>{`Environment variables are supported through all of Vector's configuration.\nSimply add `}<inlineCode parentName=\"p\">{`\\${MY_ENV_VAR}`}</inlineCode>{` in your Vector configuration file and the variable\nwill be replaced before being evaluated.`}</p>\n    <p>{`You can learn more in the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/setup/configuration/#environment-variables\"\n      }}>{`Environment Variables`}</a>{` section.`}</p>\n    <h3 {...{\n      \"id\": \"health-checks\"\n    }}>{`Health Checks`}</h3>\n    <p>{`Health checks ensure that the downstream service is accessible and ready to\naccept data. This check is performed upon sink initialization.\nIf the health check fails an error will be logged and Vector will proceed to\nstart.`}</p>\n    <h4 {...{\n      \"id\": \"require-health-checks\"\n    }}>{`Require Health Checks`}</h4>\n    <p>{`If you'd like to exit immediately upon a health check failure, you can\npass the `}<inlineCode parentName=\"p\">{`--require-healthy`}</inlineCode>{` flag:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`vector --config /etc/vector/vector.toml --require-healthy\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"disable-health-checks\"\n    }}>{`Disable Health Checks`}</h4>\n    <p>{`If you'd like to disable health checks for this sink you can set the\n`}<inlineCode parentName=\"p\">{`healthcheck`}</inlineCode>{` option to `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"rate-limits\"\n    }}>{`Rate Limits`}</h3>\n    <p>{`Vector offers a few levers to control the rate and volume of requests to the\ndownstream service. Start with the `}<a parentName=\"p\" {...{\n        \"href\": \"#rate_limit_duration_secs\"\n      }}><inlineCode parentName=\"a\">{`rate_limit_duration_secs`}</inlineCode></a>{` and\n`}<inlineCode parentName=\"p\">{`rate_limit_num`}</inlineCode>{` options to ensure Vector does not exceed the specified\nnumber of requests in the specified window. You can further control the pace at\nwhich this window is saturated with the `}<a parentName=\"p\" {...{\n        \"href\": \"#in_flight_limit\"\n      }}><inlineCode parentName=\"a\">{`in_flight_limit`}</inlineCode></a>{` option, which\nwill guarantee no more than the specified number of requests are in-flight at\nany given time.`}</p>\n    <p>{`Please note, Vector's defaults are carefully chosen and it should be rare that\nyou need to adjust these. If you found a good reason to do so please share it\nwith the Vector team by `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/timberio/vector/issues/new?labels=sink%3A+new_relic_logs\"\n      }}>{`opening an issue`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"retry-policy\"\n    }}>{`Retry Policy`}</h3>\n    <p>{`Vector will retry failed requests (status == `}<inlineCode parentName=\"p\">{`429`}</inlineCode>{`, >= `}<inlineCode parentName=\"p\">{`500`}</inlineCode>{`, and != `}<inlineCode parentName=\"p\">{`501`}</inlineCode>{`).\nOther responses will `}<em parentName=\"p\">{`not`}</em>{` be retried. You can control the number of retry\nattempts and backoff rate with the `}<a parentName=\"p\" {...{\n        \"href\": \"#retry_attempts\"\n      }}><inlineCode parentName=\"a\">{`retry_attempts`}</inlineCode></a>{` and\n`}<inlineCode parentName=\"p\">{`retry_backoff_secs`}</inlineCode>{` options.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}