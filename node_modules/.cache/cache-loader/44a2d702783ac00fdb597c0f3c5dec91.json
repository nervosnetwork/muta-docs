{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/Desktop/vdocs/website/new-docs/docs/advanced/core/mempool.md","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/docs/advanced/core/mempool.md","mtime":1596522420437},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-advanced-core-mempool-md-fcd.json","mtime":1596516671756},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1588759133114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Yun/Desktop/vdocs/website/new-docs/docs/advanced/core/mempool.md"],"names":["React","mdx","frontMatter","title","metadata","rightToc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"gHACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,KAAK,CAAE,SADqB,CAApB,CAGT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,KAAM,uBADgB,CAEtB,QAAS,SAFa,CAGtB,cAAe,SAHO,CAItB,SAAU,qCAJY,CAKtB,YAAa,sCALS,CAMtB,UAAW,yFANW,CAOtB,UAAW,MAPW,CAQtB,WAAY,CACV,QAAS,aADC,CAEV,YAAa,sCAFH,CARU,CAYtB,OAAQ,CACN,QAAS,SADH,CAEN,YAAa,sCAFP,CAZc,CAAjB,CAiBL,cAEF,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CAAC,CACvBC,KAAK,CAAE,MADgB,CAEvBC,EAAE,CAAE,MAFmB,CAGvBC,QAAQ,CAAE,EAHa,CAAD,CAIrB,CACDF,KAAK,CAAE,MADN,CAEDC,EAAE,CAAE,MAFH,CAGDC,QAAQ,CAAE,CAAC,CACTF,KAAK,CAAE,MADE,CAETC,EAAE,CAAE,MAFK,CAGTC,QAAQ,CAAE,EAHD,CAAD,CAIP,CACDF,KAAK,CAAE,MADN,CAEDC,EAAE,CAAE,MAFH,CAGDC,QAAQ,CAAE,EAHT,CAJO,CAQP,CACDF,KAAK,CAAE,MADN,CAEDC,EAAE,CAAE,MAFH,CAGDC,QAAQ,CAAE,EAHT,CARO,CAHT,CAJqB,CAoBrB,CACDF,KAAK,CAAE,MADN,CAEDC,EAAE,CAAE,MAFH,CAGDC,QAAQ,CAAE,EAHT,CApBqB,CAAjB,CAyBP,KAAMC,CAAAA,aAAa,CAAGC,IAAI,EAAI,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHD,CAKA,KAAMG,CAAAA,WAAW,CAAG,CAClBV,QADkB,CAApB,CAGA,KAAMW,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGN,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,SAAQ,CACN,KAAM,MADA,CAAR,CAEK,MAFL,CAFK,CAKL,aAAK,mEAAL,CALK,CAML,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,0CAAtB,CADF,CAEE,UAAI,UAAU,CAAC,IAAf,EAAsB,oBAAtB,CAFF,CANK,CAUL,aAAK,kCAAL,CAVK,CAWL,SAAQ,CACN,QAAS,CADH,CAAR,CAGE,UAAI,UAAU,CAAC,IAAf,EAAsB,iDAAtB,CAHF,CAXK,CAgBL,SAAQ,CACN,KAAM,MADA,CAAR,CAEK,MAFL,CAhBK,CAmBL,SAAQ,CACN,KAAM,MADA,CAAR,CAEK,MAFL,CAnBK,CAsBL,aAAK,0DAAL,CAtBK,CAuBL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,oBAAtB,CADF,CAEE,UAAI,UAAU,CAAC,IAAf,EAAsB,yBAAtB,CAFF,CAGE,UAAI,UAAU,CAAC,IAAf,EAAsB,kCAAtB,CAHF,CAIE,UAAI,UAAU,CAAC,IAAf,EAAsB,yBAAtB,CAJF,CAvBK,CA6BL,aAAK,wFAAL,CA7BK,CA8BL,aAAK,8JAAL,CAAqK,YAArK,CAAmL,8CAAnL,CA9BK,CA+BL,SAAQ,CACN,KAAM,MADA,CAAR,CAEK,MAFL,CA/BK,CAkCL,aAAK,iEAAL,CAlCK,CAmCL,aAAK,ySAAL,CAnCK,CAoCL,aAAK,wIAAL,CApCK,CAqCL,SAAQ,CACN,KAAM,MADA,CAAR,CAEK,MAFL,CArCK,CAwCL,aAAK,0MAAL,CAxCK,CAyCL,aAAK,gJAAL,CAAqJ,oBAAK,UAAU,CAAC,GAAhB,EAAwB,CACzK,KAAM,SADmK,CAAxB,EAEhJ,kBAAG,UAAU,CAAC,KAAd,EAAwB,CACvB,OAAQ,OADe,CAEvB,YAAa,cAFU,CAAxB,EAGI,GAHJ,CAFgJ,CAArJ,CAKwB,sCALxB,CAzCK,CA+CL,SAAQ,CACN,KAAM,MADA,CAAR,CAEK,MAFL,CA/CK,CAkDL,aAAK,sHAAL,CAlDK,CAmDL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,EAEE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAFF,CAAL,CAnDK,CAuFL,aAAK,gCAAL,CAAqC,kBAAY,UAAU,CAAC,GAAvB,EAA6B,WAA7B,CAArC,CAA4F,GAA5F,CAA+F,kBAAY,UAAU,CAAC,GAAvB,EAA6B,SAA7B,CAA/F,CAAoJ,KAApJ,CAAyJ,kBAAY,UAAU,CAAC,GAAvB,EAA6B,UAA7B,CAAzJ,CAA+M,QAA/M,CAAuN,kBAAY,UAAU,CAAC,GAAvB,EAA6B,OAA7B,CAAvN,CAA0Q,UAA1Q,CAAoR,kBAAY,UAAU,CAAC,GAAvB,EAA6B,UAA7B,CAApR,CAA0U,OAA1U,CAAiV,kBAAY,UAAU,CAAC,GAAvB,EAA6B,SAA7B,CAAjV,CAAsY,aAAtY,CAAmZ,kBAAY,UAAU,CAAC,GAAvB,EAA6B,OAA7B,CAAnZ,CAAsc,UAAtc,CAAgd,kBAAY,UAAU,CAAC,GAAvB,EAA6B,KAA7B,CAAhd,CAAigB,OAAjgB,CAvFK,CAwFL,aAAK,wBAAL,CAA6B,kBAAY,UAAU,CAAC,GAAvB,EAA6B,eAA7B,CAA7B,CAAwF,aAAxF,CAAqG,kBAAY,UAAU,CAAC,GAAvB,EAA6B,iBAA7B,CAArG,CAAkK,YAAlK,CAA8K,kBAAY,UAAU,CAAC,GAAvB,EAA6B,mBAA7B,CAA9K,CAA6O,GAA7O,CAxFK,CAyFL,aAAK,gBAAL,CAAqB,kBAAY,UAAU,CAAC,GAAvB,EAA6B,OAA7B,CAArB,CAAwE,gBAAxE,CAAwF,kBAAY,UAAU,CAAC,GAAvB,EAA6B,gBAA7B,CAAxF,CAAoJ,KAApJ,CAAyJ,kBAAY,UAAU,CAAC,GAAvB,EAA6B,WAA7B,CAAzJ,CAAgN,QAAhN,CAAwN,kBAAY,UAAU,CAAC,GAAvB,EAA6B,cAA7B,CAAxN,CAAkR,iBAAlR,CAAmS,kBAAY,UAAU,CAAC,GAAvB,EAA6B,iBAA7B,CAAnS,CAAgW,eAAhW,CAA+W,kBAAY,UAAU,CAAC,GAAvB,EAA6B,iBAA7B,CAA/W,CAA4a,KAA5a,CAAib,kBAAY,UAAU,CAAC,GAAvB,EAA6B,WAA7B,CAAjb,CAAwe,QAAxe,CAAgf,kBAAY,UAAU,CAAC,GAAvB,EAA6B,aAA7B,CAAhf,CAAyiB,kBAAziB,CAA2jB,kBAAY,UAAU,CAAC,GAAvB,EAA6B,mBAA7B,CAA3jB,CAA0nB,eAA1nB,CAAyoB,kBAAY,UAAU,CAAC,GAAvB,EAA6B,gBAA7B,CAAzoB,CAAqsB,uBAArsB,CAA4tB,kBAAY,UAAU,CAAC,GAAvB,EAA6B,OAA7B,CAA5tB,CAA+wB,SAA/wB,CAAwxB,kBAAY,UAAU,CAAC,GAAvB,EAA6B,OAA7B,CAAxxB,CAA20B,cAA30B,CAAy1B,kBAAY,UAAU,CAAC,GAAvB,EAA6B,OAA7B,CAAz1B,CAA44B,OAA54B,CAzFK,CA0FL,aAAK,6CAAL,CAAkD,kBAAY,UAAU,CAAC,GAAvB,EAA6B,iBAA7B,CAAlD,CAA+G,KAA/G,CAAoH,kBAAY,UAAU,CAAC,GAAvB,EAA6B,mBAA7B,CAApH,CAAmL,gBAAnL,CAAmM,kBAAY,UAAU,CAAC,GAAvB,EAA6B,aAA7B,CAAnM,CAA4P,8CAA5P,CAA0S,kBAAY,UAAU,CAAC,GAAvB,EAA6B,eAA7B,CAA1S,CAAqW,6BAArW,CAAkY,kBAAY,UAAU,CAAC,GAAvB,EAA6B,SAA7B,CAAlY,CAAub,SAAvb,CAAgc,kBAAY,UAAU,CAAC,GAAvB,EAA6B,UAA7B,CAAhc,CAAsf,OAAtf,CAA6f,kBAAY,UAAU,CAAC,GAAvB,EAA6B,MAA7B,CAA7f,CAA+iB,GAA/iB,CA1FK,CA2FL,aAAK,oBAAL,CAAyB,kBAAY,UAAU,CAAC,GAAvB,EAA6B,WAA7B,CAAzB,CAAgF,cAAhF,CAA8F,kBAAY,UAAU,CAAC,GAAvB,EAA6B,eAA7B,CAA9F,CAAyJ,QAAzJ,CAAiK,kBAAY,UAAU,CAAC,GAAvB,EAA6B,aAA7B,CAAjK,CAA0N,QAA1N,CAAkO,kBAAY,UAAU,CAAC,GAAvB,EAA6B,WAA7B,CAAlO,CAAyR,MAAzR,CAA+R,kBAAY,UAAU,CAAC,GAAvB,EAA6B,SAA7B,CAA/R,CAAoV,OAApV,CAA2V,kBAAY,UAAU,CAAC,GAAvB,EAA6B,MAA7B,CAA3V,CAA6Y,SAA7Y,CAAsZ,kBAAY,UAAU,CAAC,GAAvB,EAA6B,UAA7B,CAAtZ,CAA4c,GAA5c,CA3FK,CA4FL,aAAK,wBAAL,CA5FK,CA6FL,aAAG,oBAAK,UAAU,CAAC,GAAhB,EAAwB,CACvB,MAAO,oDADgB,CAEvB,MAAO,OAFgB,CAAxB,EAAH,CA7FK,CAiGL,aAAG,oBAAK,UAAU,CAAC,GAAhB,EAAwB,CACvB,KAAM,SADiB,CAAxB,EAEE,kBAAG,UAAU,CAAC,KAAd,EAAwB,CACvB,OAAQ,OADe,CAEvB,YAAa,cAFU,CAAxB,EAGI,GAHJ,CAFF,CAAH,CAKwB,wJALxB,CAjGK,CAAP,CAwGD,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\ttitle: 'Mempool'\n};\nexport const metadata = {\n  \"id\": \"advanced/core/mempool\",\n  \"title\": \"Mempool\",\n  \"description\": \"## 设计要求\",\n  \"source\": \"@site/docs/advanced/core/mempool.md\",\n  \"permalink\": \"/new-docs/docs/advanced/core/mempool\",\n  \"editUrl\": \"https://github.com/nervosnetwork/muta/edit/master/website/docs/advanced/core/mempool.md\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"P2P Network\",\n    \"permalink\": \"/new-docs/docs/advanced/core/network\"\n  },\n  \"next\": {\n    \"title\": \"Storage\",\n    \"permalink\": \"/new-docs/docs/advanced/core/storage\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: '设计要求',\n  id: '设计要求',\n  children: []\n}, {\n  value: '设计方案',\n  id: '设计方案',\n  children: [{\n    value: '优良性能',\n    id: '优良性能',\n    children: []\n  }, {\n    value: '公平打包',\n    id: '公平打包',\n    children: []\n  }, {\n    value: '提前同步',\n    id: '提前同步',\n    children: []\n  }]\n}, {\n  value: '具体设计',\n  id: '具体设计',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"设计要求\"\n    }}>{`设计要求`}</h2>\n    <p>{`Mempool 是节点负责收集新交易以及打包新交易给共识模块进行共识的功能模块。很自然地，我们对 Mempool 会提出一些要求：`}</p>\n    <ol>\n      <li parentName=\"ol\">{`性能优秀，在普通计算设备中运行即可达到每秒插入 10000+ 笔交易的性能要求。`}</li>\n      <li parentName=\"ol\">{`公平性，按照收到交易的顺序打包交易。`}</li>\n    </ol>\n    <p>{`此外，为了配合共识过程与交易同步过程并发的设计，还有第三个要求：`}</p>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`打包给共识的交易包含两部分：用于共识的 order 交易以及用于同步的 propose 交易。`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"设计方案\"\n    }}>{`设计方案`}</h2>\n    <h3 {...{\n      \"id\": \"优良性能\"\n    }}>{`优良性能`}</h3>\n    <p>{`要获得优秀的性能，首先要分析交易插入的过程，找到性能瓶颈之处对症解决。一笔交易插入 Mempool 的过程包括：`}</p>\n    <ol>\n      <li parentName=\"ol\">{`检查交易池是否已满，以避免内存溢出。`}</li>\n      <li parentName=\"ol\">{`检查交易是否已经被交易池包含，以避免重复插入。`}</li>\n      <li parentName=\"ol\">{`检查交易的签名是否正确，格式是否合规，以避免插入明显错误的交易。`}</li>\n      <li parentName=\"ol\">{`检查交易是否已经上链，以避免共识已上链的交易。`}</li>\n    </ol>\n    <p>{`随着区块链的不断增长，历史交易数据日益庞大，步骤 4 的查询将会成为性能黑洞。我们通过在交易中设置一个必填的 timeout 字段，以及一个全局约束参数 g 来解决该问题。`}</p>\n    <p>{`具体来说，当某笔交易的 timeout 为 t，若该交易在高度 t 仍未被打包，则会被视为失效而被节点抛弃。为了避免用户设置过高的 timeout，若最新高度为 h 的节点收到的交易的 timeout t > h + g，同样会被节点视为非法而抛弃。在这种机制的约束下，最新高度为 h 的节点仅需保存高度区间为 `}{`[h - g, h]`}{` 的历史交易用于查重，查重的计算复杂度和存储复杂度均降到了O(g)，与历史交易总量无关。`}</p>\n    <h3 {...{\n      \"id\": \"公平打包\"\n    }}>{`公平打包`}</h3>\n    <p>{`在交易优先级相同的情况下，如果节点后收到的交易却先被打包，这显然有违公平性。因此，交易池的交易必须按照先入先出的原则进行打包。`}</p>\n    <p>{`然而，如果按照以太坊的 nonce 单调递增的设计（交易中的 nonce 字段的设计是为了确保交易的唯一性），若交易池同时包含多笔同一用户发出的交易，则这些交易之间还需要满足偏序关系，这会给打包机制带来非常大的复杂性。因此，我们采用随机 nonce 的方式生成唯一交易，这种设计还会带来其他一些额外的好处，比如获得了更好的并发执行能力（例如同一个用户发出的多笔交易被同一个区块打包，在以太坊中这些交易必须顺序执行，而采用随机 nonce 后，我们就可以并发执行这些交易），简化钱包的设计（在以太坊中，钱包需要同步最新的 nonce，以避免发出重复的交易，而在我们的设计中就没有这样的要求）。`}</p>\n    <p>{`总之，强制要求一个用户的所有交易保持偏序是没有必要且低效的，如果某些交易之间存在某种依赖关系，我们可以使用 ref 字段来表示这种关系，以此获得比以太坊更通用的依赖表达，比如用于表示不同用户之间交易的依赖关系。并且我们的顺序打包方案可以很容易地扩展到满足这种依赖需求。`}</p>\n    <h3 {...{\n      \"id\": \"提前同步\"\n    }}>{`提前同步`}</h3>\n    <p>{`由于区块链是一个分布式系统，不同节点的交易池所包含的交易集合不会完全相同。共识过程与交易同步打包的核心思想是，在交易池中包含的交易很多，无法被一次共识完成的情况下（受限于 cycle_limit，类似以太坊的 gas_limit），未参与共识的交易的同步过程可以与共识过程并发进行。通过这样的设计，在下一个高度的共识开始的时候，参与共识的交易的同步过程已经提前一个高度开始了，共识效率因此得到了提升。`}</p>\n    <p>{`具体来说，就是交易池打包的时候，在 order 交易满了之后，继续打包交易作为 propose 交易。在共识的时候，leader 节点发出的提案中包含了 order 交易 和 propose 交易（提案中包含的实际上都是交易哈希，在共识过程中，我们采用的是 compact block`}<sup parentName=\"p\" {...{\n        \"id\": \"fnref-1\"\n      }}><a parentName=\"sup\" {...{\n          \"href\": \"#fn-1\",\n          \"className\": \"footnote-ref\"\n        }}>{`1`}</a></sup>{` 的设计）。order 交易参与共识，而 propose 交易开始同步。`}</p>\n    <h2 {...{\n      \"id\": \"具体设计\"\n    }}>{`具体设计`}</h2>\n    <p>{`为了满足以上要求，我们用 Map 和 Queue 结构共享存储交易数据，Map 可快速查询和删除，而 Queue 满足先入先出的打包要求。事实上，我们用了两个 queue，就像两个杯子交替倒牛奶。Mempool 的核心数据结构如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`struct TxCache {\n    /// 用 queue 实现先入先出的打包功能. \n    /// 用两个 queue 轮流存储交易. 一个 queue 当前轮值, 另一个则作为替补. \n    /// 打包时从当前轮值的 queue 中顺序打包.\n    queue_0: Queue<SharedTx>,\n    queue_1: Queue<SharedTx>,\n    /// 用 map 完成高效的随机查询和删除交易.\n    map: Map<Hash, SharedTx>,\n    /// 指示当前轮值的 queue, true 为 queue_0, false 为 queue_1.\n    is_zero: AtomicBool,\n    /// 用于原子操作，以妥善处理打包与插入的并发问题. \n    concurrent_count: AtomicUsize,\n}\n\n/// 用于 map 和 queue 中共享的交易结构\ntype SharedTx = Arc<TxWrapper>;\n\nstruct TxWrapper {\n    tx: SignedTransaction,\n    /// 该交易是否被 map 删除，有该标识的交易在打包交易时会被跳过，并且从 queue 中删除\n    removed: AtomicBool,\n    /// 避免重复同步的标识，有该标识的交易在打包 propose 交易时会被跳过\n    proposed: AtomicBool,\n}\n\n/// 用于存储共识同步返回的交易\ntype CallbackCache = Map<Hash, SignedTransaction>;\n\n/// Mempool 打包返回给共识模块的数据结构\nstruct MixedTxHashes {\n    order_tx_hashes: Vec<Hash>,\n    propose_tx_hashes: Vec<Hash>,\n}\n`}</code></pre>\n    <p>{`通过所有检查的新交易在插入 Mempool 时，首先包装为 `}<inlineCode parentName=\"p\">{`TxWrapper`}</inlineCode>{`（`}<inlineCode parentName=\"p\">{`removed`}</inlineCode>{` 和 `}<inlineCode parentName=\"p\">{`proposed`}</inlineCode>{` 均设置为 `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{`）。然后转换为 `}<inlineCode parentName=\"p\">{`SharedTx`}</inlineCode>{` 并插入 `}<inlineCode parentName=\"p\">{`TxCache`}</inlineCode>{` 中（插入当前轮值的 `}<inlineCode parentName=\"p\">{`queue`}</inlineCode>{` 的尾部，以及 `}<inlineCode parentName=\"p\">{`map`}</inlineCode>{` 中）。 `}</p>\n    <p>{`Mempool 收到共识的打包请求时，返回 `}<inlineCode parentName=\"p\">{`MixedTxHashes`}</inlineCode>{`，其中包含用于共识的 `}<inlineCode parentName=\"p\">{`order_tx_hashes`}</inlineCode>{` 和用于提前同步的 `}<inlineCode parentName=\"p\">{`propose_tx_hashes`}</inlineCode>{`。`}</p>\n    <p>{`打包算法如下，从当前轮值的 `}<inlineCode parentName=\"p\">{`queue`}</inlineCode>{` 的头部开始弹出交易，跳过 `}<inlineCode parentName=\"p\">{`removed = true`}</inlineCode>{` 的 `}<inlineCode parentName=\"p\">{`TxWrapper`}</inlineCode>{`，直到达到 `}<inlineCode parentName=\"p\">{`cycle_limit `}</inlineCode>{`上限为止，将这些交易哈希插入 `}<inlineCode parentName=\"p\">{`order_tx_hashes`}</inlineCode>{` 中。继续弹出交易，跳过 `}<inlineCode parentName=\"p\">{`proposed = true`}</inlineCode>{` 的 `}<inlineCode parentName=\"p\">{`TxWrapper`}</inlineCode>{`，直到达到 `}<inlineCode parentName=\"p\">{`cycle_limit`}</inlineCode>{` 上限为止，将这些交易哈希插入 `}<inlineCode parentName=\"p\">{`propose_tx_hashes`}</inlineCode>{` 中。以上弹出的交易除了 `}<inlineCode parentName=\"p\">{`removed = true`}</inlineCode>{` 的交易外都按照弹出顺序插入到当前替补的 `}<inlineCode parentName=\"p\">{`queue`}</inlineCode>{` 中。当轮值 `}<inlineCode parentName=\"p\">{`queue`}</inlineCode>{` 全部弹出后，交换两个 `}<inlineCode parentName=\"p\">{`queue`}</inlineCode>{` 的身份。`}</p>\n    <p>{`当节点收到来自 leader 的 proposal 时，会请求 Mempool 检查 `}<inlineCode parentName=\"p\">{`order_tx_hashes`}</inlineCode>{` 和 `}<inlineCode parentName=\"p\">{`propose_tx_hashes`}</inlineCode>{`。Mempool 通过查询 `}<inlineCode parentName=\"p\">{`TxCache.map`}</inlineCode>{` 确定交易是否存在，对于缺失的交易发起同步请求。对于同步返回的 order 交易插入到 `}<inlineCode parentName=\"p\">{`CallbackCache`}</inlineCode>{` 中，而对于同步返回的 propose 交易则插入到 `}<inlineCode parentName=\"p\">{`TxCache`}</inlineCode>{`  中，并将 `}<inlineCode parentName=\"p\">{`proposed`}</inlineCode>{` 设置为 `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`。`}</p>\n    <p>{`Mempool 收到共识的删除指定 `}<inlineCode parentName=\"p\">{`tx_hashes`}</inlineCode>{` 集合的请求时，先清空 `}<inlineCode parentName=\"p\">{`CallbackCache`}</inlineCode>{`，然后查询 `}<inlineCode parentName=\"p\">{`TxCache.map`}</inlineCode>{`，将对应的 `}<inlineCode parentName=\"p\">{`TxWrapper`}</inlineCode>{` 中的 `}<inlineCode parentName=\"p\">{`removed`}</inlineCode>{` 设置为 `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`，然后删除该 `}<inlineCode parentName=\"p\">{`SharedTx`}</inlineCode>{`。`}</p>\n    <p>{`Mempool 的插入和打包过程如下图所示。`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../../../../../static/docs-img/mempool_process.png\",\n        \"alt\": \"image\"\n      }}></img></p>\n    <p><sup parentName=\"p\" {...{\n        \"id\": \"fnref-1\"\n      }}><a parentName=\"sup\" {...{\n          \"href\": \"#fn-1\",\n          \"className\": \"footnote-ref\"\n        }}>{`1`}</a></sup>{` compact block: 压缩区块，leader 发送的 proposal 中仅包含交易哈希，收到 proposal 的节点检查交易哈希是否在本地 Mempool 中，如果没有则向 leader 请求缺失的完整交易。通过 compact block 的设计，可以减少交易传输量，提高带宽利用率。`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}