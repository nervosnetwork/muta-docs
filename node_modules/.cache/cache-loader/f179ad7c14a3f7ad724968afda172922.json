{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js??ref--9-1!/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--9-2!/Users/Yun/Desktop/vdocs/website/new-docs/plugins/guides/markdownLoader.js??ref--9-3!/Users/Yun/Desktop/vdocs/website/new-docs/guides/getting-started/structuring.md?truncated=true","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/guides/getting-started/structuring.md","mtime":1595397619914},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/.docusaurus/guides/site-guides-getting-started-structuring-md-20b.json","mtime":1595934272358},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/plugins/guides/markdownLoader.js","mtime":1594780808724}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL1l1bi9EZXNrdG9wL3Zkb2NzL3dlYnNpdGUvbmV3LWRvY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXtsYXN0X21vZGlmaWVkX29uOicyMDIwLTA3LTEzJyx0aXRsZTonU3RydWN0dXJpbmcgWW91ciBMb2cgRGF0YScsZGVzY3JpcHRpb246J0hvdyB0byBwYXJzZSBsb2cgZGF0YSBpbiBWZWN0b3InLHNlcmllc19wb3NpdGlvbjoyLGF1dGhvcl9naXRodWI6J2h0dHBzOi8vZ2l0aHViLmNvbS96aG91eXVuLXpvZScsdGFnczpbJ3R5cGU6IHR1dG9yaWFsJywnZG9tYWluOiBjb25maWcnXX07ZXhwb3J0IGNvbnN0IG1ldGFkYXRhPXsiY2F0ZWdvcmllcyI6W3sibmFtZSI6ImdldHRpbmctc3RhcnRlZCIsInRpdGxlIjoiR2V0dGluZyBTdGFydGVkIiwiZGVzY3JpcHRpb24iOiJUYWtlIFZlY3RvciBmcm9tIHplcm8gdG8gcHJvZHVjdGlvbiBpbiB1bmRlciAxMCBtaW51dGVzLiIsInBlcm1hbGluayI6Ii9uZXctZG9jcy9ndWlkZXMvZ2V0dGluZy1zdGFydGVkIn1dLCJjb3ZlckxhYmVsIjoiU3RydWN0dXJpbmcgWW91ciBMb2cgRGF0YSIsImRlc2NyaXB0aW9uIjoiSG93IHRvIHBhcnNlIGxvZyBkYXRhIGluIFZlY3RvciIsInBlcm1hbGluayI6Ii9uZXctZG9jcy9ndWlkZXMvZ2V0dGluZy1zdGFydGVkL3N0cnVjdHVyaW5nIiwicmVhZGluZ1RpbWUiOiI2IG1pbiByZWFkIiwic2VyaWVzUG9zaXRpb24iOjIsInNvdXJjZSI6IkBzaXRlL2d1aWRlcy9nZXR0aW5nLXN0YXJ0ZWQvc3RydWN0dXJpbmcubWQiLCJ0YWdzIjpbeyJsYWJlbCI6InR5cGU6IHR1dG9yaWFsIiwicGVybWFsaW5rIjoiL25ldy1kb2NzL2d1aWRlcy90YWdzL3R5cGUtdHV0b3JpYWwifSx7ImxhYmVsIjoiZG9tYWluOiBjb25maWciLCJwZXJtYWxpbmsiOiIvbmV3LWRvY3MvZ3VpZGVzL3RhZ3MvZG9tYWluLWNvbmZpZyJ9XSwidGl0bGUiOiJTdHJ1Y3R1cmluZyBZb3VyIExvZyBEYXRhIiwidHJ1bmNhdGVkIjpmYWxzZSwicHJldkl0ZW0iOnsidGl0bGUiOiJIZWxsbyBXb3JsZC4gWW91ciBGaXJzdCBNdXRhIEJsb2NrY2hhaW4uIiwicGVybWFsaW5rIjoiL25ldy1kb2NzL2d1aWRlcy9nZXR0aW5nLXN0YXJ0ZWQveW91ci1maXJzdC1waXBlbGluZSJ9LCJuZXh0SXRlbSI6eyJ0aXRsZSI6IkRlcGxveWluZyBWZWN0b3IiLCJwZXJtYWxpbmsiOiIvbmV3LWRvY3MvZ3VpZGVzL2dldHRpbmctc3RhcnRlZC9kZXBsb3lpbmcifX07LyogQGpzeCBtZHggKi9pbXBvcnQgQWxlcnQgZnJvbSdAc2l0ZS9zcmMvY29tcG9uZW50cy9BbGVydCc7aW1wb3J0IFN0ZXBzIGZyb20nQHNpdGUvc3JjL2NvbXBvbmVudHMvU3RlcHMnO2ltcG9ydCBUYWJzIGZyb20nQHRoZW1lL1RhYnMnO2ltcG9ydCBUYWJJdGVtIGZyb20nQHRoZW1lL1RhYkl0ZW0nO2V4cG9ydCBjb25zdCByaWdodFRvYz1be3ZhbHVlOidUdXRvcmlhbCcsaWQ6J3R1dG9yaWFsJyxjaGlsZHJlbjpbe3ZhbHVlOidTZXR1cCBhIGJhc2ljIHBpcGVsaW5lJyxpZDonc2V0dXAtYS1iYXNpYy1waXBlbGluZScsY2hpbGRyZW46W119LHt2YWx1ZTonQWRkIGEgcGFyc2luZyB0cmFuc2Zvcm0nLGlkOidhZGQtYS1wYXJzaW5nLXRyYW5zZm9ybScsY2hpbGRyZW46W119LHt2YWx1ZTonVGVzdCBpdCcsaWQ6J3Rlc3QtaXQnLGNoaWxkcmVuOltdfV19LHt2YWx1ZTonTmV4dCBTdGVwcycsaWQ6J25leHQtc3RlcHMnLGNoaWxkcmVuOltdfV07Y29uc3QgbWFrZVNob3J0Y29kZT1uYW1lPT5mdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTtjb25zdCBsYXlvdXRQcm9wcz17cmlnaHRUb2N9O2NvbnN0IE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7Y29tcG9uZW50cywuLi5wcm9wc30pe3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgicCIsbnVsbCxgU3RydWN0dXJlZCBsb2dzIGFyZSBsaWtlIGNvY2t0YWlsczsgdGhleSdyZSBjb29sIGJlY2F1c2UgdGhleSdyZSBjb21wbGljYXRlZC4KSW4gdGhpcyBndWlkZSB3ZSdsbCBidWlsZCBhIHBpcGVsaW5lIHVzaW5nIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Ii9kb2NzL3JlZmVyZW5jZS90cmFuc2Zvcm1zLyJ9KSxgdHJhbnNmb3JtYXRpb25zYCksYAp0aGF0IGFsbG93cyB1cyB0byBzZW5kIHVuc3RydWN0dXJlZCBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIvZG9jcy9hYm91dC9kYXRhLW1vZGVsLyJ9KSxgZXZlbnRzYCksYCB0aHJvdWdoIGl0IHRoYXQKbG9vayBsaWtlIHRoaXM6YCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS10ZXh0In0pLGAxNzIuMTI4LjgwLjEwOSAtIEJpbnM1MjczIDY1NiBbMjAxOS0wNS0wM1QxMzoxMTo0OC0wNDowMF0gXFwiUFVUIC9tZXNoXFwiIDQwNiAxMDI3MgpgKSksbWR4KCJwIixudWxsLGBBbmQgaGF2ZSB0aGVtIGNvbWluZyBvdXQgdGhlIG90aGVyIGVuZCBpbiBhIHN0cnVjdHVyZWQgZm9ybWF0IGxpa2UgdGhpczpgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWpzb24ifSksYHsKICAiYnl0ZXNfaW4iOiI2NTYiLAogICJ0aW1lc3RhbXAiOiIyMDE5LTA1LTAzVDEzOjExOjQ4LTA0OjAwIiwKICAibWV0aG9kIjoiUFVUIiwKICAiYnl0ZXNfb3V0IjoiMTAyNzIiLAogICJob3N0IjoiMTcyLjEyOC44MC4xMDkiLAogICJzdGF0dXMiOiI0MDYiLAogICJ1c2VyIjoiQmluczUyNzMiLAogICJwYXRoIjoiL21lc2giCn0KYCkpLG1keCgiaDIiLHsiaWQiOiJ0dXRvcmlhbCJ9LGBUdXRvcmlhbGApLG1keChTdGVwcyx7aGVhZGluZ0RlcHRoOjMsbWR4VHlwZToiU3RlcHMifSxtZHgoIm9sIixudWxsLG1keCgibGkiLG51bGwsbWR4KCJoMyIseyJpZCI6InNldHVwLWEtYmFzaWMtcGlwZWxpbmUifSxgU2V0dXAgYSBiYXNpYyBwaXBlbGluZWApLG1keCgicCIsbnVsbCxgSW4gdGhlIGxhc3QgZ3VpZGUgd2Ugc2ltcGx5IHBpcGVkIHN0ZGluIHRvIHN0ZG91dCwgSSdtIG5vdCB0cnlpbmcgdG8gZGltaW5pc2gKeW91ciBzZW5zZSBvZiBhY2hpZXZlbWVudCBidXQgdGhhdCB3YXMgcHJldHR5IGJhc2ljLmApLG1keCgicCIsbnVsbCxgVGhpcyB0aW1lIHdlJ3JlIGdvaW5nIHRvIGJ1aWxkIGEgY29uZmlnIHdlIG1pZ2h0IHVzZSBpbiB0aGUgcmVhbCB3b3JsZC4gSXQncwpnb2luZyB0byBjb25zdW1lIGxvZ3Mgb3ZlciBUQ1Agd2l0aCBhIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Ii9kb2NzL3JlZmVyZW5jZS9zb3VyY2VzL3NvY2tldC8ifSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiYSJ9LGBzb2NrZXRgKSxgIHNvdXJjZWApLGAgYW5kCndyaXRlIHRoZW0gdG8gYW4gYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiL2RvY3MvcmVmZXJlbmNlL3NpbmtzL2VsYXN0aWNzZWFyY2gvIn0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSxgZWxhc3RpY3NlYXJjaGApLGAgc2lua2ApLGAuYCksbWR4KEFsZXJ0LHt0eXBlOiJpbmZvIixtZHhUeXBlOiJBbGVydCJ9LG1keCgicCIsbnVsbCxgVGhlcmUncyBubyBuZWVkIHRvIHJ1biBhIGxvY2FsIEVsYXN0aWNzZWFyY2ggZm9yIHRoaXMgZ3VpZGUgYXMgd2UgY2FuIHdyaXRlIGFuZApldmVuIHRlc3Qgb3VyIGNvbmZpZyB3aXRob3V0IGNvbm5lY3RpbmcgdG8gc291cmNlcyBvciBzaW5rcyAoYXMgeW91J2xsIHNlZSkuYCkpLG1keCgicCIsbnVsbCxgVGhlIGJhc2ljIHNvdXJjZSB0byBzaW5rIHZlcnNpb24gb2Ygb3VyIHBpcGVsaW5lIGxvb2tzIGxpa2UgdGhpczpgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXRvbWwiLCJtZXRhc3RyaW5nIjoidGl0bGU9XCJ2ZWN0b3IudG9tbFwiIiwidGl0bGUiOiJcInZlY3Rvci50b21sXCIifSksYFtzb3VyY2VzLmZvb10KICB0eXBlID0gInNvY2tldCIKICBhZGRyZXNzID0gIjAuMC4wLjA6OTAwMCIKICBtb2RlID0gInRjcCIKCltzaW5rcy5iYXJdCiAgaW5wdXRzID0gWyJmb28iXQogIHR5cGUgPSAiZWxhc3RpY3NlYXJjaCIKICBpbmRleCA9ICJleGFtcGxlLWluZGV4IgogIGhvc3QgPSAiaHR0cDovLzEwLjI0LjMyLjEyMjo5MDAwIgpgKSksbWR4KCJwIixudWxsLGBJZiB3ZSB3ZXJlIHRvIHJ1biBpdCB0aGVuIHRoZSByYXcgZGF0YSB3ZSBjb25zdW1lIG92ZXIgVENQIHdvdWxkIGJlIGNhcHR1cmVkIGluCnRoZSBmaWVsZCBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgbWVzc2FnZWApLGAsIGFuZCB0aGUgb2JqZWN0IHdlJ2QgcHVibGlzaCB0byBFbGFzdGljc2VhcmNoIHdvdWxkIGxvb2sKbGlrZSB0aGlzOmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtanNvbiIsIm1ldGFzdHJpbmciOiJ0aXRsZT1cImxvZyBldmVudFwiIiwidGl0bGUiOiJcImxvZyIsImV2ZW50XCIiOnRydWV9KSxgeyJtZXNzYWdlIjoiMTcyLjEyOC44MC4xMDkgLSBCaW5zNTI3MyA2NTYgWzIwMTktMDUtMDNUMTM6MTE6NDgtMDQ6MDBdIFxcIlBVVCAvbWVzaFxcIiA0MDYgMTAyNzIiLCJob3N0IjoiZm9vIiwidGltZXN0YW1wIjoiMjAxOS0wNS0wM1QxMzoxMTo0OC0wNDowMCJ9CmApKSxtZHgoInAiLG51bGwsYFRoYXQncyBoYXJkbHkgc3RydWN0dXJlZCBhdCBhbGwhIExldCdzIHJlbWVkeSB0aGF0IGJ5IGFkZGluZyBvdXIgZmlyc3QgdHJhbnNmb3JtLmApKSxtZHgoImxpIixudWxsLG1keCgiaDMiLHsiaWQiOiJhZGQtYS1wYXJzaW5nLXRyYW5zZm9ybSJ9LGBBZGQgYSBwYXJzaW5nIHRyYW5zZm9ybWApLG1keCgicCIsbnVsbCxgTm90aGluZyBpbiB0aGlzIHdvcmxkIGlzIGV2ZXIgZ29vZCBlbm91Z2ggZm9yIHlvdSwgd2h5IHNob3VsZCBldmVudHMgYmUgYW55CmRpZmZlcmVudD9gKSxtZHgoInAiLG51bGwsYFZlY3RvciBtYWtlcyBpdCBlYXN5IHRvIG11dGF0ZSBldmVudHMgaW50byBhIG1vcmUgKG9yIGxlc3MpIHN0cnVjdHVyZWQgZm9ybWF0CndpdGggYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiL2RvY3MvcmVmZXJlbmNlL3RyYW5zZm9ybXMvIn0pLGB0cmFuc2Zvcm1zYCksYC4gTGV0J3MgcGFyc2Ugb3VyIGxvZ3MgaW50byBhIHN0cnVjdHVyZWQKZm9ybWF0IGJ5IGNhcHR1cmluZyBuYW1lZCByZWd1bGFyIGV4cHJlc3Npb24gZ3JvdXBzIHdpdGggYQpgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIvZG9jcy9yZWZlcmVuY2UvdHJhbnNmb3Jtcy9yZWdleF9wYXJzZXIvIn0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSxgcmVnZXhfcGFyc2VyYCksYCB0cmFuc2Zvcm1gKSxgLmApLG1keCgicCIsbnVsbCxgQSBjb25maWcgY2FuIGhhdmUgYW55IG51bWJlciBvZiB0cmFuc2Zvcm1zIGFuZCBpdCdzIGVudGlyZWx5IHVwIHRvIHlvdSBob3cgdGhleQphcmUgY2hhaW5lZCB0b2dldGhlci4gU2ltaWxhciB0byBzaW5rcywgYSB0cmFuc2Zvcm0gcmVxdWlyZXMgeW91IHRvIHNwZWNpZnkKd2hlcmUgaXRzIGRhdGEgY29tZXMgZnJvbS4gV2hlbiBhIHNpbmsgaXMgY29uZmlndXJlZCB0byBhY2NlcHQgZGF0YSBmcm9tIGEKdHJhbnNmb3JtIHRoZSBwaXBlbGluZSBpcyBjb21wbGV0ZS5gKSxtZHgoInAiLG51bGwsYExldCdzIHBsYWNlIG91ciBuZXcgdHJhbnNmb3JtIGluIGJldHdlZW4gb3VyIGV4aXN0aW5nIHNvdXJjZSBhbmQgc2luazpgKSxtZHgoVGFicyx7YmxvY2s6dHJ1ZSxkZWZhdWx0VmFsdWU6ImRpZmYiLHZhbHVlczpbe2xhYmVsOidEaWZmJyx2YWx1ZTonZGlmZid9LHtsYWJlbDonRnVsbCBDb25maWcnLHZhbHVlOiduZXdfcmVzdWx0J31dLG1keFR5cGU6IlRhYnMifSxtZHgoVGFiSXRlbSx7dmFsdWU6ImRpZmYiLG1keFR5cGU6IlRhYkl0ZW0ifSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWRpZmYiLCJtZXRhc3RyaW5nIjoidGl0bGU9XCJ2ZWN0b3IudG9tbFwiIiwidGl0bGUiOiJcInZlY3Rvci50b21sXCIifSksYCBbc291cmNlcy5mb29dCiAgIHR5cGUgPSAic29ja2V0IgogICBhZGRyZXNzID0gIjAuMC4wLjA6OTAwMCIKICAgbW9kZSA9ICJ0Y3AiCgoKK1t0cmFuc2Zvcm1zLmFwYWNoZV9wYXJzZXJdCisgIGlucHV0cyA9IFsiZm9vIl0KKyAgdHlwZSA9ICJyZWdleF9wYXJzZXIiCisgIGZpZWxkID0gIm1lc3NhZ2UiCisgIHJlZ2V4ID0gJ14oP1A8aG9zdD5bXFx3XFwuXSspIC0gKD9QPHVzZXI+W1xcd10rKSAoP1A8Ynl0ZXNfaW4+W1xcZF0rKSBcXFsoP1A8dGltZXN0YW1wPi4qKVxcXSAiKD9QPG1hdGhvZD5bXFx3XSspICg/UDxwYXRoPi4qKSIgKD9QPHN0YXR1cz5bXFxkXSspICg/UDxieXRlc19vdXQ+W1xcZF0rKSQnCisKIFtzaW5rcy5iYXJdCi0gIGlucHV0cyA9IFsiZm9vIl0KKyAgaW5wdXRzID0gWyJhcGFjaGVfcGFyc2VyIl0KICAgdHlwZSA9ICJlbGFzdGljc2VhcmNoIgogICBpbmRleCA9ICJleGFtcGxlLWluZGV4IgogICBob3N0ID0gImh0dHA6Ly8xMC4yNC4zMi4xMjI6OTAwMCIKYCkpKSxtZHgoVGFiSXRlbSx7dmFsdWU6Im5ld19yZXN1bHQiLG1keFR5cGU6IlRhYkl0ZW0ifSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXRvbWwiLCJtZXRhc3RyaW5nIjoidGl0bGU9XCJ2ZWN0b3IudG9tbFwiIiwidGl0bGUiOiJcInZlY3Rvci50b21sXCIifSksYFtzb3VyY2VzLmZvb10KICB0eXBlID0gInNvY2tldCIKICBhZGRyZXNzID0gIjAuMC4wLjA6OTAwMCIKICBtb2RlID0gInRjcCIKClt0cmFuc2Zvcm1zLmFwYWNoZV9wYXJzZXJdCiAgaW5wdXRzID0gWyJmb28iXQogIHR5cGUgPSAicmVnZXhfcGFyc2VyIgogIGZpZWxkID0gIm1lc3NhZ2UiCiAgcmVnZXggPSAnXig/UDxob3N0PltcXHdcXC5dKykgLSAoP1A8dXNlcj5bXFx3XSspICg/UDxieXRlc19pbj5bXFxkXSspIFxcWyg/UDx0aW1lc3RhbXA+LiopXFxdICIoP1A8bWF0aG9kPltcXHddKykgKD9QPHBhdGg+LiopIiAoP1A8c3RhdHVzPltcXGRdKykgKD9QPGJ5dGVzX291dD5bXFxkXSspJCcKCltzaW5rcy5iYXJdCiAgaW5wdXRzID0gWyJhcGFjaGVfcGFyc2VyIl0KICB0eXBlID0gImVsYXN0aWNzZWFyY2giCiAgaW5kZXggPSAiZXhhbXBsZS1pbmRleCIKICBob3N0ID0gImh0dHA6Ly8xMC4yNC4zMi4xMjI6OTAwMCIKYCkpKSksbWR4KCJwIixudWxsLGBUaGlzIHJlZ3VsYXIgZXhwcmVzc2lvbiBsb29rcyBncmVhdCBhbmQgaXQgcHJvYmFibHkgd29ya3MsIGJ1dCBpdCdzIGJlc3QgdG8gYmUKc3VyZSwgcmlnaHQ/IFdoaWNoIGxlYWRzIHVzIG9udG8gdGhlIG5leHQgc3RlcC5gKSksbWR4KCJsaSIsbnVsbCxtZHgoImgzIix7ImlkIjoidGVzdC1pdCJ9LGBUZXN0IGl0YCksbWR4KCJwIixudWxsLGBObyBvbmUgaXMgc2F5aW5nIHRoYXQgdW5wbGFubmVkIGV4cGxvc2lvbnMgYXJlbid0IGNvb2wsIGJ1dCB5b3Ugc2hvdWxkIGJlIGRvaW5nCnRoYXQgaW4geW91ciBvd24gdGltZS4gSW4gb3JkZXIgdG8gdGVzdCBvdXIgdHJhbnNmb3JtIHdlIGAsbWR4KCJlbSIse3BhcmVudE5hbWU6InAifSxgY291bGRgKSxgIHNldCB1cCBhIGxvY2FsCkVsYXN0aWNzZWFyY2ggaW5zdGFuY2UgYW5kIHJ1biB0aGUgd2hvbGUgcGlwZWxpbmUsIGJ1dCB0aGF0J3MgYW4gYXdmdWwgYm90aGVyCmFuZCBWZWN0b3IgaGFzIGEgbXVjaCBiZXR0ZXIgd2F5LmApLG1keCgicCIsbnVsbCxgSW5zdGVhZCwgd2UgY2FuIHdyaXRlIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Ii9ndWlkZXMvYWR2YW5jZWQvdW5pdC10ZXN0aW5nLyJ9KSxgdW5pdCB0ZXN0c2ApLGAgYXMgcGFydCBvZiBvdXIKY29uZmlnIGp1c3QgbGlrZSB5b3Ugd291bGQgZm9yIHJlZ3VsYXIgY29kZTpgKSxtZHgoVGFicyx7YmxvY2s6dHJ1ZSxkZWZhdWx0VmFsdWU6ImRpZmYiLHZhbHVlczpbe2xhYmVsOidEaWZmJyx2YWx1ZTonZGlmZid9LHtsYWJlbDonRnVsbCBDb25maWcnLHZhbHVlOiduZXdfcmVzdWx0J31dLG1keFR5cGU6IlRhYnMifSxtZHgoVGFiSXRlbSx7dmFsdWU6ImRpZmYiLG1keFR5cGU6IlRhYkl0ZW0ifSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWRpZmYiLCJtZXRhc3RyaW5nIjoidGl0bGU9XCJ2ZWN0b3IudG9tbFwiIiwidGl0bGUiOiJcInZlY3Rvci50b21sXCIifSksYCMgV3JpdGUgdGhlIGRhdGEKW3NpbmtzLmJhcl0KICBpbnB1dHMgPSBbImFwYWNoZV9wYXJzZXIiXQogIHR5cGUgPSAiZWxhc3RpY3NlYXJjaCIKICBpbmRleCA9ICJleGFtcGxlLWluZGV4IgogIGhvc3QgPSAiaHR0cDovLzEwLjI0LjMyLjEyMjo5MDAwIgorCitbW3Rlc3RzXV0KKyAgbmFtZSA9ICJ0ZXN0IGFwYWNoZSByZWdleCIKKworICBbW3Rlc3RzLmlucHV0c11dCisgICAgaW5zZXJ0X2F0ID0gImFwYWNoZV9wYXJzZXIiCisgICAgdHlwZSA9ICJyYXciCisgICAgdmFsdWUgPSAiMTcyLjEyOC44MC4xMDkgLSBCaW5zNTI3MyA2NTYgWzIwMTktMDUtMDNUMTM6MTE6NDgtMDQ6MDBdIFxcIlBVVCAvbWVzaFxcIiA0MDYgMTAyNzIiCisKKyAgW1t0ZXN0cy5vdXRwdXRzXV0KKyAgICBleHRyYWN0X2Zyb20gPSAiYXBhY2hlX3BhcnNlciIKKyAgICBbW3Rlc3RzLm91dHB1dHMuY29uZGl0aW9uc11dCisgICAgICB0eXBlID0gImNoZWNrX2ZpZWxkcyIKKyAgICAgICJtZXRob2QuZXEiID0gIlBVVCIKKyAgICAgICJob3N0LmVxIiA9ICIxNzIuMTI4LjgwLjEwOSIKKyAgICAgICJ0aW1lc3RhbXAuZXEiID0gIjIwMTktMDUtMDNUMTM6MTE6NDgtMDQ6MDAiCisgICAgICAicGF0aC5lcSIgPSAiL21lc2giCisgICAgICAic3RhdHVzLmVxIiA9ICI0MDYiCmApKSksbWR4KFRhYkl0ZW0se3ZhbHVlOiJuZXdfcmVzdWx0IixtZHhUeXBlOiJUYWJJdGVtIn0sbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS10b21sIiwibWV0YXN0cmluZyI6InRpdGxlPVwidmVjdG9yLnRvbWxcIiIsInRpdGxlIjoiXCJ2ZWN0b3IudG9tbFwiIn0pLGAjIENvbnN1bWUgZGF0YQpbc291cmNlcy5mb29dCiAgdHlwZSA9ICJzb2NrZXQiCiAgYWRkcmVzcyA9ICIwLjAuMC4wOjkwMDAiCiAgbW9kZSA9ICJ0Y3AiCgojIFN0cnVjdHVyZSB0aGUgZGF0YQpbdHJhbnNmb3Jtcy5hcGFjaGVfcGFyc2VyXQogIGlucHV0cyA9IFsiZm9vIl0KICB0eXBlID0gInJlZ2V4X3BhcnNlciIKICBmaWVsZCA9ICJtZXNzYWdlIgogIHJlZ2V4ID0gJ14oP1A8aG9zdD5bXFx3XFwuXSspIC0gKD9QPHVzZXI+W1xcd10rKSAoP1A8Ynl0ZXNfaW4+W1xcZF0rKSBcXFsoP1A8dGltZXN0YW1wPi4qKVxcXSAiKD9QPG1hdGhvZD5bXFx3XSspICg/UDxwYXRoPi4qKSIgKD9QPHN0YXR1cz5bXFxkXSspICg/UDxieXRlc19vdXQ+W1xcZF0rKSQnCgojIFdyaXRlIHRoZSBkYXRhCltzaW5rcy5iYXJdCiAgaW5wdXRzID0gWyJhcGFjaGVfcGFyc2VyIl0KICB0eXBlID0gImVsYXN0aWNzZWFyY2giCiAgaW5kZXggPSAiZXhhbXBsZS1pbmRleCIKICBob3N0ID0gImh0dHA6Ly8xMC4yNC4zMi4xMjI6OTAwMCIKCltbdGVzdHNdXQogIG5hbWUgPSAidGVzdCBhcGFjaGUgcmVnZXgiCgogIFtbdGVzdHMuaW5wdXRzXV0KICAgIGluc2VydF9hdCA9ICJhcGFjaGVfcGFyc2VyIgogICAgdHlwZSA9ICJyYXciCiAgICB2YWx1ZSA9ICIxNzIuMTI4LjgwLjEwOSAtIEJpbnM1MjczIDY1NiBbMjAxOS0wNS0wM1QxMzoxMTo0OC0wNDowMF0gXFwiUFVUIC9tZXNoXFwiIDQwNiAxMDI3MiIKCiAgW1t0ZXN0cy5vdXRwdXRzXV0KICAgIGV4dHJhY3RfZnJvbSA9ICJhcGFjaGVfcGFyc2VyIgogICAgW1t0ZXN0cy5vdXRwdXRzLmNvbmRpdGlvbnNdXQogICAgICB0eXBlID0gImNoZWNrX2ZpZWxkcyIKICAgICAgIm1ldGhvZC5lcSIgPSAiUFVUIgogICAgICAiaG9zdC5lcSIgPSAiMTcyLjEyOC44MC4xMDkiCiAgICAgICJ0aW1lc3RhbXAuZXEiID0gIjIwMTktMDUtMDNUMTM6MTE6NDgtMDQ6MDAiCiAgICAgICJwYXRoLmVxIiA9ICIvbWVzaCIKICAgICAgInN0YXR1cy5lcSIgPSAiNDA2IgpgKSkpKSxtZHgoInAiLG51bGwsYFRoaXMgdW5pdCB0ZXN0IHNwZWMgaGFzIGEgbmFtZSwgZGVmaW5lcyBhbiBpbnB1dCBldmVudCB0byBmZWVkIGludG8gb3VyIHBpcGVsaW5lCmF0IGEgc3BlY2lmaWMgdHJhbnNmb3JtIChpbiB0aGlzIGNhc2Ugb3VyIGAsbWR4KCJlbSIse3BhcmVudE5hbWU6InAifSxgb25seWApLGAgdHJhbnNmb3JtKSwgYW5kIGRlZmluZXMgd2hlcmUKd2UnZCBsaWtlIHRvIGNhcHR1cmUgcmVzdWx0aW5nIGV2ZW50cyBjb21pbmcgb3V0IGFsb25nIHdpdGggYSBjb25kaXRpb24gdG8gY2hlY2sKdGhlIGV2ZW50cyBhZ2FpbnN0LmApLG1keCgicCIsbnVsbCxgV2hlbiB3ZSBydW46YCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1iYXNoIn0pLGB2ZWN0b3IgdGVzdCAuL3ZlY3Rvci50b21sCmApKSxtZHgoInAiLG51bGwsYEl0IHdpbGwgcGFyc2UgYW5kIGV4ZWN1dGUgb3VyIHRlc3Q6YCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS10ZXh0In0pLGBSdW5uaW5nIHZlY3Rvci50b21sIHRlc3RzCnRlc3QgdmVjdG9yLnRvbWw6IHRlc3QgYXBhY2hlIHJlZ2V4IC4uLiBmYWlsZWQKCmZhaWx1cmVzOgoKLS0tIHZlY3Rvci50b21sIC0tLQoKdGVzdCAndGVzdCBhcGFjaGUgcmVnZXgnOgoKY2hlY2sgdHJhbnNmb3JtICdhcGFjaGVfcGFyc2VyJyBmYWlsZWQgY29uZGl0aW9uczoKICBjb25kaXRpb25bMF06IHByZWRpY2F0ZXMgZmFpbGVkOiBbIG1ldGhvZC5lcTogIlBVVCIgXQpwYXlsb2FkcyAoZXZlbnRzIGVuY29kZWQgYXMgSlNPTik6CiAgaW5wdXQ6IHsidGltZXN0YW1wIjoiMjAyMC0wMi0yMFQxMDoxOToyNy4yODM3NDVaIiwibWVzc2FnZSI6IjE3Mi4xMjguODAuMTA5IC0gQmluczUyNzMgNjU2IFsyMDE5LTA1LTAzVDEzOjExOjQ4LTA0OjAwXSBcXCJQVVQgL21lc2hcXCIgNDA2IDEwMjcyIn0KICBvdXRwdXQ6IHsiYnl0ZXNfaW4iOiI2NTYiLCJ0aW1lc3RhbXAiOiIyMDE5LTA1LTAzVDEzOjExOjQ4LTA0OjAwIiwibWF0aG9kIjoiUFVUIiwiYnl0ZXNfb3V0IjoiMTAyNzIiLCJob3N0IjoiMTcyLjEyOC44MC4xMDkiLCJzdGF0dXMiOiI0MDYiLCJ1c2VyIjoiQmluczUyNzMiLCJwYXRoIjoiL21lc2gifQpgKSksbWR4KCJwIixudWxsLGBCeSBKb3ZlISBUaGVyZSBgLG1keCgiZW0iLHtwYXJlbnROYW1lOiJwIn0sYHdhc2ApLGAgYSBwcm9ibGVtIHdpdGggb3VyIHJlZ3VsYXIgZXhwcmVzc2lvbiEgT3VyIHRlc3QgaGFzIHBvaW50ZWQKb3V0IHRoYXQgdGhlIHByZWRpY2F0ZSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgbWV0aG9kLmVxYCksYCBmYWlsZWQsIGFuZCBoYXMgaGVscGZ1bGx5IHByaW50ZWQgb3VyIGlucHV0CmFuZCByZXN1bHRpbmcgZXZlbnRzIGluIEpTT04gZm9ybWF0LmApLG1keCgicCIsbnVsbCxgVGhpcyBhbGxvd3MgdXMgdG8gaW5zcGVjdCBleGFjdGx5IHdoYXQgb3VyIHRyYW5zZm9ybSBpcyBkb2luZywgYW5kIGl0IHR1cm5zIG91dAp0aGF0IHRoZSBtZXRob2QgZnJvbSBvdXIgQXBhY2hlIGxvZyBpcyBhY3R1YWxseSBiZWluZyBjYXB0dXJlZCBpbiBhIGZpZWxkCmAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBtYXRob2RgKSxgLmApLG1keCgicCIsbnVsbCxgU2VlIGlmIHlvdSBjYW4gc3BvdCB0aGUgdHlwbywgb25jZSBpdCdzIGZpeGVkIHdlIGNhbiBydW4KYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYHZlY3RvciB0ZXN0IC4vdmVjdG9yLnRvbWxgKSxgIGFnYWluIGFuZCB3ZSBzaG91bGQgZ2V0IHRoaXM6YCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS10ZXh0In0pLGBSdW5uaW5nIHZlY3Rvci50b21sIHRlc3RzCnRlc3QgdmVjdG9yLnRvbWw6IHRlc3QgYXBhY2hlIHJlZ2V4IC4uLiBwYXNzZWQKYCkpLG1keCgicCIsbnVsbCxgU3VjY2VzcyEgTmV4dCwgdHJ5IGV4cGVyaW1lbnRpbmcgYnkgYWRkaW5nIG1vcmUgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiL2RvY3MvcmVmZXJlbmNlL3RyYW5zZm9ybXMvIn0pLGB0cmFuc2Zvcm1zYCksYCB0bwp5b3VyIHBpcGVsaW5lIGJlZm9yZSBtb3Zpbmcgb250byB0aGUgbmV4dCBndWlkZS5gKSxtZHgoQWxlcnQse3R5cGU6ImluZm8iLG1keFR5cGU6IkFsZXJ0In0sbWR4KCJwIixudWxsLGBXaGlsZSB3ZSdyZSBhdCwgZGlkIHlvdSBrbm93IHlvdSBjYW4gY29udHJvbCBhbGwgb2YgVmVjdG9yJ3MgZmllbGQgbmFtZXMgdmlhCnRoZSBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIvZG9jcy9yZWZlcmVuY2UvZ2xvYmFsLW9wdGlvbnMvI2xvZ19zY2hlbWEifSksYGdsb2JhbCBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImEifSxgbG9nX3NjaGVtYWApLGAgb3B0aW9uc2ApLGA/ClZlY3RvciBkb2VzIG5vdCBsb2NrIHlvdSBpbnRvIGFueSBzcGVjaWZpYyBzY2hlbWEuYCkpKSkpLG1keCgiaDIiLHsiaWQiOiJuZXh0LXN0ZXBzIn0sYE5leHQgU3RlcHNgKSxtZHgoInAiLG51bGwsYE5vdyB0aGF0IHlvdSdyZSBhIFZlY3RvciBwcm8geW91J2xsIGhhdmUgZW5kbGVzcyByYWd0YWcgZ3JvdXBzIG9mIG1pc2ZpdHMKdHJ5aW5nIHRvIHJlY3J1aXQgeW91IGFzIHRoZWlyIGhhY2tlciwgYnV0IGl0IHdvbid0IG1lYW4gbXVjaCBpZiB5b3UgY2FuJ3QKZGVwbG95IFZlY3Rvci4gT250byB0aGUgbmV4dCBndWlkZSFgKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},null]}