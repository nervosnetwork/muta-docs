{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/Desktop/vdocs/website/docs/reference/transforms/reduce.md","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/docs/reference/transforms/reduce.md","mtime":1594780808414},{"path":"/Users/Yun/Desktop/vdocs/website/.docusaurus/docusaurus-plugin-content-docs/site-docs-reference-transforms-reduce-md-c38.json","mtime":1595086435139},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/Desktop/vdocs/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1588759133114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Yun/Desktop/vdocs/website/docs/reference/transforms/reduce.md"],"names":["React","mdx","frontMatter","last_modified_on","component_title","description","event_types","function_category","issues_url","operating_systems","sidebar_label","source_url","status","title","unsupported_operating_systems","metadata","Fields","Field","Tabs","TabItem","rightToc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","CodeHeader","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tlast_modified_on: '2020-07-13',\n\tcomponent_title: 'Reduce',\n\tdescription: 'The Vector `reduce` transform accepts and outputs `log` events, allowing you to combine multiple events into a single event based on a set of identifiers.',\n\tevent_types: [\n\t\t'log'\n\t],\n\tfunction_category: 'aggregate',\n\tissues_url: 'https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22transform%3A+reduce%22',\n\toperating_systems: [\n\t\t'Linux',\n\t\t'MacOS',\n\t\t'Windows'\n\t],\n\tsidebar_label: 'reduce|[\"log\"]',\n\tsource_url: 'https://github.com/timberio/vector/tree/master/src/transforms/reduce',\n\tstatus: 'beta',\n\ttitle: 'Reduce Transform',\n\tunsupported_operating_systems: []\n};\nexport const metadata = {\n  \"id\": \"reference/transforms/reduce\",\n  \"title\": \"Reduce Transform\",\n  \"description\": \"The Vector `reduce` transform accepts and outputs `log` events, allowing you to combine multiple events into a single event based on a set of identifiers.\",\n  \"source\": \"@site/docs/reference/transforms/reduce.md\",\n  \"permalink\": \"/docs/reference/transforms/reduce\",\n  \"editUrl\": \"https://github.com/nervosnetwork/muta/edit/master/website/docs/reference/transforms/reduce.md\",\n  \"sidebar_label\": \"reduce|[\\\"log\\\"]\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"Merge Transform\",\n    \"permalink\": \"/docs/reference/transforms/merge\"\n  },\n  \"next\": {\n    \"title\": \"Regex Parser Transform\",\n    \"permalink\": \"/docs/reference/transforms/regex_parser\"\n  }\n};\n  /* @jsx mdx */\nimport Fields from '@site/src/components/Fields';\nimport Field from '@site/src/components/Field';\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nexport const rightToc = [{\n  value: 'Configuration',\n  id: 'configuration',\n  children: []\n}, {\n  value: 'Options',\n  id: 'options',\n  children: [{\n    value: 'ends_when',\n    id: 'ends_when',\n    children: []\n  }, {\n    value: 'expire_after_ms',\n    id: 'expire_after_ms',\n    children: []\n  }, {\n    value: 'flush_period_ms',\n    id: 'flush_period_ms',\n    children: []\n  }, {\n    value: 'identifier_fields',\n    id: 'identifier_fields',\n    children: []\n  }, {\n    value: 'merge_strategies',\n    id: 'merge_strategies',\n    children: []\n  }]\n}, {\n  value: 'Examples',\n  id: 'examples',\n  children: []\n}, {\n  value: 'How It Works',\n  id: 'how-it-works',\n  children: [{\n    value: 'Complex Processing',\n    id: 'complex-processing',\n    children: []\n  }, {\n    value: 'Environment Variables',\n    id: 'environment-variables',\n    children: []\n  }]\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst CodeHeader = makeShortcode(\"CodeHeader\");\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`The Vector `}<inlineCode parentName=\"p\">{`reduce`}</inlineCode>{` transform\naccepts and outputs `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/about/data-model/log/\"\n      }}><inlineCode parentName=\"a\">{`log`}</inlineCode></a>{` events, allowing you to\ncombine multiple events into a single event based on a set of identifiers.`}</p>\n    {\n      /*\n          THIS FILE IS AUTOGENERATED!\n           To make changes please edit the template located at:\n           website/docs/reference/transforms/reduce.md.erb\n      */\n    }\n    <h2 {...{\n      \"id\": \"configuration\"\n    }}>{`Configuration`}</h2>\n    <Tabs block={true} defaultValue=\"common\" values={[{\n      \"label\": \"Common\",\n      \"value\": \"common\"\n    }, {\n      \"label\": \"Advanced\",\n      \"value\": \"advanced\"\n    }]} mdxType=\"Tabs\">\n      <TabItem value=\"common\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"title=\\\"vector.toml\\\"\",\n            \"title\": \"\\\"vector.toml\\\"\"\n          }}>{`[transforms.my_transform_id]\n  # General\n  type = \"reduce\" # required\n  inputs = [\"my-source-or-transform-id\"] # required\n  identifier_fields = [] # optional, default\n\n  # Ends when\n  ends_when.type = \"check_fields\" # optional, default\n  ends_when.\"message.eq\" = \"this is the content to match against\" # example\n  ends_when.\"message.eq\" = [\"match this\", \"or this\"] # example\n  ends_when.\"message.contains\" = \"foo\" # example\n  ends_when.\"message.contains\" = [\"foo\", \"bar\"] # example\n  ends_when.\"environment.ends_with\" = \"-staging\" # example\n  ends_when.\"environment.ends_with\" = [\"-staging\", \"-running\"] # example\n  ends_when.\"message.regex\" = \" (any|of|these|five|words) \" # example\n  ends_when.\"environment.starts_with\" = \"staging-\" # example\n  ends_when.\"environment.starts_with\" = [\"staging-\", \"running-\"] # example\n`}</code></pre>\n      </TabItem>\n      <TabItem value=\"advanced\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\",\n            \"metastring\": \"title=\\\"vector.toml\\\"\",\n            \"title\": \"\\\"vector.toml\\\"\"\n          }}>{`[transforms.my_transform_id]\n  # General\n  type = \"reduce\" # required\n  inputs = [\"my-source-or-transform-id\"] # required\n  expire_after_ms = 30000 # optional, default\n  flush_period_ms = 1000 # optional, default\n  identifier_fields = [] # optional, default\n\n  # Ends when\n  ends_when.type = \"check_fields\" # optional, default\n  ends_when.\"message.eq\" = \"this is the content to match against\" # example\n  ends_when.\"message.eq\" = [\"match this\", \"or this\"] # example\n  ends_when.\"host.exists\" = true # example\n  ends_when.\"method.neq\" = \"POST\" # example\n  ends_when.\"method.neq\" = [\"POST\", \"GET\"] # example\n  ends_when.\"message.not_contains\" = \"some phrase to ignore\" # example\n  ends_when.\"unit.not_starts_with\" = \"sys-\" # example\n  ends_when.\"unit.not_ends_with\" = \".device\" # example\n  ends_when.\"message.contains\" = \"foo\" # example\n  ends_when.\"message.contains\" = [\"foo\", \"bar\"] # example\n  ends_when.\"environment.ends_with\" = \"-staging\" # example\n  ends_when.\"environment.ends_with\" = [\"-staging\", \"-running\"] # example\n  ends_when.\"message.ip_cidr_contains\" = \"10.0.0.0/8\" # example\n  ends_when.\"message.ip_cidr_contains\" = [\"2000::/10\", \"192.168.0.0/16\"] # example\n  ends_when.\"message.regex\" = \" (any|of|these|five|words) \" # example\n  ends_when.\"environment.starts_with\" = \"staging-\" # example\n  ends_when.\"environment.starts_with\" = [\"staging-\", \"running-\"] # example\n\n  # Merge strategies\n  merge_strategies.method = \"discard\" # example\n  merge_strategies.path = \"discard\" # example\n  merge_strategies.duration_ms = \"sum\" # example\n  merge_strategies.query = \"array\" # example\n`}</code></pre>\n      </TabItem>\n    </Tabs>\n    <h2 {...{\n      \"id\": \"options\"\n    }}>{`Options`}</h2>\n    <Fields filters={true} mdxType=\"Fields\">\n      <Field common={true} defaultValue={null} enumValues={null} examples={[]} groups={[]} name={\"ends_when\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"table\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"ends_when\"\n        }}>{`ends_when`}</h3>\n        <p>{`A condition used to distinguish the final event of a transaction. If this\ncondition resolves to true for an event the transaction it belongs to is\nimmediately flushed.`}</p>\n        <Fields filters={false} mdxType=\"Fields\">\n          <Field common={true} defaultValue={\"check_fields\"} enumValues={{\n            \"check_fields\": \"Allows you to check individual fields against a list of conditions.\",\n            \"is_log\": \"Returns true if the event is a log.\",\n            \"is_metric\": \"Returns true if the event is a metric.\"\n          }} examples={[\"check_fields\", \"is_log\", \"is_metric\"]} groups={[]} name={\"type\"} path={\"ends_when\"} relevantWhen={null} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"type\"\n            }}>{`type`}</h4>\n            <p>{`The type of the condition to execute.`}</p>\n          </Field>\n          <Field common={true} defaultValue={null} enumValues={null} examples={[{\n            \"message.eq\": \"this is the content to match against\"\n          }, {\n            \"message.eq\": [\"match this\", \"or this\"]\n          }]} groups={[]} name={\"`[field-name]`.eq\"} path={\"ends_when\"} relevantWhen={{\n            \"type\": \"check_fields\"\n          }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field-nameeq\"\n            }}><inlineCode parentName=\"h4\">{`[field-name]`}</inlineCode>{`.eq`}</h4>\n            <p>{`Check whether a fields contents exactly matches the value specified. This may\nbe a single string or a list of strings, in which case this evaluates to true\nif any of the list matches.`}</p>\n          </Field>\n          <Field common={false} defaultValue={null} enumValues={null} examples={[{\n            \"host.exists\": true\n          }]} groups={[]} name={\"`[field-name]`.exists\"} path={\"ends_when\"} relevantWhen={{\n            \"type\": \"check_fields\"\n          }} required={false} templateable={false} type={\"bool\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field-nameexists\"\n            }}><inlineCode parentName=\"h4\">{`[field-name]`}</inlineCode>{`.exists`}</h4>\n            <p>{`Check whether a field exists or does not exist, depending on the provided value\nbeing `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{` respectively.`}</p>\n          </Field>\n          <Field common={false} defaultValue={null} enumValues={null} examples={[{\n            \"method.neq\": \"POST\"\n          }, {\n            \"method.neq\": [\"POST\", \"GET\"]\n          }]} groups={[]} name={\"`[field-name]`.neq\"} path={\"ends_when\"} relevantWhen={{\n            \"type\": \"check_fields\"\n          }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field-nameneq\"\n            }}><inlineCode parentName=\"h4\">{`[field-name]`}</inlineCode>{`.neq`}</h4>\n            <p>{`Check whether a fields contents does not match the value specified. This may be\na single string or a list of strings, in which case this evaluates to false if\nany of the list matches.`}</p>\n          </Field>\n          <Field common={false} defaultValue={null} enumValues={null} examples={[{\n            \"message.not_contains\": \"some phrase to ignore\"\n          }, {\n            \"unit.not_starts_with\": \"sys-\"\n          }, {\n            \"unit.not_ends_with\": \".device\"\n          }]} groups={[]} name={\"`[field-name]`.not_`[condition]`\"} path={\"ends_when\"} relevantWhen={{\n            \"type\": \"check_fields\"\n          }} required={false} templateable={false} type={\"any\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field-namenot_condition\"\n            }}><inlineCode parentName=\"h4\">{`[field-name]`}</inlineCode>{`.not_`}<inlineCode parentName=\"h4\">{`[condition]`}</inlineCode></h4>\n            <p>{`Check if the given `}<inlineCode parentName=\"p\">{`[condition]`}</inlineCode>{` does not match.`}</p>\n          </Field>\n          <Field common={true} defaultValue={null} enumValues={null} examples={[{\n            \"message.contains\": \"foo\"\n          }, {\n            \"message.contains\": [\"foo\", \"bar\"]\n          }]} groups={[]} name={\"`[field_name]`.contains\"} path={\"ends_when\"} relevantWhen={{\n            \"type\": \"check_fields\"\n          }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field_namecontains\"\n            }}><inlineCode parentName=\"h4\">{`[field_name]`}</inlineCode>{`.contains`}</h4>\n            <p>{`Checks whether a string field contains a string argument. This may be a single\nstring or a list of strings, in which case this evaluates to true if any of the\nlist matches.`}</p>\n          </Field>\n          <Field common={true} defaultValue={null} enumValues={null} examples={[{\n            \"environment.ends_with\": \"-staging\"\n          }, {\n            \"environment.ends_with\": [\"-staging\", \"-running\"]\n          }]} groups={[]} name={\"`[field_name]`.ends_with\"} path={\"ends_when\"} relevantWhen={{\n            \"type\": \"check_fields\"\n          }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field_nameends_with\"\n            }}><inlineCode parentName=\"h4\">{`[field_name]`}</inlineCode>{`.ends_with`}</h4>\n            <p>{`Checks whether a string field ends with a string argument. This may be a single\nstring or a list of strings, in which case this evaluates to true if any of the\nlist matches.`}</p>\n          </Field>\n          <Field common={false} defaultValue={null} enumValues={null} examples={[{\n            \"message.ip_cidr_contains\": \"10.0.0.0/8\"\n          }, {\n            \"message.ip_cidr_contains\": [\"2000::/10\", \"192.168.0.0/16\"]\n          }]} groups={[]} name={\"`[field_name]`.ip_cidr_contains\"} path={\"ends_when\"} relevantWhen={{\n            \"type\": \"check_fields\"\n          }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field_nameip_cidr_contains\"\n            }}><inlineCode parentName=\"h4\">{`[field_name]`}</inlineCode>{`.ip_cidr_contains`}</h4>\n            <p>{`Checks whether an IP field is contained within a given `}<a parentName=\"p\" {...{\n                \"href\": \"https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\"\n              }}>{`IP CIDR`}</a>{`\n(works with IPv4 and IPv6). This may be a single string or a list of strings,\nin which case this evaluates to true if the IP field is contained within any of\nthe CIDRs in the list.`}</p>\n          </Field>\n          <Field common={true} defaultValue={null} enumValues={null} examples={[{\n            \"message.regex\": \" (any|of|these|five|words) \"\n          }]} groups={[]} name={\"`[field_name]`.regex\"} path={\"ends_when\"} relevantWhen={{\n            \"type\": \"check_fields\"\n          }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field_nameregex\"\n            }}><inlineCode parentName=\"h4\">{`[field_name]`}</inlineCode>{`.regex`}</h4>\n            <p>{`Checks whether a string field matches a `}<a parentName=\"p\" {...{\n                \"href\": \"https://en.wikipedia.org/wiki/Regular_expression\"\n              }}>{`regular expression`}</a>{`.\nVector uses the `}<a parentName=\"p\" {...{\n                \"href\": \"https://docs.rs/regex/1.3.6/regex/#syntax\"\n              }}>{`documented Rust Regex syntax`}</a>{`. Note\nthat this condition is considerably more expensive than a regular string match\n(such as `}<inlineCode parentName=\"p\">{`starts_with`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`contains`}</inlineCode>{`) so the use of those conditions are\npreferred where possible.`}</p>\n          </Field>\n          <Field common={true} defaultValue={null} enumValues={null} examples={[{\n            \"environment.starts_with\": \"staging-\"\n          }, {\n            \"environment.starts_with\": [\"staging-\", \"running-\"]\n          }]} groups={[]} name={\"`[field_name]`.starts_with\"} path={\"ends_when\"} relevantWhen={{\n            \"type\": \"check_fields\"\n          }} required={false} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field_namestarts_with\"\n            }}><inlineCode parentName=\"h4\">{`[field_name]`}</inlineCode>{`.starts_with`}</h4>\n            <p>{`Checks whether a string field starts with a string argument. This may be a\nsingle string or a list of strings, in which case this evaluates to true if any\nof the list matches.`}</p>\n          </Field>\n        </Fields>\n      </Field>\n      <Field common={false} defaultValue={30000} enumValues={null} examples={[30000]} groups={[]} name={\"expire_after_ms\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"int\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"expire_after_ms\"\n        }}>{`expire_after_ms`}</h3>\n        <p>{`A maximum period of time to wait after the last event is received before a\ncombined event should be considered complete.`}</p>\n      </Field>\n      <Field common={false} defaultValue={1000} enumValues={null} examples={[1000]} groups={[]} name={\"flush_period_ms\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"int\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"flush_period_ms\"\n        }}>{`flush_period_ms`}</h3>\n        <p>{`Controls the frequency that Vector checks for (and flushes) expired events.`}</p>\n      </Field>\n      <Field common={true} defaultValue={[]} enumValues={null} examples={[[\"request_id\"], [\"user_id\", \"transaction_id\"]]} groups={[]} name={\"identifier_fields\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"[string]\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"identifier_fields\"\n        }}>{`identifier_fields`}</h3>\n        <p>{`An ordered list of fields by which to group events. Each group is combined\nindependently, allowing you to keep independent events separate. When no fields\nare specified, all events will be combined in a single group. Events missing a\nspecified field will be combined in their own group.`}</p>\n      </Field>\n      <Field common={false} defaultValue={null} enumValues={null} examples={[]} groups={[]} name={\"merge_strategies\"} path={null} relevantWhen={null} required={false} templateable={false} type={\"table\"} unit={null} warnings={[]} mdxType=\"Field\">\n        <h3 {...{\n          \"id\": \"merge_strategies\"\n        }}>{`merge_strategies`}</h3>\n        <p>{`A map of field names to custom merge strategies. For each field specified this\nstrategy will be used for combining events rather than the default behavior.`}</p>\n        <p>{`The default behavior is as follows:`}</p>\n        <ol>\n          <li parentName=\"ol\">{`The first value of a string field is kept, subsequent values are discarded.`}</li>\n          <li parentName=\"ol\">{`For timestamp fields the first is kept and a new field `}<inlineCode parentName=\"li\">{`[field-name]_end`}</inlineCode>{` is\nadded with the last received timestamp value.`}</li>\n          <li parentName=\"ol\">{`Numeric values are summed.`}</li>\n        </ol>\n        <Fields filters={false} mdxType=\"Fields\">\n          <Field common={true} defaultValue={null} enumValues={{\n            \"array\": \"Each value is appended to an array.\",\n            \"concat\": \"Concatenate each string value (delimited with a space).\",\n            \"discard\": \"Discard all but the first value found.\",\n            \"sum\": \"Sum all numeric values.\",\n            \"max\": \"The maximum of all numeric values.\",\n            \"min\": \"The minimum of all numeric values.\"\n          }} examples={[{\n            \"method\": \"discard\"\n          }, {\n            \"path\": \"discard\"\n          }, {\n            \"duration_ms\": \"sum\"\n          }, {\n            \"query\": \"array\"\n          }]} groups={[]} name={\"`[field-name]`\"} path={\"merge_strategies\"} relevantWhen={null} required={true} templateable={false} type={\"string\"} unit={null} warnings={[]} mdxType=\"Field\">\n            <h4 {...{\n              \"id\": \"field-name\"\n            }}><inlineCode parentName=\"h4\">{`[field-name]`}</inlineCode></h4>\n            <p>{`The custom merge strategy to use for a field.`}</p>\n          </Field>\n        </Fields>\n      </Field>\n    </Fields>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Tabs block={true} defaultValue=\"default\" select={false} values={[{\n      \"label\": \"Default\",\n      \"value\": \"default\"\n    }, {\n      \"label\": \"With Identifier Fields\",\n      \"value\": \"with-identifier-fields\"\n    }]} mdxType=\"Tabs\">\n      <TabItem value=\"default\" mdxType=\"TabItem\">\n        <p>{`Given the following configuration:`}</p>\n        <CodeHeader fileName=\"vector.toml\" mdxType=\"CodeHeader\" />\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\"\n          }}>{`[transforms.transaction_events]\n  type = \"reduce\"\n  inputs = [...]\n`}</code></pre>\n        <p>{`And these three `}<a parentName=\"p\" {...{\n            \"href\": \"/docs/about/data-model/log/\"\n          }}><inlineCode parentName=\"a\">{`log`}</inlineCode>{` events`}</a>{`:`}</p>\n        <CodeHeader fileName=\"first log event\" mdxType=\"CodeHeader\" />\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`{\n  \"message\": \"A thing is happening\",\n  \"custom_string_field_1\": \"value1\",\n  \"this_much\": 1\n}\n`}</code></pre>\n        <p>{`Followed by:`}</p>\n        <CodeHeader fileName=\"second log event\" mdxType=\"CodeHeader\" />\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`{\n  \"message\": \"That thing is still happening\",\n  \"custom_string_field_2\": \"value2\",\n  \"this_much\": 3\n}\n`}</code></pre>\n        <p>{`And, finally:`}</p>\n        <CodeHeader fileName=\"third log event\" mdxType=\"CodeHeader\" />\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`{\n  \"message\": \"That thing is concluded\",\n  \"custom_string_field_3\": \"value3\",\n  \"this_much\": 2\n}\n`}</code></pre>\n        <p>{`A single log event will eventually be produced:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`{\n  \"message\": \"A thing is happening\",\n  \"custom_string_field_1\": \"value1\",\n  \"custom_string_field_2\": \"value2\",\n  \"custom_string_field_3\": \"value3\",\n  \"this_much\": 6\n}\n`}</code></pre>\n        <p>{`Notice that string values have not been overridden and integer values have been summed.`}</p>\n      </TabItem>\n      <TabItem value=\"with-identifier-fields\" mdxType=\"TabItem\">\n        <p>{`Given the following configuration:`}</p>\n        <CodeHeader fileName=\"vector.toml\" mdxType=\"CodeHeader\" />\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-toml\"\n          }}>{`[transforms.transaction_events]\n  type = \"reduce\"\n  inputs = [...]\n\n  identifier_fields = [\"request_id\"]\n\n  [transforms.transaction_events.merge_strategies]\n    request_action = \"array\"\n\n  [transforms.transaction_events.ends_when]\n    \"request_concluded.exists\" = true\n`}</code></pre>\n        <p>{`And these three `}<a parentName=\"p\" {...{\n            \"href\": \"/docs/about/data-model/log/\"\n          }}><inlineCode parentName=\"a\">{`log`}</inlineCode>{` events`}</a>{`:`}</p>\n        <CodeHeader fileName=\"first log event\" mdxType=\"CodeHeader\" />\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`{\n  \"message\": \"A thing is happening\",\n  \"request_id\": \"1\",\n  \"request_action\": \"start\",\n  \"this_much\": 1\n}\n`}</code></pre>\n        <p>{`Followed by:`}</p>\n        <CodeHeader fileName=\"second log event\" mdxType=\"CodeHeader\" />\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`{\n  \"message\": \"That thing is still happening\",\n  \"request_id\": \"1\",\n  \"request_action\": \"bounced\",\n  \"this_much\": 2\n}\n`}</code></pre>\n        <p>{`And:`}</p>\n        <CodeHeader fileName=\"third log event\" mdxType=\"CodeHeader\" />\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`{\n  \"message\": \"A different thing is happening\",\n  \"request_id\": \"2\",\n  \"request_action\": \"start\",\n  \"this_much\": 5\n}\n`}</code></pre>\n        <p>{`And, finally:`}</p>\n        <CodeHeader fileName=\"fourth log event\" mdxType=\"CodeHeader\" />\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`{\n  \"message\": \"That thing concluded\",\n  \"request_id\": \"1\",\n  \"request_action\": \"rebound\",\n  \"request_concluded\": true,\n  \"this_much\": 3\n}\n`}</code></pre>\n        <p>{`A single log event will be produced and flushed immediately:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`{\n  \"message\": \"A thing is happening\",\n  \"request_id\": \"1\",\n  \"request_action\": [\"start\",\"bounced\",\"rebound\"]\n  \"request_concluded\": true,\n  \"this_much\": 6\n}\n`}</code></pre>\n        <p>{`Notice that the fields from the third event are not present as it has been identified as a separate transaction and will be aggregated separately. Also, the values of the field `}<inlineCode parentName=\"p\">{`request_action`}</inlineCode>{` have been stored in an array instead of the default behavior.`}</p>\n      </TabItem>\n    </Tabs>\n    <h2 {...{\n      \"id\": \"how-it-works\"\n    }}>{`How It Works`}</h2>\n    <h3 {...{\n      \"id\": \"complex-processing\"\n    }}>{`Complex Processing`}</h3>\n    <p>{`If you encounter limitations with the `}<inlineCode parentName=\"p\">{`reduce`}</inlineCode>{`\ntransform then we recommend using a `}<a parentName=\"p\" {...{\n        \"href\": \"https://vector.dev/components/?functions%5B%5D=program\"\n      }}>{`runtime transform`}</a>{`.\nThese transforms are designed for complex processing and give you the power of\nfull programming runtime.`}</p>\n    <h3 {...{\n      \"id\": \"environment-variables\"\n    }}>{`Environment Variables`}</h3>\n    <p>{`Environment variables are supported through all of Vector's configuration.\nSimply add `}<inlineCode parentName=\"p\">{`\\${MY_ENV_VAR}`}</inlineCode>{` in your Vector configuration file and the variable\nwill be replaced before being evaluated.`}</p>\n    <p>{`You can learn more in the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/setup/configuration/#environment-variables\"\n      }}>{`Environment Variables`}</a>{` section.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}